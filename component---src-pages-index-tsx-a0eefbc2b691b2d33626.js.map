{"version":3,"sources":["webpack:///./src/components/main/hero/HeroSection.tsx","webpack:///./src/components/main/application/Preview.tsx","webpack:///./src/components/main/application/Intro.tsx","webpack:///./src/components/main/common/SeeMoreButton.tsx","webpack:///./src/components/main/application/Application.tsx","webpack:///./src/components/main/application/ApplicationSection.tsx","webpack:///./src/components/main/component/Icons.tsx","webpack:///./src/components/main/component/Intro.tsx","webpack:///./src/components/main/component/ComponentSection.tsx","webpack:///./src/components/main/tool/ToolSection.tsx","webpack:///./src/components/main/document/SeeAllLink.tsx","webpack:///./src/components/main/document/FeGuide.tsx","webpack:///./src/components/main/document/Tag.tsx","webpack:///./src/components/main/document/Title.tsx","webpack:///./src/components/main/document/Date.tsx","webpack:///./src/components/main/document/WeeklyItem.tsx","webpack:///./src/components/main/document/WeeklyPick.tsx","webpack:///./src/components/main/document/DocumentSection.tsx","webpack:///./src/components/main/reference/ReferenceSection.tsx","webpack:///./src/pages/index.tsx"],"names":["Wrapper","styled","div","Slogan","Title","Description","Text","p","HighlightText","span","LinkText","MobileLinkWrapper","MobileLinkArea","urlLinks","isKorean","feGuideUrl","KO","EN","weeklyPickUrl","MobileLink","ga","createGA","Link","type","url","label","HeroSectionComponent","PreviewArea","WebPreviewArea","MobilePreviewArea","Header","HeaderDecoration","ImageArea","ImageWrapper","Image","img","Preview","src","WebPreview","id","MobilePreview","Intro","ApplicationIcon","Icon","Name","nameColor","MobileDescription","IntroComponent","introItem","item","color","name","detailDesc","description","iconType","data-testid","SeeMore","MobileWrapper","SeeMoreButton","buttonItem","testId","className","MobileSeeMoreButton","index","WebWrapper","buttonColors","Application","getApplicationIconType","ApplicationSection","items","map","key","IconArea","List","Component","ListItem","ComponentIcon","h3","Icons","iconItems","replace","toUpperCase","h2","Content","ComponentSection","HeaderArea","ToolArea","Tool","ToolIcon","Tools","link","ToolSection","toolItems","LinkContent","SeeAllLink","TitleArea","LinkArea","ListArea","FeGuide","guideUrl","title","Tag","tag","language","prefix","WeeklyTitle","Date","date","Item","WeeklyPick","weeklyUrl","DocumentSection","guideItems","weeklyItems","ReferenceIconWidth","TOAST_CLOUD_BI","TOAST_FILE_BI","DOORAY_BI","NCP_BI","ReferenceTitle","ReferenceIconArea","ReferenceIcon","Reference","concat","ReferenceSection","Index","useStaticQuery","allProductsJson","allDescriptionsJson","allPosts","allEnPosts","allGuides","allEnGuides","createProductSectionData","application","component","tool","references","weeklyData","weeklySectionData","edges","node","frontmatter","tags","guideData","guideSectionData","componentDescription","find","console","log","SEO","HeroSection","SitemapSection"],"mappings":"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","file":"component---src-pages-index-tsx-a0eefbc2b691b2d33626.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { UrlLinks } from '@t/components';\nimport { isKorean } from '@/util';\nimport { feGuideUrl, weeklyPickUrl } from '@/constant';\nimport { Link } from '@/components/common/Link';\nimport createGA from '@/components/common/createGA';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 69px auto 0;\n  padding: 10% 8.3%;\n  background-color: #fff;\n  background: url(https://uicdn.toast.com/toastui/img/toast-ui-hero1920.png) center/cover no-repeat;\n\n  @media (max-width: 1200px) {\n    padding: 12% 2.5%;\n    background: url(https://uicdn.toast.com/toastui/img/toast-ui-hero1200.png) center/cover\n      no-repeat;\n  }\n\n  @media (max-width: 768px) {\n    padding: 20% 2.5%;\n    background: url(https://uicdn.toast.com/toastui/img/toast-ui-hero768.png) center/cover no-repeat;\n  }\n\n  @media (max-width: 720px) {\n    margin-top: 56px;\n    padding: 50% 5.5%;\n    background: url(https://uicdn.toast.com/toastui/img/toast-ui-hero720.png) center/cover no-repeat;\n  }\n`;\n\nconst Slogan = styled.div`\n  padding: 0 27%;\n\n  @media (max-width: 1200px) {\n    padding: 0 28%;\n  }\n\n  @media (max-width: 768px) {\n    padding: 0 20%;\n  }\n\n  @media (max-width: 720px) {\n    padding: 0 3%;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: calc(38px + (54 - 38) * ((100vw - 1200px) / (1920 - 1200)));\n  font-weight: bold;\n  text-align: center;\n  color: #222;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: 1200px) {\n    font-size: calc(32px + (38 - 32) * ((100vw - 720px) / (1200 - 720)));\n  }\n\n  @media (max-width: 720px) {\n    font-size: 30px;\n  }\n`;\n\nconst Description = styled.div`\n  font-size: calc(18px + (24 - 18) * ((100vw - 1200px) / (1920 - 1200)));\n  margin-top: 25px;\n  text-align: center;\n  color: #444;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: 1200px) {\n    font-size: calc(15px + (18 - 15) * ((100vw - 720px) / (1200 - 720)));\n    margin-top: 18px;\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 10px;\n  }\n\n  @media (max-width: 720px) {\n    margin-top: 3%;\n    font-size: 14px;\n  }\n`;\n\nconst Text = styled.p`\n  margin: 0;\n`;\n\nconst HighlightText = styled.span`\n  color: #515ce6;\n`;\n\nconst LinkText = styled.span`\n  color: #515ce6;\n  text-decoration: underline;\n`;\n\nconst MobileLinkWrapper = styled.div`\n  display: none;\n  width: 89%;\n  margin: 0 auto;\n\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst MobileLinkArea = styled.div`\n  color: #555;\n  background-color: #f4f4f4;\n  padding: 6%;\n  text-align: center;\n  border-radius: 12px;\n  font-size: 14px;\n  line-height: 1.5;\n\n  @media (max-width: 720px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst urlLinks: UrlLinks = {\n  'fe guide': isKorean ? feGuideUrl.KO : feGuideUrl.EN,\n  'weekly pick': isKorean ? weeklyPickUrl.KO : weeklyPickUrl.EN,\n};\n\nconst MobileLink: React.FC = () => {\n  const ga = createGA('Main - mobile hero link', 'click', 'link');\n\n  return (\n    <MobileLinkWrapper>\n      <MobileLinkArea>\n        <Text>\n          We provides&nbsp;\n          <Link\n            type=\"internal\"\n            url={urlLinks['fe guide']}\n            ga={{ ...ga, label: 'link - mobile hero fe guide link' }}\n          >\n            <LinkText>FE Development Guides</LinkText>\n          </Link>\n          &nbsp;and\n          <br />\n          <Link\n            type=\"internal\"\n            url={urlLinks['weekly pick']}\n            ga={{ ...ga, label: 'link - mobile hero weekly picks link' }}\n          >\n            <LinkText>Weekly Picks</LinkText>\n          </Link>\n          &nbsp;to make your development easier.\n        </Text>\n      </MobileLinkArea>\n    </MobileLinkWrapper>\n  );\n};\n\nconst HeroSectionComponent: React.FC = () => {\n  return (\n    <>\n      <Wrapper>\n        <Slogan>\n          <Title>\n            <Text>\n              Use&nbsp;<HighlightText>TOAST UI</HighlightText>\n            </Text>\n            <Text>to Make Your Web Delicious!</Text>\n          </Title>\n          <Description>\n            <Text>\n              JavaScript UI library and free open source project constantly managed by NHN\n            </Text>\n          </Description>\n        </Slogan>\n      </Wrapper>\n      <MobileLink />\n    </>\n  );\n};\n\nexport default HeroSectionComponent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ApplicationId } from '@t/components';\n\ninterface PreviewProps {\n  id: ApplicationId;\n}\n\ninterface ImageProps {\n  src: string;\n}\n\nconst PreviewArea = styled.div`\n  box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  border: solid 1px #ddd;\n  border-radius: 2px;\n`;\n\nconst WebPreviewArea = styled(PreviewArea)`\n  width: 740px;\n  height: 520px;\n\n  @media (max-width: 1200px) {\n    width: 555px;\n    height: 405px;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst MobilePreviewArea = styled(PreviewArea)`\n  display: none;\n\n  @media (max-width: 768px) {\n    display: block;\n    margin-bottom: 30px;\n  }\n\n  @media (max-width: 720px) {\n    margin-bottom: 60px;\n  }\n`;\n\nconst Header = styled.div`\n  height: 22px;\n  background-color: #e5e5e5;\n  padding-top: 8px;\n  text-align: left;\n\n  @media (max-width: 1200px) {\n    height: 23px;\n    padding-top: 6px;\n  }\n\n  @media (max-width: 720px) {\n    height: 23px;\n    padding-top: 8px;\n  }\n`;\n\nconst HeaderDecoration = styled.div`\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background-color: #eee;\n  margin-left: 8px;\n\n  @media (max-width: 1200px) {\n    width: 11px;\n    height: 11px;\n  }\n`;\n\nconst ImageArea = styled.div`\n  height: calc(100% - 29px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 1200px) {\n    height: calc(100% - 30px);\n  }\n\n  @media (max-width: 720px) {\n    display: block;\n    position: relative;\n    width: 100%;\n    height: 0;\n    padding-bottom: 73%;\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  @media (max-width: 720px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nconst Preview: React.FC<ImageProps> = ({ src }) => {\n  const url = `https://uicdn.toast.com/toastui/img/${src}.png`;\n\n  return (\n    <>\n      <Header>\n        <HeaderDecoration />\n        <HeaderDecoration />\n        <HeaderDecoration />\n      </Header>\n      <ImageArea>\n        <ImageWrapper>\n          <Image src={url} />\n        </ImageWrapper>\n      </ImageArea>\n    </>\n  );\n};\n\nexport const WebPreview: React.FC<PreviewProps> = ({ id }) => (\n  <WebPreviewArea>\n    <Preview src={id} />\n  </WebPreviewArea>\n);\n\nexport const MobilePreview: React.FC<PreviewProps> = ({ id }) => (\n  <MobilePreviewArea>\n    <Preview src={`${id}_mobile`} />\n  </MobilePreviewArea>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ApplicationIntroItem } from '@t/components';\nimport { Icon } from '@/components/common/Icon';\n\ninterface NameColorProps {\n  nameColor: string;\n}\n\ninterface IntroProps {\n  introItem: ApplicationIntroItem;\n}\n\nconst Intro = styled.div`\n  @media (max-width: 768px) {\n    margin-top: 40px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n\n  @media (max-width: 720px) {\n    margin-top: 60px;\n    margin-bottom: 30px;\n  }\n`;\n\nconst Header = styled.div`\n  height: 65px;\n  font-size: 42px;\n  display: flex;\n  align-items: center;\n  margin-left: -10px;\n\n  @media (max-width: 1200px) {\n    height: 45px;\n    font-size: 30px;\n    margin-left: -5px;\n  }\n\n  @media (max-width: 720px) {\n    height: 45px;\n    font-size: 28px;\n    margin: 0;\n  }\n`;\n\nconst ApplicationIcon = styled(Icon)`\n  width: 60px;\n  height: 60px;\n\n  @media (max-width: 1200px) {\n    width: 45px;\n    height: 45px;\n  }\n\n  @media (max-width: 720px) {\n    width: 40px;\n    height: 40px;\n    background-size: 1200px;\n  }\n`;\n\nconst Name = styled.div<NameColorProps>`\n  display: inline-block;\n  font-weight: bold;\n  margin-left: 15px;\n\n  color: ${({ nameColor }): string => nameColor};\n\n  @media (max-width: 1200px) {\n    margin-left: 5px;\n  }\n`;\n\nconst Description = styled.p`\n  font-size: 18px;\n  line-height: 30px;\n  color: #555;\n  margin: 20px 0;\n\n  @media (max-width: 1200px) {\n    font-size: 13px;\n    line-height: 22px;\n    margin: 15px 0 30px;\n  }\n\n  @media (max-width: 768px) {\n    text-align: left;\n    margin-bottom: 30px;\n  }\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst MobileDescription = styled.div`\n  display: none;\n  color: #555;\n  margin-top: 20px;\n  font-size: 14px;\n  line-height: 1.5;\n  text-align: left;\n\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst IntroComponent: React.FC<IntroProps> = ({ introItem }) => {\n  const { item, color, type } = introItem;\n  const { name, detailDesc, description } = item;\n\n  return (\n    <Intro>\n      <Header>\n        <ApplicationIcon iconType={type} />\n        <Name nameColor={color} data-testid=\"application-name-list\">\n          {name}\n        </Name>\n      </Header>\n      <Description>{detailDesc}</Description>\n      <MobileDescription>{description}</MobileDescription>\n    </Intro>\n  );\n};\n\nexport default IntroComponent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ButtonItem } from '@t/components';\nimport { InlineBlockLink } from '@/components/common/Link';\n\ninterface SeeMoreButtonProps {\n  buttonItem: ButtonItem;\n}\n\ninterface SeeMoreProps {\n  color: string;\n}\n\nconst SeeMore = styled.span<SeeMoreProps>`\n  display: inline-block;\n  width: 160px;\n  height: 50px;\n  line-height: 50px;\n  border-radius: 5px;\n  font-size: 18px;\n  font-weight: bold;\n  line-height: 50px;\n  padding: 0;\n  margin: 0 auto;\n  text-align: center;\n  color: ${({ color }): string => color};\n  border: ${({ color }): string => `2px solid ${color}`};\n\n  &:hover,\n  &:active {\n    color: #fff;\n    background-color: ${({ color }): string => color};\n  }\n\n  @media (max-width: 1200px) {\n    width: 120px;\n    height: 38px;\n    line-height: 38px;\n    border-radius: 4px;\n    font-size: 13px;\n  }\n\n  @media (max-width: 720px) {\n    position: absolute;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    border-radius: 8px;\n    font-size: 14px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: ${({ color }): string => `3px solid ${color}`};\n  }\n`;\n\nconst MobileWrapper = styled.div`\n  display: none;\n\n  @media (max-width: 720px) {\n    display: block;\n    text-align: center;\n  }\n`;\n\nexport const SeeMoreButton: React.FC<SeeMoreButtonProps> = ({\n  buttonItem: { url, color, ga, testId },\n}) => (\n  <InlineBlockLink type=\"internal\" url={url} ga={ga} testId={testId} className=\"see-more\">\n    <SeeMore color={color ?? '#515ce6'}>See more</SeeMore>\n  </InlineBlockLink>\n);\n\nexport const MobileSeeMoreButton: React.FC<SeeMoreButtonProps> = ({ buttonItem }) => (\n  <MobileWrapper>\n    <SeeMoreButton buttonItem={{ ...buttonItem, color: '#515ce6' }} />\n  </MobileWrapper>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ButtonItem, ApplicationIntroItem, ProductInfo, ApplicationId } from '@t/components';\nimport { getApplicationIconType } from '@/util';\nimport { MobilePreview, WebPreview } from '@/components/main/application/Preview';\nimport Intro from '@/components/main/application/Intro';\nimport { SeeMoreButton as ApplicationButton } from '@/components/main/common/SeeMoreButton';\nimport createGA from '@/components/common/createGA';\n\ninterface WrapperProps {\n  index: number;\n}\n\ninterface ApplicationProps {\n  item: ProductInfo;\n  index: number;\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  padding: 100px 0;\n  display: flex;\n  flex-direction: ${({ index }): string => (index % 2 ? 'row-reverse' : '')};\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ index }): string => (index % 2 ? '#f9f9f9' : '')};\n\n  @media (max-width: 1200px) {\n    padding: 75px 0;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column-reverse;\n    justify-content: flex-end;\n    padding: 40px 0;\n  }\n\n  @media (max-width: 720px) {\n    padding: 0 0 14%;\n    margin: 0 auto;\n  }\n`;\n\nconst WebWrapper = styled.div<WrapperProps>`\n  width: 35%;\n  max-width: 420px;\n  margin-right: ${({ index }): string => (index % 2 ? '' : '40px')};\n  margin-left: ${({ index }): string => (index % 2 ? '40px' : '')};\n\n  @media (max-width: 1200px) {\n    width: 26%;\n    max-width: 315px;\n    margin-right: ${({ index }): string => (index % 2 ? '' : '30px')};\n    margin-left: ${({ index }): string => (index % 2 ? '30px' : '')};\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    max-width: 555px;\n    margin: 0;\n    text-align: center;\n  }\n\n  @media (max-width: 720px) {\n    max-width: none;\n    width: 89%;\n\n    & .see-more {\n      position: relative;\n      width: 50%;\n      height: 0;\n      padding-bottom: 15%;\n    }\n  }\n`;\n\nconst buttonColors = ['#03bd9e', '#00a9ff', '#ff5883', '#ff6618', '#ffbc00'];\n\nconst Application: React.FC<ApplicationProps> = ({ item, index }) => {\n  const { id } = item;\n  const color = buttonColors[index];\n  const introItem: ApplicationIntroItem = {\n    index,\n    item,\n    color,\n    type: getApplicationIconType(id as ApplicationId),\n  };\n  const buttonItem: ButtonItem = {\n    url: `/${id}`,\n    color,\n    ga: createGA('Main - Application', 'click', 'Application button', id),\n    testId: 'application-link-list',\n  };\n\n  return (\n    <Wrapper index={index}>\n      <WebWrapper index={index}>\n        <Intro introItem={introItem} />\n        <MobilePreview id={id as ApplicationId} />\n        <ApplicationButton buttonItem={buttonItem} />\n      </WebWrapper>\n      <WebPreview id={id as ApplicationId} />\n    </Wrapper>\n  );\n};\n\nexport default Application;\n","import React from 'react';\n\nimport { ProductInfo } from '@t/components';\nimport Application from '@/components/main/application/Application';\n\ninterface ApplicationSectionProps {\n  items: ProductInfo[];\n}\n\nconst ApplicationSection: React.FC<ApplicationSectionProps> = ({ items }) => (\n  <>\n    {items.map((item, index) => (\n      <Application item={item} index={index} key={item.id} />\n    ))}\n  </>\n);\n\nexport default ApplicationSection;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ComponentIconItem } from '@t/components';\nimport { IconType } from '@t/styles';\nimport { BlockLink } from '@/components/common/Link';\nimport { List, ListItem } from '@/components/common/List';\nimport { Icon } from '@/components/common/Icon';\nimport createGA from '@/components/common/createGA';\n\ninterface IconsProps {\n  iconItems: ComponentIconItem[];\n}\n\nconst IconArea = styled(List)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  width: 650px;\n\n  @media (max-width: 768px) {\n    width: 560px;\n    margin-top: 50px;\n  }\n`;\n\nconst Component = styled(ListItem)`\n  width: 100px;\n  height: 90px;\n  text-align: center;\n  margin: 25px;\n\n  &:hover h3 {\n    color: #515ce6;\n  }\n\n  &:hover i {\n    background-position-y: 21.25%;\n  }\n\n  @media (max-width: 1200px) {\n    margin: 20px;\n  }\n`;\n\nconst ComponentIcon = styled(Icon)`\n  width: 70px;\n  height: 70px;\n\n  @media (max-width: 1200px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nconst Name = styled.h3`\n  font-size: 16px;\n  font-weight: bold;\n  color: #222;\n  margin: 0;\n\n  @media (max-width: 1200px) {\n    font-size: 12px;\n  }\n`;\n\nconst Icons: React.FC<IconsProps> = ({ iconItems }) => {\n  const ga = createGA('Main - component', 'click', 'Component icon');\n\n  return (\n    <IconArea>\n      {iconItems.map(({ id, name }) => {\n        const type = `${name.replace(' ', '_').toUpperCase()}_BI` as IconType;\n\n        return (\n          <Component key={id}>\n            <BlockLink\n              type=\"internal\"\n              url={`/${id}`}\n              ga={{ ...ga, label: `Component icon - ${name}` }}\n              testId=\"component-link-list\"\n            >\n              <ComponentIcon iconType={type} />\n              <Name>{name}</Name>\n            </BlockLink>\n          </Component>\n        );\n      })}\n    </IconArea>\n  );\n};\n\nexport default Icons;\n","import styled from 'styled-components';\nimport React from 'react';\n\ninterface IntroProps {\n  description: string;\n}\n\nconst Wrapper = styled.div`\n  width: 420px;\n\n  @media (max-width: 1200px) {\n    width: 315px;\n  }\n\n  @media (max-width: 768px) {\n    width: 560px;\n  }\n`;\n\nconst Header = styled.h2`\n  font-size: 42px;\n  color: #222;\n  margin: 0 0 10px;\n`;\n\nconst Description = styled.p`\n  font-size: 18px;\n  line-height: 30px;\n  color: #555;\n  margin: 0;\n\n  @media (max-width: 1200px) {\n    font-size: 13px;\n  }\n\n  @media (max-width: 768px) {\n    line-height: 22px;\n  }\n`;\n\nconst Intro: React.FC<IntroProps> = ({ description }) => {\n  return (\n    <Wrapper>\n      <Header>Components</Header>\n      <Description>{description}</Description>\n    </Wrapper>\n  );\n};\n\nexport default Intro;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ProductInfo } from '@t/components';\nimport Icons from '@/components/main/component/Icons';\nimport Intro from '@/components/main/component/Intro';\n\ninterface ComponentSectionProps {\n  items: ProductInfo[];\n  description: string;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f9f9f9;\n  padding: 100px 0;\n\n  @media (max-width: 1200px) {\n    padding: 80px 0;\n  }\n\n  @media (max-width: 768px) {\n    padding: 50px 0;\n  }\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 1200px;\n  width: 62.5%;\n\n  @media (max-width: 1200px) {\n    max-width: 900px;\n    width: 75%;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 65%;\n  }\n`;\n\nconst ComponentSection: React.FC<ComponentSectionProps> = ({ items, description }) => {\n  const iconItems = items.map(({ id, name }) => ({ id, name }));\n\n  return (\n    <Wrapper>\n      <Content>\n        <Intro description={description} />\n        <Icons iconItems={iconItems} />\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default ComponentSection;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ProductInfo, ToolIconItem } from '@t/components';\nimport { IconType } from '@t/styles';\nimport { Icon } from '@/components/common/Icon';\nimport { BlockLink } from '@/components/common/Link';\nimport createGA from '@/components/common/createGA';\n\ninterface ToolSectionProps {\n  items: ProductInfo[];\n}\n\ninterface ToolsProps {\n  items: ToolIconItem[];\n}\n\nconst Wrapper = styled.div`\n  padding: 90px 0 140px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: 1200px) {\n    padding: 70px 0 105px;\n  }\n\n  @media (max-width: 768px) {\n    height: 427px;\n  }\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst HeaderArea = styled.div`\n  max-width: 1200px;\n  width: 62.5%;\n  margin-bottom: 60px;\n\n  @media (max-width: 1200px) {\n    max-width: 900px;\n    width: 75%;\n    margin-bottom: 45px;\n  }\n\n  @media (max-width: 768px) {\n    width: 560px;\n    margin-bottom: 30px;\n  }\n`;\n\nconst Header = styled.h2`\n  font-size: 42px;\n  color: #222;\n  margin: 0;\n`;\n\nconst ToolArea = styled.div`\n  max-width: 1200px;\n  width: 62.5%;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  & a {\n    margin-left: 40px;\n    width: 100%;\n  }\n\n  & a:first-child {\n    margin: 0;\n  }\n\n  @media (max-width: 1200px) {\n    max-width: 900px;\n    width: 75%;\n\n    & a {\n      margin-left: 30px;\n    }\n  }\n\n  @media (max-width: 768px) {\n    max-width: 550px;\n\n    & a {\n      margin-left: 20px;\n    }\n  }\n`;\n\nconst Tool = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  &:hover h3 {\n    color: #515ce6;\n  }\n`;\n\nconst ToolIcon = styled(Icon)`\n  width: 190px;\n  height: 190px;\n  margin-bottom: 15px;\n\n  @media (max-width: 1200px) {\n    width: 135px;\n    height: 135px;\n    margin-bottom: 10px;\n  }\n`;\n\nconst Name = styled.h3`\n  font-size: 18px;\n  font-weight: bold;\n  color: #222;\n  margin: 0;\n  margin-bottom: 5%;\n\n  @media (max-width: 1200px) {\n    font-size: 14px;\n  }\n`;\n\nconst Description = styled.p`\n  text-align: center;\n  font-size: 18px;\n  color: #777;\n  margin: 0;\n  width: 100%;\n\n  @media (max-width: 1200px) {\n    font-size: 13px;\n  }\n`;\n\nconst Tools: React.FC<ToolsProps> = ({ items }) => {\n  const ga = createGA('Main - Tool', 'click', 'Tool icon');\n\n  return (\n    <ToolArea>\n      {items.map(({ id, name, link, description }) => {\n        const type = `${name.toUpperCase().replace(/ /gi, '_')}_BI` as IconType;\n\n        return (\n          <BlockLink\n            type=\"external\"\n            url={link}\n            ga={{ ...ga, label: `Tool icon - ${name}` }}\n            key={id}\n            testId=\"tool-list\"\n          >\n            <Tool>\n              <ToolIcon iconType={type} />\n              <Name data-testid=\"tool-name-list\">{name}</Name>\n              <Description data-testid=\"tool-description-list\">{description}</Description>\n            </Tool>\n          </BlockLink>\n        );\n      })}\n    </ToolArea>\n  );\n};\n\nconst ToolSection: React.FC<ToolSectionProps> = ({ items }) => {\n  const toolItems = items.map(({ id, name, link, description }) => ({\n    id,\n    name,\n    link,\n    description,\n  })) as ToolIconItem[];\n\n  return (\n    <Wrapper>\n      <HeaderArea>\n        <Header>Tools</Header>\n      </HeaderArea>\n      <Tools items={toolItems} />\n    </Wrapper>\n  );\n};\n\nexport default ToolSection;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Link } from '@/components/common/Link';\nimport createGA from '@/components/common/createGA';\n\n// TODO : 4.1 업데이트 시 적용 예정\n// type Url = '/fe-guide/' | '/weekly-pick/';\n//\n// type Language = 'ko' | 'en';\n//\n// type UrlLink = `${Url} ${Language}`;\n\ninterface SeeAllLinkProps {\n  url: '/fe-guide/ko' | '/fe-guide/en' | '/weekly-pick/ko' | '/weekly-pick/en';\n}\n\nconst LinkContent = styled.span`\n  color: #526fff;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst SeeAllLink: React.FC<SeeAllLinkProps> = ({ url }) => {\n  const ga = createGA('Main - see all(FE Guide, Weekly Picks', 'click', 'See all link', url);\n\n  return (\n    <Link type=\"internal\" url={url} ga={ga}>\n      <LinkContent>see all</LinkContent>\n    </Link>\n  );\n};\n\nexport default SeeAllLink;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { GuideItem } from '@t/components';\nimport { isKorean } from '@/util';\nimport { feGuideUrl } from '@/constant';\nimport { BlockLink } from '@/components/common/Link';\nimport SeeAllLink from '@/components/main/document/SeeAllLink';\nimport { MobileSeeMoreButton } from '@/components/main/common/SeeMoreButton';\nimport createGA from '@/components/common/createGA';\n\ninterface FeGuideProps {\n  items: GuideItem[];\n}\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  width: 62.5%;\n\n  @media (max-width: 1200px) {\n    max-width: 900px;\n    width: 75%;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 555px;\n    width: 89%;\n\n    & .see-more {\n      position: relative;\n      width: 50%;\n      height: 0;\n      padding-bottom: 12.5%;\n    }\n  }\n`;\n\nconst TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  margin-bottom: 40px;\n\n  @media (max-width: 1200px) {\n    margin-bottom: 30px;\n  }\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n  font-size: 42px;\n  font-weight: bold;\n  color: #222;\n\n  @media (max-width: 1200px) {\n    font-size: 30px;\n  }\n\n  @media (max-width: 720px) {\n    font-size: 28px;\n  }\n`;\n\nconst LinkArea = styled.div`\n  width: 60px;\n  font-size: 18px;\n  font-weight: 500;\n  text-align: end;\n\n  @media (max-width: 1200px) {\n    font-size: 14px;\n  }\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst ListArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst LinkContent = styled.div`\n  display: flex;\n  width: 277px;\n  height: 66px;\n  margin: 10px 0;\n  border-radius: 8px;\n  border: 1px solid #e1e1e1;\n  background-color: #f4f4f4;\n  font-size: 18px;\n  color: #222;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    color: #fff;\n    background-color: #515ce6;\n  }\n\n  @media (max-width: 1200px) {\n    width: 206px;\n    height: 50px;\n    margin: 7px 0;\n    border-radius: 6px;\n    font-size: 13px;\n  }\n\n  @media (max-width: 768px) {\n    width: 175px;\n    height: 50px;\n  }\n`;\n\nconst MobileDescription = styled.p`\n  display: none;\n  margin: 0;\n  font-size: 14px;\n  line-height: 2;\n  color: #555;\n  margin-bottom: 44px;\n\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst FeGuide: React.FC<FeGuideProps> = ({ items }) => {\n  const guideUrl = isKorean ? feGuideUrl.KO : feGuideUrl.EN;\n  const ga = createGA('Main - FE Guide', 'click', 'FE Guide');\n\n  return (\n    <Wrapper>\n      <TitleArea>\n        <Title>FE Guide</Title>\n        <LinkArea>\n          <SeeAllLink url={guideUrl} />\n        </LinkArea>\n      </TitleArea>\n      <ListArea>\n        {items.map(({ url, id, title }) => (\n          <BlockLink\n            type=\"internal\"\n            url={url}\n            key={id}\n            ga={{ ...ga, label: `FE Guide - ${title}` }}\n            testId=\"guide-list\"\n          >\n            <LinkContent>{title}</LinkContent>\n          </BlockLink>\n        ))}\n      </ListArea>\n      <MobileDescription>\n        {\n          'Our Front End Guides are there to help you get through your development. With our FE Guides, you have full access to our database of front end development know-hows.'\n        }\n      </MobileDescription>\n      <MobileSeeMoreButton\n        buttonItem={{ url: guideUrl, ga: { ...ga, label: 'FE Guide - Mobile more button' } }}\n      />\n    </Wrapper>\n  );\n};\n\nexport default FeGuide;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { weeklyPickUrl } from '@/constant';\nimport { BlockLink } from '@/components/common/Link';\nimport createGA from '@/components/common/createGA';\n\ninterface TagProps {\n  tag: string;\n  language: 'ko' | 'en';\n}\n\nconst LinkContent = styled.div`\n  height: 30px;\n  line-height: 30px;\n  padding: 0 15px;\n  border-radius: 5px;\n  border: 1px solid #d8d8d8;\n  background-color: #fff;\n  font-size: 16px;\n  font-weight: 500;\n  color: #222;\n\n  &:hover {\n    border: 1px solid #b0b6ff;\n    background-color: #edeeff;\n  }\n\n  @media (max-width: 1200px) {\n    height: 23px;\n    line-height: 23px;\n    border-radius: 4px;\n    font-size: 12px;\n  }\n\n  @media (max-width: 720px) {\n    border-radius: 5px;\n    height: auto;\n    font-size: 11px;\n    line-height: 2;\n  }\n`;\n\nconst Tag: React.FC<TagProps> = ({ tag, language }) => {\n  const prefix = `${weeklyPickUrl[language.toUpperCase() as 'KO' | 'EN']}`;\n  const ga = createGA('Main - Weekly Picks', 'click', 'Weekly Pick Tag', tag);\n\n  return (\n    <BlockLink type=\"internal\" url={`${prefix}/${tag}`} ga={ga}>\n      <LinkContent>{`#${tag}`}</LinkContent>\n    </BlockLink>\n  );\n};\n\nexport default Tag;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { InlineBlockLink } from '@/components/common/Link';\nimport createGA from '@/components/common/createGA';\n\ninterface TitleProps {\n  title: string;\n  url: string;\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin-left: 15px;\n  text-overflow: ellipsis;\n\n  @media (max-width: 720px) {\n    margin: 15px 0 5px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  color: #222;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  @media (max-width: 1200px) {\n    font-size: 13px;\n  }\n\n  @media (max-width: 720px) {\n    font-size: 14px;\n    line-height: 2;\n    font-weight: bold;\n  }\n`;\n\nconst WeeklyTitle: React.FC<TitleProps> = ({ title, url }) => {\n  const ga = createGA('Main - Weekly Picks', 'click', 'weekly pick post', title);\n\n  return (\n    <Wrapper>\n      <InlineBlockLink type=\"internal\" url={url} ga={ga}>\n        <Title>{title}</Title>\n      </InlineBlockLink>\n    </Wrapper>\n  );\n};\n\nexport default WeeklyTitle;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface DateProps {\n  date: string;\n}\n\nconst Wrapper = styled.div`\n  font-size: 16px;\n  color: #777;\n  text-align: end;\n\n  @media (max-width: 1200px) {\n    font-size: 12px;\n  }\n\n  @media (max-width: 720px) {\n    font-size: 12px;\n    text-align: start;\n  }\n`;\n\nconst Date: React.FC<DateProps> = ({ date }) => {\n  return <Wrapper>{date}</Wrapper>;\n};\n\nexport default Date;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { WeeklyItem } from '@t/components';\nimport { isKorean } from '@/util';\nimport Tag from '@/components/main/document/Tag';\nimport Title from '@/components/main/document/Title';\nimport Date from '@/components/main/document/Date';\n\ninterface WeeklyItemProps {\n  item: WeeklyItem;\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  margin: 15px 0;\n\n  @media (max-width: 720px) {\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin: 0;\n    padding: 40px 0;\n    border-bottom: 1px solid #ddd;\n  }\n`;\n\nconst Item: React.FC<WeeklyItemProps> = ({ item }) => {\n  return (\n    <Wrapper data-testid=\"weekly-list\">\n      <Tag tag={item.tag} language={isKorean ? 'ko' : 'en'} />\n      <Title title={item.title} url={item.url} />\n      <Date date={item.date} />\n    </Wrapper>\n  );\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { WeeklyItem } from '@t/components';\nimport { isKorean } from '@/util';\nimport { weeklyPickUrl } from '@/constant';\nimport Item from '@/components/main/document/WeeklyItem';\nimport SeeAllLink from '@/components/main/document/SeeAllLink';\nimport { MobileSeeMoreButton } from '@/components/main/common/SeeMoreButton';\nimport createGA from '@/components/common/createGA';\n\ninterface WeeklyPickProps {\n  items: WeeklyItem[];\n}\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  width: 62.5%;\n  margin-top: 100px;\n\n  @media (max-width: 1200px) {\n    max-width: 900px;\n    width: 75%;\n    margin-top: 75px;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 555px;\n    margin-top: 55px;\n  }\n\n  @media (max-width: 720px) {\n    margin-top: 100px;\n    width: 89%;\n\n    & .see-more {\n      position: relative;\n      width: 50%;\n      height: 0;\n      padding-bottom: 12.5%;\n    }\n  }\n`;\n\nconst TitleArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  margin-bottom: 50px;\n\n  @media (max-width: 1200px) {\n    margin-bottom: 45px;\n  }\n\n  @media (max-width: 720px) {\n    margin: 0;\n    padding-bottom: 30px;\n    border-bottom: 1px solid #ddd;\n  }\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n  font-size: 42px;\n  font-weight: bold;\n  color: #222;\n\n  @media (max-width: 1200px) {\n    font-size: 30px;\n  }\n\n  @media (max-width: 720px) {\n    font-size: 28px;\n  }\n`;\n\nconst LinkArea = styled.div`\n  width: 60px;\n  font-size: 18px;\n  font-weight: 500;\n  text-align: end;\n\n  @media (max-width: 1200px) {\n    font-size: 14px;\n  }\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst ListArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: 720px) {\n    margin-bottom: 40px;\n  }\n`;\n\nconst WeeklyPick: React.FC<WeeklyPickProps> = ({ items }) => {\n  const weeklyUrl = isKorean ? weeklyPickUrl.KO : weeklyPickUrl.EN;\n  const ga = createGA('Main - Weekly Picks', 'click', 'Weekly Picks');\n\n  return (\n    <Wrapper>\n      <TitleArea>\n        <Title>Weekly Picks</Title>\n        <LinkArea>\n          <SeeAllLink url={weeklyUrl} />\n        </LinkArea>\n      </TitleArea>\n      <ListArea>\n        {items.map((item) => (\n          <Item item={item} key={item.id} />\n        ))}\n      </ListArea>\n      <MobileSeeMoreButton\n        buttonItem={{\n          url: weeklyUrl,\n          ga: { ...ga, label: 'Weekly Picks - Mobile more button' },\n        }}\n      />\n    </Wrapper>\n  );\n};\n\nexport default WeeklyPick;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { GuideItem, WeeklyItem } from '@t/components';\nimport FeGuide from '@/components/main/document/FeGuide';\nimport WeeklyPick from '@/components/main/document/WeeklyPick';\n\ninterface DocumentSectionProps {\n  guideItems: GuideItem[];\n  weeklyItems: WeeklyItem[];\n}\n\nconst Wrapper = styled.div`\n  background-color: #f9f9f9;\n  padding: 100px 0 130px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 1200px) {\n    padding: 75px 0 100px;\n  }\n\n  @media (max-width: 768px) {\n    padding: 50px 0 75px;\n  }\n\n  @media (max-width: 720px) {\n    padding: 8% 0 14%;\n  }\n`;\n\nconst DocumentSection: React.FC<DocumentSectionProps> = ({ guideItems, weeklyItems }) => {\n  return (\n    <Wrapper>\n      <FeGuide items={guideItems} />\n      <WeeklyPick items={weeklyItems} />\n    </Wrapper>\n  );\n};\n\nexport default DocumentSection;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ReferenceItem } from '@t/components';\nimport { ReferenceBI } from '@t/styles';\nimport { InlineBlockLink } from '@/components/common/Link';\nimport createGA from '@/components/common/createGA';\nimport { Icon } from '@/components/common/Icon';\n\nconst ReferenceIconWidth: ReferenceIconWidthProps = {\n  1920: {\n    TOAST_CLOUD_BI: 145,\n    TOAST_FILE_BI: 196,\n    DOORAY_BI: 246,\n    NCP_BI: 145,\n  },\n  1200: {\n    TOAST_CLOUD_BI: 109,\n    TOAST_FILE_BI: 147,\n    DOORAY_BI: 185,\n    NCP_BI: 109,\n  },\n};\n\ninterface ReferenceSectionProps {\n  items: ReferenceItem[];\n}\n\ninterface ReferenceProps {\n  item: ReferenceItem;\n}\n\ninterface ReferenceBIProps {\n  iconType: ReferenceBI;\n}\n\ninterface ReferenceIconWidthProps {\n  1920: {\n    [key in ReferenceBI]: number;\n  };\n  1200: {\n    [key in ReferenceBI]: number;\n  };\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 60px 0;\n  background-color: #deeeff;\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst ReferenceTitle = styled.div`\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.91;\n  color: #222;\n  margin-bottom: 30px;\n\n  @media (max-width: 1200px) {\n    font-size: 16px;\n  }\n`;\n\nconst ReferenceIconArea = styled.div`\n  & a {\n    margin: 0 25px;\n  }\n\n  @media (max-width: 1200px) {\n    & a {\n      margin: 0 19px;\n    }\n  }\n`;\n\nconst ReferenceIcon = styled(Icon)<ReferenceBIProps>`\n  width: ${({ iconType }) => `${ReferenceIconWidth[1920][iconType]}px`};\n  height: 75px;\n  background-size: 1350px;\n\n  &:hover {\n    background-position-y: 46.4%;\n  }\n\n  @media (max-width: 1200px) {\n    width: ${({ iconType }) => `${ReferenceIconWidth[1200][iconType]}px`};\n    height: 56px;\n    background-size: 1000px;\n  }\n`;\n\nconst Reference: React.FC<ReferenceProps> = ({ item: { link, name } }) => {\n  const ga = createGA('Main - Reference', 'click', 'Reference logo', name);\n  const iconType = name.toUpperCase().replace(' ', '_').concat('_BI') as ReferenceBI;\n\n  return (\n    <InlineBlockLink type=\"external\" url={link} ga={ga} testId=\"reference-list\">\n      <ReferenceIcon iconType={iconType} />\n    </InlineBlockLink>\n  );\n};\n\nconst ReferenceSection: React.FC<ReferenceSectionProps> = ({ items }) => (\n  <Wrapper>\n    <ReferenceTitle>Who's using TOAST UI?</ReferenceTitle>\n    <ReferenceIconArea>\n      {items.map((item, index) => (\n        <Reference item={item} key={index} />\n      ))}\n    </ReferenceIconArea>\n  </Wrapper>\n);\n\nexport default ReferenceSection;\n","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { ReferenceItem, PostNode, Post } from '@t/components';\nimport { isKorean, createProductSectionData } from '@/util';\nimport SEO from '@/components/SEO';\nimport HeroSection from '@/components/main/hero/HeroSection';\nimport ApplicationSection from '@/components/main/application/ApplicationSection';\nimport ComponentSection from '@/components/main/component/ComponentSection';\nimport ToolSection from '@/components/main/tool/ToolSection';\nimport DocumentSection from '@/components/main/document/DocumentSection';\nimport ReferenceSection from '@/components/main/reference/ReferenceSection';\nimport SitemapSection from '@/components/main/sitemap/SitemapSection';\n\nimport createGA from '@/components/common/createGA';\n\nimport '@/query/weeklyPickQueryFragment';\nimport '@/query/feGuideQueryFragment';\n\nconst createWeeklyPicksSectionData = ({ edges }: { edges: PostNode[] }) =>\n  edges.map(({ node }) => {\n    const { id, tags, title, date } = node.frontmatter;\n\n    return { id, title, date, tag: tags[0], url: `/weekly-pick/${id}` };\n  });\n\nconst createGuideSectionData = ({ edges }: { edges: PostNode[] }) =>\n  edges.map(({ node }) => {\n    const { title, id } = node.frontmatter;\n\n    return { title, id, url: `/fe-guide/${id}` };\n  });\n\nconst createDescription = ({ edges }: { edges: { node: Post }[] }, id: string) => {\n  return edges.find(({ node }) => node.id === id)!.node.description;\n};\n\nconst Index: React.FC = () => {\n  const {\n    allProductsJson,\n    allDescriptionsJson,\n    allPosts,\n    allEnPosts,\n    allGuides,\n    allEnGuides,\n  } = useStaticQuery(\n    graphql`\n      query indexQuery {\n        # query for each section\n        ...allProductsJson\n\n        # query for descriptions\n        ...allDescriptionsJson\n\n        # query for weekly pick section\n        allPosts: allMarkdownRemark(\n          sort: { fields: [frontmatter___date], order: DESC }\n          filter: { fileAbsolutePath: { regex: \"/(/posts/ko)/.*.md$/\" } }\n          limit: 4\n        ) {\n          edges {\n            node {\n              ...WeeklyPickPostFragment\n            }\n          }\n        }\n\n        allEnPosts: allMarkdownRemark(\n          sort: { fields: [frontmatter___date], order: DESC }\n          filter: { fileAbsolutePath: { regex: \"/(/posts/en)/.*.md$/\" } }\n          limit: 4\n        ) {\n          edges {\n            node {\n              ...WeeklyPickPostFragment\n            }\n          }\n        }\n\n        # query for guide section\n        allGuides: allMarkdownRemark(\n          sort: { fields: [frontmatter___seq], order: ASC }\n          filter: { fileAbsolutePath: { regex: \"/(/guides/ko)/.*.md$/\" } }\n        ) {\n          edges {\n            node {\n              ...feGuideFragment\n            }\n          }\n        }\n\n        allEnGuides: allMarkdownRemark(\n          sort: { fields: [frontmatter___seq], order: ASC }\n          filter: { fileAbsolutePath: { regex: \"/(/guides/en)/.*.md$/\" } }\n        ) {\n          edges {\n            node {\n              ...feGuideFragment\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const { application, component, tool, references } = createProductSectionData(allProductsJson);\n\n  const weeklyData = isKorean ? allPosts : allEnPosts;\n  const weeklySectionData = createWeeklyPicksSectionData(weeklyData);\n\n  const guideData = isKorean ? allGuides : allEnGuides;\n  const guideSectionData = createGuideSectionData(guideData);\n\n  const componentDescription = createDescription(allDescriptionsJson, 'component');\n  const ga = createGA('Main - sitemap', 'click', 'Sitemap');\n\n  console.log('v2');\n\n  return (\n    <div>\n      <SEO />\n      <HeroSection />\n      <ApplicationSection items={application} />\n      <ComponentSection items={component} description={componentDescription} />\n      <ToolSection items={tool} />\n      <DocumentSection guideItems={guideSectionData} weeklyItems={weeklySectionData} />\n      <ReferenceSection items={references as ReferenceItem[]} />\n      <SitemapSection items={{ application, component, tool }} ga={ga} />\n    </div>\n  );\n};\n\nexport default Index;\n"],"sourceRoot":""}