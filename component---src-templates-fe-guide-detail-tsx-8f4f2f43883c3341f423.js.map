{"version":3,"sources":["webpack:///./src/components/guide/GuideMetaInfo.tsx","webpack:///./src/templates/FeGuideDetail.tsx","webpack:///./src/components/FloatingTopBtn.tsx","webpack:///./src/components/detail/PostContent.tsx"],"names":["ItemInfo","styled","div","MoreLink","span","IconMoreArrow","i","GuideMetaInfo","metaInfo","btnLabel","btnLink","ga","createGA","type","url","Wrapper","GuidePost","ContentContainer","Content","PostContent","ContentMetaInfoArea","pageQuery","FeGuideDetail","data","pageContext","location","post","frontmatter","html","title","description","lang","replacedHtml","replaceInvalidHtml","host","pathname","sitemapData","createProductSectionData","allProductsJson","content","useRef","SEO","ref","dangerouslySetInnerHTML","__html","feGuideUrl","toUpperCase","FloatingTopBtn","SitemapSection","items","TopButton","button","isInPost","isDisplay","TopButtonIcon","Icon","useState","isButtonInPost","setButtonInPost","setDisplay","useEffect","onScroll","yScrollPosition","getScrollPosition","y","element","current","offsetTop","scrollHeight","window","innerHeight","BUTTON_DISPLAY_SCROLL_POSITION_Y","innerWidth","MAX_PAD_WIDTH","addEventListener","removeEventListener","onClick","scrollTo","iconType"],"mappings":"8OAaMA,EAAWC,IAAOC,IAAV,uCAAGD,CAAH,6LAeRE,EAAWF,IAAOG,KAAV,uCAAGH,CAAH,+FAURI,EAAgBJ,IAAOK,EAAV,uCAAGL,CAAH,kNAgCJM,EAhBqC,SAAC,GAAoC,IAAlCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACnEC,EAAKC,YAAS,oBAAqB,QAAS,SAAU,kBAE5D,OACE,kBAACZ,EAAD,KACE,8BAAOQ,GACP,kBAAC,IAAD,CAAiBK,KAAK,WAAWC,IAAKJ,EAASC,GAAIA,GACjD,kBAACR,EAAD,KACGM,EACD,kBAACJ,EAAD,U,oCC9BJU,G,UAAUd,IAAOC,IAAV,wCAAGD,CAAH,iEAQPe,EAAYf,IAAOC,IAAV,wCAAGD,CAAH,8JAaTgB,EAAmBhB,IAAOC,IAAV,wCAAGD,CAAH,mPAmBhBiB,EAAUjB,YAAOkB,KAAV,wCAAGlB,CAAH,wYAqCPmB,EAAsBnB,IAAOC,IAAV,wCAAGD,CAAH,8IAgDZoB,EAAY,aAYVC,UA9CqC,SAAC,GAAoC,IAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAAe,EACzDF,EAAKG,KAA3BC,EAD+E,EAC/EA,YAAaC,EADkE,EAClEA,KACbC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,YACPC,EAASP,EAATO,KAEFC,EAAeC,YAAmBL,GAAM,GACxCd,EAAM,GAAGW,EAASS,KAAOT,EAASU,SAElCC,EAAcC,YAAyBd,EAAKe,iBAC5C3B,EAAKC,YAAS,qBAAsB,QAAS,WAE7C2B,EAAUC,iBAAuB,MAEvC,OACE,kBAACzB,EAAD,KACE,kBAAC0B,EAAA,EAAD,CAAKZ,MAAOA,EAAOC,YAAaA,EAAahB,IAAKA,IAClD,kBAACE,EAAD,CAAW0B,IAAKH,GACd,kBAACtB,EAAD,KACE,kBAACC,EAAD,CAASyB,wBAAyB,CAAEC,OAAQZ,MAE9C,kBAACZ,EAAD,KACE,kBAAC,EAAD,CACEZ,SAAS,qBACTC,SAAS,eACTC,QAASmC,IAAWd,EAAKe,kBAG7B,kBAACC,EAAA,EAAD,CAAgBR,QAASA,KAE3B,kBAACS,EAAA,EAAD,CAAgBC,MAAOb,EAAazB,GAAIA,O,kCCzJ9C,yEAYMuC,EAAYjD,IAAOkD,OAAV,wCAAGlD,CAAH,yJAQD,qBAAGmD,SAA2B,QAAU,cACzC,qBAAGC,UAA6B,eAAiB,UAOxDC,EAAgBrD,YAAOsD,KAAV,wCAAGtD,CAAH,6BAqCJ8C,IAhC0D,SAAC,GAAgB,IAAdR,EAAc,EAAdA,QAAc,EAC9CiB,oBAAkB,GAArDC,EADiF,KACjEC,EADiE,OAExDF,oBAAkB,GAA3CH,EAFiF,KAEtEM,EAFsE,KAyBxF,OAjBAC,qBAAU,WACR,IAAMC,EAAW,WACf,IAAMC,EAAkBC,cAAoBC,EACtCC,EAAU1B,EAAQ2B,QAChBC,EAA4BF,EAA5BE,UAAWC,EAAiBH,EAAjBG,aAEnBV,EAAgBU,EAAeD,EAAYE,OAAOC,YAAcR,GAChEH,EAAWG,EAAkBS,MAO/B,OAJIF,OAAOG,WAAaC,KACtBJ,OAAOK,iBAAiB,SAAUb,GAG7B,kBAAMQ,OAAOM,oBAAoB,SAAUd,MACjD,CAACtB,IAGF,kBAACW,EAAD,CAAWE,SAAUK,EAAgBJ,UAAWA,EAAWuB,QAvBzC,WAClBP,OAAOQ,SAAS,EAAG,GACnBlB,GAAW,KAsBT,kBAACL,EAAD,CAAewB,SAAS,uB,qEC5D9B,IAEM3D,EAFN,UAEoBlB,EAAOC,IAAV,wCAAGD,CAAH,i3CA4KFkB","file":"component---src-templates-fe-guide-detail-tsx-8f4f2f43883c3341f423.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { GuideLink } from '@t/components';\nimport { InlineBlockLink } from '@/components/common/Link';\nimport createGA from '@/components/common/createGA';\n\ninterface GuideMetaInfoProps {\n  metaInfo: string;\n  btnLabel: string;\n  btnLink: GuideLink;\n}\n\nconst ItemInfo = styled.div`\n  max-width: 1060px;\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  margin: 40px auto 30px;\n  color: #777;\n  font-size: 14px;\n\n  @media (max-width: 720px) {\n    max-width: 640px;\n    font-size: 10px;\n  }\n`;\n\nconst MoreLink = styled.span`\n  display: inline-block;\n  color: #515ce6;\n  padding: 0 16px;\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst IconMoreArrow = styled.i`\n  position: absolute;\n  top: 4px;\n  right: 3px;\n  width: 0.4em;\n  height: 0.4em;\n  border-right: 0.09em solid #515ce6;\n  border-top: 0.09em solid #515ce6;\n  transform: rotate(45deg);\n  font-style: normal;\n\n  @media (max-width: 720px) {\n    top: 14px;\n  }\n`;\n\nconst GuideMetaInfo: React.FC<GuideMetaInfoProps> = ({ metaInfo, btnLabel, btnLink }) => {\n  const ga = createGA('FE Guide - detail', 'click', 'button', 'to list button');\n\n  return (\n    <ItemInfo>\n      <span>{metaInfo}</span>\n      <InlineBlockLink type=\"internal\" url={btnLink} ga={ga}>\n        <MoreLink>\n          {btnLabel}\n          <IconMoreArrow />\n        </MoreLink>\n      </InlineBlockLink>\n    </ItemInfo>\n  );\n};\n\nexport default GuideMetaInfo;\n","import React, { useRef } from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport { GuideInfo, ProductInfo } from '@t/components';\nimport { createProductSectionData, replaceInvalidHtml } from '@/util';\nimport { feGuideUrl } from '@/constant';\nimport SEO from '@/components/SEO';\nimport GuideMetaInfo from '@/components/guide/GuideMetaInfo';\nimport FloatingTopBtn from '@/components/FloatingTopBtn';\nimport PostContent from '@/components/detail/PostContent';\nimport SitemapSection from '@/components/main/sitemap/SitemapSection';\nimport createGA from '@/components/common/createGA';\n\nimport '@/query/feGuideQueryFragment';\n\ninterface FeGuideDetailProps {\n  data: {\n    post: {\n      frontmatter: GuideInfo;\n      html: string;\n    };\n    allProductsJson: { edges: { node: ProductInfo }[] };\n  };\n  pageContext: {\n    lang: 'ko' | 'en';\n  };\n  location: {\n    host: string;\n    pathname: string;\n  };\n}\n\nconst Wrapper = styled.div`\n  margin-top: 69px;\n\n  @media (max-width: 720px) {\n    margin-top: 56px;\n  }\n`;\n\nconst GuidePost = styled.div`\n  position: relative;\n  padding-bottom: 70px;\n  color: #222;\n  font-size: 16px;\n  border-bottom: 1px solid #e5e5e5;\n\n  @media (max-width: 720px) {\n    padding: 25px 0;\n    font-size: 14px;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  max-width: 1060px;\n  margin: 0 auto;\n  border-bottom: 1px solid #e5e5e5;\n  padding: 60px 0 70px;\n  color: #222;\n  font-size: 16px;\n\n  @media (max-width: 1200px) {\n    padding: 60px 12.5% 70px;\n  }\n\n  @media (max-width: 720px) {\n    max-width: 640px;\n    padding: 0 20px 35px;\n    font-size: 14px;\n  }\n`;\n\nconst Content = styled(PostContent)`\n  & li p {\n    margin: 0;\n  }\n\n  & table {\n    width: 100%;\n    box-sizing: border-box;\n    table-layout: fixed;\n    border-collapse: collapse;\n    border: 1px;\n    border-left-style: hidden;\n    border-right-style: hidden;\n    font-size: 13px;\n  }\n\n  & td,\n  & th {\n    padding: 13px;\n    border: 1px solid #eee;\n    color: #222;\n  }\n\n  & th {\n    border-top: 1px solid #aaa;\n    border-bottom: 1px solid #ccc;\n    font-weight: 700;\n  }\n\n  @media (max-width: 720px) {\n    & table {\n      font-size: 10px;\n      word-break: break-word;\n    }\n  }\n`;\n\nconst ContentMetaInfoArea = styled.div`\n  max-width: 1060px;\n  margin: 0 auto;\n\n  @media (max-width: 1200px) {\n    padding: 0 12.5%;\n  }\n\n  @media (max-width: 720px) {\n    max-width: 640px;\n    padding: 20px 20px 0;\n  }\n`;\n\nconst FeGuideDetail: React.FC<FeGuideDetailProps> = ({ data, pageContext, location }) => {\n  const { frontmatter, html } = data.post;\n  const { title, description } = frontmatter;\n  const { lang } = pageContext;\n\n  const replacedHtml = replaceInvalidHtml(html, true);\n  const url = `${location.host}${location.pathname}`;\n\n  const sitemapData = createProductSectionData(data.allProductsJson);\n  const ga = createGA('FE Guide - sitemap', 'click', 'sitemap');\n\n  const content = useRef<HTMLDivElement>(null);\n\n  return (\n    <Wrapper>\n      <SEO title={title} description={description} url={url} />\n      <GuidePost ref={content}>\n        <ContentContainer>\n          <Content dangerouslySetInnerHTML={{ __html: replacedHtml }} />\n        </ContentContainer>\n        <ContentMetaInfoArea>\n          <GuideMetaInfo\n            metaInfo=\"FE Development Lab\"\n            btnLabel=\"Back to list\"\n            btnLink={feGuideUrl[lang.toUpperCase() as 'KO' | 'EN']}\n          />\n        </ContentMetaInfoArea>\n        <FloatingTopBtn content={content} />\n      </GuidePost>\n      <SitemapSection items={sitemapData} ga={ga} />\n    </Wrapper>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    post: markdownRemark(frontmatter: { id: { eq: $id } }) {\n      html\n      ...feGuideFragment\n    }\n\n    # query for each section\n    ...allProductsJson\n  }\n`;\n\nexport default FeGuideDetail;\n","import React, { RefObject, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { getScrollPosition } from '@/util';\nimport { BUTTON_DISPLAY_SCROLL_POSITION_Y, MAX_PAD_WIDTH } from '@/constant';\nimport { Icon } from '@/components/common/Icon';\n\ninterface TopButtonProps {\n  isInPost: boolean;\n  isDisplay: boolean;\n}\n\nconst TopButton = styled.button<TopButtonProps>`\n  right: 65px;\n  bottom: 85px;\n  width: 50px;\n  height: 50px;\n  text-decoration: none;\n  cursor: pointer;\n\n  position: ${({ isInPost }) => (isInPost ? 'fixed' : 'absolute')};\n  display: ${({ isDisplay }) => (isDisplay ? 'inline-block' : 'none')};\n\n  @media (max-width: 1200px) {\n    display: none;\n  }\n`;\n\nconst TopButtonIcon = styled(Icon)`\n  width: 50px;\n  height: 50px;\n`;\n\nconst FloatingTopBtn: React.FC<{ content: RefObject<HTMLDivElement> }> = ({ content }) => {\n  const [isButtonInPost, setButtonInPost] = useState<boolean>(true);\n  const [isDisplay, setDisplay] = useState<boolean>(false);\n  const clickTopBtn = () => {\n    window.scrollTo(0, 0);\n    setDisplay(false);\n  };\n\n  useEffect(() => {\n    const onScroll = () => {\n      const yScrollPosition = getScrollPosition().y;\n      const element = content.current!;\n      const { offsetTop, scrollHeight } = element;\n\n      setButtonInPost(scrollHeight + offsetTop - window.innerHeight > yScrollPosition);\n      setDisplay(yScrollPosition > BUTTON_DISPLAY_SCROLL_POSITION_Y);\n    };\n\n    if (window.innerWidth > MAX_PAD_WIDTH) {\n      window.addEventListener('scroll', onScroll);\n    }\n\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [content]);\n\n  return (\n    <TopButton isInPost={isButtonInPost} isDisplay={isDisplay} onClick={clickTopBtn}>\n      <TopButtonIcon iconType=\"TOP_BUTTON_ICON\" />\n    </TopButton>\n  );\n};\n\nexport default FloatingTopBtn;\n","import styled from 'styled-components';\n\nconst PostContent = styled.div`\n  & h1,\n  & h2,\n  & h3,\n  & h4 {\n    display: block;\n    font-weight: bold;\n    color: #222;\n  }\n\n  & h1 {\n    font-size: 38px;\n    margin: 0;\n  }\n\n  & h2 {\n    font-size: 30px;\n  }\n\n  & h3 {\n    font-size: 20px;\n    color: #555;\n  }\n\n  & h4 {\n    font-size: 18px;\n    color: #666;\n  }\n\n  & h5 {\n    font-size: 16px;\n  }\n\n  & ul {\n    padding-left: 15px;\n  }\n\n  & li {\n    color: #555;\n    font-size: 16px;\n    line-height: 30px;\n  }\n\n  & p {\n    color: #222;\n    line-height: 26px;\n    margin: 20px 0 10px;\n  }\n\n  & strong {\n    font-weight: bold;\n  }\n\n  & blockquote {\n    margin: 0;\n    padding: 5px 20px;\n    border-left: 5px solid #8b8989;\n    background-color: #f4f4f4;\n  }\n\n  & blockquote p {\n    margin: 0;\n  }\n\n  & a {\n    text-decoration: none;\n    color: #515ce6;\n    word-break: break-word;\n  }\n\n  & .hash-tag {\n    color: #555555;\n  }\n\n  & .hash-tag:hover {\n    color: #515ce6;\n  }\n\n  & .tui-language-text {\n    font-weight: normal;\n    color: #222222;\n  }\n\n  & strong .tui-language-text {\n    font-weight: bold;\n  }\n\n  & img {\n    max-width: 100%;\n  }\n\n  & .monthly-title-img {\n    width: auto;\n    height: 30px;\n  }\n\n  & .monthly-title-img.descender {\n    width: auto;\n    height: 32px;\n  }\n\n  & .tags a {\n    text-decoration: none;\n  }\n\n  & hr:first-child {\n    border-top: 1px solid #ddd;\n  }\n\n  & hr {\n    border-top: 1px solid #e5e5e5;\n    margin: 50px 0;\n  }\n\n  & .hash-tag {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 720px) {\n    & hr {\n      border: 1px solid #ddd;\n      margin: 25px 0;\n    }\n\n    & p {\n      font-size: 14px;\n      line-height: 2;\n      margin: 10px 0 5px;\n      word-break: break-word;\n    }\n\n    & h1 {\n      font-size: 24px;\n      line-height: 1.5;\n    }\n\n    & h2 {\n      font-size: 17px;\n      line-height: 1.5;\n    }\n\n    & h3 {\n      font-size: 15px;\n      line-height: 1.5;\n    }\n\n    & h4 {\n      font-size: 14px;\n      line-height: 1.5;\n    }\n\n    & h5 {\n      font-size: 13px;\n      line-height: 1.5;\n    }\n\n    & li {\n      font-size: 14px;\n      line-height: 2;\n\n      & p {\n        font-size: 14px;\n      }\n    }\n\n    & img {\n      max-width: 100%;\n    }\n  }\n`;\n\nexport default PostContent;\n"],"sourceRoot":""}