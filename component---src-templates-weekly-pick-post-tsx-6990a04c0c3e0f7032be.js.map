{"version":3,"sources":["webpack:///./src/components/weekly/WeeklyPickMetaInfo.tsx","webpack:///./src/templates/WeeklyPickPost.tsx","webpack:///./src/components/FloatingTopBtn.tsx","webpack:///./src/components/detail/PostContent.tsx","webpack:///./src/components/weekly/WeeklyPickTags.tsx"],"names":["ItemInfo","styled","div","MetaInfo","MoreLink","span","IconMoreArrow","i","WeeklyPickMetaInfo","author","date","btnLabel","btnLink","ga","createGA","type","url","Contents","ContentHTML","ContentContainer","Content","PostContent","PostMetaInfoArea","MobileSitemapWrapper","pageQuery","WeeklyPickPost","data","pageContext","location","allProductsJson","post","frontmatter","html","lang","title","description","tags","thumbnail","replacedHtml","replaceInvalidHtml","host","pathname","sitemapData","createProductSectionData","SEO","image","dangerouslySetInnerHTML","__html","WeeklyPickTags","weeklyPickUrl","toUpperCase","FloatingTopBtn","SitemapSection","items","TopButton","button","TopButtonIcon","Icon","useState","display","setDisplay","onScroll","getScrollPosition","y","useEffect","window","innerWidth","addEventListener","removeEventListener","onClick","scrollTo","style","iconType","Tags","Tag","TagName","TagCount","currentTag","isShowCnt","openState","cntClassName","className","prefix","Object","keys","map","tag","WEEKLY_ALL_TAG","selected","key","testId","label","getTagsWithCntComponent","getTagsComponent"],"mappings":"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","file":"component---src-templates-weekly-pick-post-tsx-6990a04c0c3e0f7032be.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { WeeklyLink } from '@t/components';\nimport { InlineBlockLink } from '@/components/common/Link';\nimport createGA from '@/components/common/createGA';\n\ninterface GuideMetaInfoProps {\n  author: string;\n  date: string;\n  btnLabel: string;\n  btnLink: WeeklyLink;\n}\n\nconst ItemInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  margin-top: 20px;\n  color: #777;\n  font-size: 14px;\n\n  @media (max-width: 720px) {\n    max-width: 640px;\n    font-size: 22px;\n  }\n`;\n\nconst MetaInfo = styled.div`\n  display: flex;\n\n  & span:first-child:after {\n    display: inline-block;\n    content: '';\n    height: 11px;\n    border-left: 1px solid #777;\n    margin: 0 8px;\n  }\n\n  @media (max-width: 720px) {\n    flex-direction: row-reverse;\n\n    & span:first-child:after {\n      display: none;\n    }\n\n    & span:last-child:after {\n      display: inline-block;\n      content: '';\n      height: 11px;\n      border-left: 1px solid #777;\n      margin: 0 8px;\n    }\n  }\n`;\n\nconst MoreLink = styled.span`\n  display: inline-block;\n  color: #515ce6;\n  padding: 0 16px;\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst IconMoreArrow = styled.i`\n  position: absolute;\n  top: 7px;\n  right: 3px;\n  width: 0.4em;\n  height: 0.4em;\n  border-right: 0.09em solid #515ce6;\n  border-top: 0.09em solid #515ce6;\n  transform: rotate(45deg);\n  font-style: normal;\n`;\n\nconst WeeklyPickMetaInfo: React.FC<GuideMetaInfoProps> = ({ author, date, btnLabel, btnLink }) => {\n  const ga = createGA('Weekly Pick - detail', 'click', 'button', 'to list button');\n\n  return (\n    <ItemInfo>\n      <MetaInfo>\n        <span>{author}</span>\n        <span>{date}</span>\n      </MetaInfo>\n      <InlineBlockLink type=\"internal\" url={btnLink} ga={ga}>\n        <MoreLink>\n          {btnLabel}\n          <IconMoreArrow />\n        </MoreLink>\n      </InlineBlockLink>\n    </ItemInfo>\n  );\n};\n\nexport default WeeklyPickMetaInfo;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport { Post, ProductInfo } from '@t/components';\nimport { createProductSectionData, replaceInvalidHtml } from '@/util';\nimport { weeklyPickUrl } from '@/constant';\nimport SEO from '@/components/SEO';\nimport WeeklyPickTags from '@/components/weekly/WeeklyPickTags';\nimport WeeklyPickMetaInfo from '@/components/weekly/WeeklyPickMetaInfo';\nimport FloatingTopBtn from '@/components/FloatingTopBtn';\nimport SitemapSection from '@/components/main/sitemap/SitemapSection';\nimport createGA from '@/components/common/createGA';\nimport PostContent from '@/components/detail/PostContent';\n\nimport '@/query/weeklyPickQueryFragment';\n\ninterface WeeklyPickPostProps {\n  data: {\n    post: {\n      frontmatter: Post;\n      html: string;\n    };\n    allProductsJson: { edges: { node: ProductInfo }[] };\n  };\n  pageContext: {\n    lang: 'ko' | 'en';\n  };\n  location: {\n    host: string;\n    pathname: string;\n  };\n}\n\nconst Contents = styled.div`\n  margin-top: 69px;\n  border-bottom: 1px solid #e5e5e5;\n\n  @media (max-width: 720px) {\n    margin-top: 56px;\n  }\n`;\n\nconst ContentHTML = styled.div`\n  padding: 60px 0 100px;\n  color: #222;\n  line-height: 1.5;\n  font-size: 16px;\n\n  @media (max-width: 720px) {\n    padding: 50px 0 80px;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  max-width: 1060px;\n  margin: 0 auto;\n  border-bottom: 1px solid #e5e5e5;\n\n  @media (max-width: 1200px) {\n    padding: 0 12.5%;\n  }\n\n  @media (max-width: 720px) {\n    max-width: 640px;\n    padding: 0 40px;\n  }\n`;\n\nconst Content = styled(PostContent)`\n  padding-bottom: 60px;\n\n  @media (max-width: 720px) {\n    padding-bottom: 50px;\n  }\n`;\n\nconst PostMetaInfoArea = styled.div`\n  max-width: 1060px;\n  margin: 0 auto;\n  padding-top: 40px;\n\n  @media (max-width: 1200px) {\n    padding: 40px 12.5% 0;\n  }\n\n  @media (max-width: 720px) {\n    max-width: 640px;\n    padding: 40px 40px 0;\n\n    & .tag {\n      height: 40px;\n      line-height: 40px;\n    }\n  }\n`;\n\nconst MobileSitemapWrapper = styled.div`\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst WeeklyPickPost: React.FC<WeeklyPickPostProps> = ({ data, pageContext, location }) => {\n  const { allProductsJson, post } = data;\n  const { frontmatter, html } = post;\n  const { lang } = pageContext;\n  const { title, description, author, date, tags, thumbnail } = frontmatter;\n\n  const replacedHtml = replaceInvalidHtml(html, true);\n  const url = `${location.host}${location.pathname}`;\n\n  const sitemapData = createProductSectionData(allProductsJson);\n  const ga = createGA('Weekly Picks - sitemap', 'click', 'sitemap');\n\n  return (\n    <>\n      <Contents>\n        <SEO title={title} description={description} url={url} image={thumbnail} />\n        <ContentHTML>\n          <ContentContainer>\n            <Content dangerouslySetInnerHTML={{ __html: replacedHtml }} />\n          </ContentContainer>\n          <PostMetaInfoArea>\n            <WeeklyPickTags tags={tags} lang={lang} />\n            <WeeklyPickMetaInfo\n              author={author}\n              date={date}\n              btnLabel=\"Back to list\"\n              btnLink={weeklyPickUrl[lang.toUpperCase() as 'KO' | 'EN']}\n            />\n          </PostMetaInfoArea>\n        </ContentHTML>\n        <FloatingTopBtn />\n      </Contents>\n      <MobileSitemapWrapper>\n        <SitemapSection items={sitemapData} ga={ga} />\n      </MobileSitemapWrapper>\n    </>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    post: markdownRemark(frontmatter: { id: { eq: $id } }) {\n      html\n      ...WeeklyPickPostFragment\n    }\n\n    # query for each section\n    ...allProductsJson\n  }\n`;\n\nexport default WeeklyPickPost;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { getScrollPosition } from '@/util';\nimport { Icon } from '@/components/common/Icon';\n\nconst TopButton = styled.button`\n  position: fixed;\n  right: 65px;\n  bottom: 65px;\n  width: 50px;\n  height: 50px;\n  text-decoration: none;\n  cursor: pointer;\n\n  @media (max-width: 720px) {\n    display: none;\n  }\n`;\n\nconst TopButtonIcon = styled(Icon)`\n  width: 50px;\n  height: 50px;\n`;\n\nconst FloatingTopBtn: React.FC = () => {\n  const [display, setDisplay] = useState<'none' | 'block'>('none');\n  const onScroll = () => setDisplay(getScrollPosition().y > 400 ? 'block' : 'none');\n  const clickTopBtn = () => {\n    window.scrollTo(0, 0);\n    setDisplay('none');\n  };\n\n  useEffect(() => {\n    if (window.innerWidth > 784) {\n      window.addEventListener('scroll', onScroll);\n    }\n\n    return () => window.removeEventListener('scroll', onScroll);\n  });\n\n  return (\n    <TopButton onClick={clickTopBtn} style={{ display }}>\n      <TopButtonIcon iconType=\"TOP_BUTTON_ICON\" />\n    </TopButton>\n  );\n};\n\nexport default FloatingTopBtn;\n","import styled from 'styled-components';\n\nconst PostContent = styled.div`\n  & h1,\n  & h2,\n  & h3,\n  & h4 {\n    display: block;\n    font-weight: bold;\n    color: #222;\n  }\n\n  & h1 {\n    font-size: 38px;\n  }\n\n  & h2 {\n    font-size: 30px;\n  }\n\n  & h3 {\n    font-size: 20px;\n    color: #555;\n  }\n\n  & h4 {\n    font-size: 18px;\n    color: #666;\n  }\n\n  & h5 {\n    font-size: 16px;\n  }\n\n  & ul {\n    padding-left: 15px;\n  }\n\n  & li {\n    color: #555;\n    font-size: 16px;\n    line-height: 30px;\n  }\n\n  & p {\n    color: #222;\n    line-height: 26px;\n    margin: 20px 0 10px;\n  }\n\n  & strong {\n    font-weight: bold;\n  }\n\n  & blockquote {\n    margin: 0;\n    padding: 5px 20px;\n    border-left: 5px solid #8b8989;\n    background-color: #f4f4f4;\n  }\n\n  & blockquote p {\n    margin: 0;\n  }\n\n  & a {\n    text-decoration: none;\n    color: #515ce6;\n  }\n\n  & .hash-tag {\n    color: #555555;\n  }\n\n  & .hash-tag:hover {\n    color: #515ce6;\n  }\n\n  & .tui-language-text {\n    font-weight: normal;\n    color: #222222;\n  }\n\n  & strong .tui-language-text {\n    font-weight: bold;\n  }\n\n  & img {\n    max-width: 1060px;\n    width: 100%;\n  }\n\n  & .monthly-title-img {\n    width: auto;\n    height: 30px;\n  }\n\n  & .monthly-title-img.descender {\n    width: auto;\n    height: 32px;\n  }\n\n  & .tags a {\n    text-decoration: none;\n  }\n\n  & hr:first-child {\n    border-top: 1px solid #ddd;\n  }\n\n  & hr {\n    border-top: 1px solid #e5e5e5;\n    margin: 50px 0;\n  }\n\n  & .hash-tag {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  @media (max-width: 720px) {\n    & hr {\n      border: 1px solid #ddd;\n    }\n\n    & p {\n      font-size: 28px;\n      line-height: 50px;\n      margin: 20px 0 10px;\n      word-break: break-word;\n    }\n\n    & h1 {\n      font-size: 42px;\n    }\n\n    & h2 {\n      font-size: 32px;\n    }\n\n    & h3 {\n      font-size: 28px;\n    }\n\n    & h4 {\n      font-size: 26px;\n    }\n\n    & h5 {\n      font-size: 24px;\n    }\n\n    & li {\n      line-height: 52px;\n      font-size: 26px;\n    }\n\n    & img {\n      max-width: 640px;\n    }\n  }\n`;\n\nexport default PostContent;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { TagsMap, TagsArray } from '@t/components';\nimport { WEEKLY_ALL_TAG, weeklyPickUrl } from '@/constant';\nimport { InlineBlockLink } from '@/components/common/Link';\nimport createGA from '@/components/common/createGA';\n\ninterface WeeklyPickTagsProps {\n  isShowCnt?: boolean;\n  currentTag?: string;\n  tags: TagsMap | TagsArray;\n  lang: 'ko' | 'en';\n  openState?: string;\n}\n\ninterface TagWithCountProps {\n  currentTag?: string;\n  tags: TagsMap;\n  lang: 'ko' | 'en';\n}\n\ninterface TagProps {\n  tags: TagsArray;\n  lang: 'ko' | 'en';\n}\n\nconst Tags = styled.div`\n  & a {\n    margin-right: 10px;\n  }\n\n  &.showCnt a {\n    margin-top: 12px;\n  }\n\n  @media (max-width: 720px) {\n    &.more {\n      max-height: 160px;\n      overflow: hidden;\n    }\n\n    &.open {\n      max-height: none;\n    }\n\n    & a {\n      margin-top: 10px;\n    }\n\n    &.showCnt a {\n      margin-top: 20px;\n    }\n  }\n`;\n\nconst Tag = styled.div`\n  height: 30px;\n  line-height: 30px;\n  padding: 0 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  background-color: #fff;\n  font-size: 14px;\n  color: #222;\n\n  &:hover {\n    border: 1px solid #b0b6ff;\n    background-color: #edeeff;\n  }\n\n  &.selected {\n    background-color: #515ce6;\n\n    & span {\n      color: #fff;\n    }\n  }\n\n  @media (max-width: 720px) {\n    height: 50px;\n    line-height: 50px;\n    font-size: 20px;\n  }\n`;\n\nconst TagName = styled.span`\n  color: #222;\n  margin-right: 4px;\n`;\n\nconst TagCount = styled.span`\n  color: #aaa;\n`;\n\nconst getTagsWithCntComponent = ({ currentTag, tags, lang }: TagWithCountProps) => {\n  const prefix = weeklyPickUrl[lang.toUpperCase() as 'KO' | 'EN'];\n  const ga = createGA('Weekly Pick - main', 'click', 'weekly tag');\n\n  return Object.keys(tags).map((tag) => {\n    const url = tag === WEEKLY_ALL_TAG ? `${prefix}` : `${prefix}/${tag}`;\n    const selected =\n      currentTag === tag || (!currentTag && tag === WEEKLY_ALL_TAG) ? 'selected' : '';\n\n    return (\n      <InlineBlockLink\n        key={tag}\n        type=\"internal\"\n        url={url}\n        testId=\"tags\"\n        ga={{ ...ga, label: `weekly tag - ${tag}` }}\n      >\n        <Tag className={selected}>\n          <TagName>{`#${tag}`}</TagName>\n          <TagCount>{tags[tag]}</TagCount>\n        </Tag>\n      </InlineBlockLink>\n    );\n  });\n};\n\nconst getTagsComponent = ({ tags, lang }: TagProps) => {\n  const prefix = `${weeklyPickUrl[lang.toUpperCase() as 'KO' | 'EN']}`;\n  const ga = createGA('Weekly Pick - main', 'click', 'weekly tag');\n\n  return tags.map((tag) => (\n    <InlineBlockLink\n      key={tag}\n      type=\"internal\"\n      url={`${prefix}/${tag}`}\n      testId=\"tags\"\n      ga={{ ...ga, label: `weekly tag - ${tag}` }}\n    >\n      <Tag className=\"tag\">\n        <TagName>{`#${tag}`}</TagName>\n      </Tag>\n    </InlineBlockLink>\n  ));\n};\n\nconst WeeklyPickTags: React.FC<WeeklyPickTagsProps> = ({\n  currentTag,\n  tags,\n  lang,\n  isShowCnt,\n  openState = '',\n}) => {\n  const cntClassName = isShowCnt ? 'showCnt' : '';\n\n  return (\n    <Tags className={`${cntClassName} ${openState}`}>\n      {isShowCnt\n        ? getTagsWithCntComponent({ currentTag, tags, lang } as TagWithCountProps)\n        : getTagsComponent({ lang, tags } as TagProps)}\n    </Tags>\n  );\n};\n\nexport default WeeklyPickTags;\n"],"sourceRoot":""}