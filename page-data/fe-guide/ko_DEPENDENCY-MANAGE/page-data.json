{"componentChunkName":"component---src-templates-fe-guide-detail-tsx","path":"/fe-guide/ko_DEPENDENCY-MANAGE","result":{"data":{"post":{"html":"<h1 id=\"의존성-관리\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B4%80%EB%A6%AC\" aria-label=\"의존성 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의존성 관리</h1>\n<p>자바스크립트는 서버 통신 없이 사용자 입력값의 유효성을 빠르게 확인하기 위해 만들어졌다. 초기의 자바스크립트는 간단한 작업을 위해 만들어졌지만, 현재 자바스크립트는 중요한 웹 기술 중 하나로 빠르게 발전하고 있다. 자바스크립트로 구현할 수 있는 기능이 많아질수록 코드는 더 늘어났고, 더 복잡해졌다. 점점 불어나는 코드를 기능이나 페이지 단위로 분리하는 것은 자연스러운 변화였지만, 아래 그림과 같이 복잡한 의존 관계를 피할수 없게 되었다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/35218826/59730495-9501c800-927d-11e9-9ba3-4e5d7b3b7301.png\" alt=\"module_dependency\"></p>\n<p>이 가이드에서는 점점 복잡해지는 자바스크립트 코드의 의존성 관리 방법을 설명한다. 의존성 관리 방법을 설명하기 전에 모듈 단위 개발의 필요성과 자바스크립트 모듈화의 필수 개념인 AMD와 CommonJS 그리고 ES6 Module을 설명하고 이어서 자바스크립트 패키지 관리 도구인 npm을 사용한 의존성 관리 방법을 설명한다. 이미 자바스크립트 모듈에 대한 이해가 있다면 [npm을 통한 외부 모듈 의존성 관리]만 참고하여도 무방하다.</p>\n<h2 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h2>\n<ul>\n<li>\n<p><a href=\"#%EB%AA%A8%EB%93%88%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\">모듈의 필요성</a></p>\n<ul>\n<li><a href=\"#%EC%A0%84%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84\">전역 스코프</a></li>\n<li><a href=\"#%EB%AA%A8%EB%93%88-%EC%8A%A4%EC%BD%94%ED%94%84\">모듈 스코프</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%AA%A8%EB%93%88-%EC%8B%9C%EC%8A%A4%ED%85%9C\">모듈 시스템</a></p>\n<ul>\n<li><a href=\"#amd\">AMD</a></li>\n<li><a href=\"#commonjs\">CommonJS</a></li>\n<li><a href=\"#umd\">UMD</a></li>\n<li><a href=\"#es6-%EB%AA%A8%EB%93%88\">ES6 모듈</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#npm%EC%9D%84-%ED%86%B5%ED%95%9C-%EC%99%B8%EB%B6%80-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B4%80%EB%A6%AC\">npm을 통한 외부 패키지 의존성 관리</a></p>\n<ul>\n<li><a href=\"#npm-cli-%EB%AA%85%EB%A0%B9\">npm CLI 명령</a></li>\n<li><a href=\"#%EC%A0%84%EC%97%AD-%EC%84%A4%EC%B9%98-vs-%EC%A7%80%EC%97%AD-%EC%84%A4%EC%B9%98\">전역 설치 vs 지역 설치</a></li>\n<li><a href=\"#packagejson\">package.json</a></li>\n<li><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%ED%83%90%EC%83%89-%EC%8B%9C-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\">의존성 탐색 시 우선순위</a></li>\n<li><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EB%B2%84%EC%A0%84-%ED%91%9C%EA%B8%B0\">의존성 버전 표기</a></li>\n</ul>\n</li>\n<li><a href=\"#%EB%A7%BA%EC%9D%8C%EB%A7%90\">맺음말</a></li>\n</ul>\n<h2 id=\"모듈의-필요성\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\" aria-label=\"모듈의 필요성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈의 필요성</h2>\n<p>자바스크립트 코드의 복잡도를 낮추기 위해 여러 파일로 나누어 개발하지만, 단순히 여러 파일로 나눈다고 모듈화되지 않는다. 자바스크립트는 파일이 나뉘어도 모두 같은 전역 스코프를 사용하며, 의도치 않게 다른 파일에 영향을 줄 수 있다. 또한, 각 파일은 의존성에 맞게 순서대로 로딩되어야 하므로 파일 간의 의존성을 일일이 확인하기 번거롭다. 하지만 앞으로 설명할 자바스크립트 모듈 방식을 사용하면, 모듈의 독립된 스코프로 전역 스코프의 오염을 막을 뿐만 아니라 모듈 의존성을 코드로 작성할 수 있다. 따라서 복잡한 자바스크립트를 효율적으로 관리하기 위해서는 모듈 단위 개발을 해야 한다. 우선 모듈의 이해를 돕고자 전역 스코프와 모듈 스코프를 가볍게 설명하고 모듈을 알아보자.</p>\n<h3 id=\"전역-스코프\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"전역 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 스코프</h3>\n<p>자바스크립트의 스코프는 크게 전역 스코프와 지역 스코프로 나뉜다. 전역 스코프의 전역 변수는 어디서든 접근 가능하고, 파일이 나눠져 있더라도 같은 전역 스코프를 사용한다. 아래의 예에서는 <code class=\"tui-language-text\">script</code> 태그 내부에 자바스크립트를 작성했다. 이와 같이 작성하면 함수 내부에 선언한 변수들만 지역 스코프에 등록되고 나머지 함수와 변수들은 모두 전역 스코프에 등록된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>…<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword\">var</span> myName <span class=\"token operator\">=</span> <span class=\"token string\">'Kim'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 전역 스코프</span>\n      <span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// 전역 스코프</span>\n        <span class=\"token comment\">// 지역 스코프 (함수 스코프)</span>\n      <span class=\"token punctuation\">}</span>\n      </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이번에는 분리된 두 개의 자바스크립트 파일을 살펴보자. 아래 예에서 두 개의 자바스크립트 A.js와 B.js를 순서대로 로딩하면 두 파일은 같은 전역 스코프를 갖는다. 따라서 B.js에서 A.js에 선언된 <code class=\"tui-language-text\">name</code>에 접근할 수 있다. 이처럼 자바스크립트는 파일을 분리해도 모두 같은 전역 스코프 위에서 실행되므로 전역 스코프를 공유한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// A.js</span>\n<span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// B.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello '</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello foo</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"모듈-스코프\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"모듈 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 스코프</h3>\n<p>모듈 스코프는 전역과 분리된 모듈만의 독립된 스코프이다. 모듈 스코프에 선언된 변수나 함수는 외부에서 접근할 수 없고, 별도로 <code class=\"tui-language-text\">export</code>한 변수와 함수만 외부에서 접근할 수 있다. 아래의 예는 앞서 설명한 A.js와 B.js 예제를 ES6 모듈 문법으로 모듈화한 것이다. 참고로 모듈은 <code class=\"tui-language-text\">script</code> 태그에 <code class=\"tui-language-text\">module</code> 타입을 설정하여 로드 할 수 있다. (예시 : <code class=\"tui-language-text\">&lt;script type=&quot;module&quot; src=&quot;./A.js&quot;&gt;</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// A.js</span>\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// B.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>getName<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello '</span> <span class=\"token operator\">+</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello foo</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>모듈로 로드한 A.js 에 정의된 <code class=\"tui-language-text\">name</code>은 전역 스코프에 포함되지 않고, 모듈 스코프에 포함된다. 따라서 B.js에서 <code class=\"tui-language-text\">name</code>에 바로 접근할 수 없고 <code class=\"tui-language-text\">export</code>된 <code class=\"tui-language-text\">getName</code>함수로만 <code class=\"tui-language-text\">name</code>을 읽을 수 있다. 이처럼 외부에 노출시킬 함수와 변수를 지정할 수 있기 때문에 모듈 스코프를 사용하면 전역 스코프가 여러 변수로 오염되는 것을 막을 수 있다. 또한 코드 상에서 명시적으로 모듈을 가져오기 때문에 코드로 모듈간 의존성을 파악할 수 있다.</p>\n<h2 id=\"모듈-시스템\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"모듈 시스템 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 시스템</h2>\n<p>모듈 스코프를 사용하기 위해서는 ES6의 모듈을 사용해아 한다. ES6의 모듈이 나오기 전에는 <a href=\"http://www.commonjs.org\">CommonJS</a>와 <a href=\"https://github.com/amdjs/amdjs-api/wiki/AMD\">AMD</a>에서 제안하는 모듈 정의 방법이 있었다. 이 장에서는 AMD와 CommonJS 그리고 ES6의 모듈에 대해서 알아보자.</p>\n<h3 id=\"amd\" style=\"position:relative;\"><a href=\"#amd\" aria-label=\"amd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AMD</h3>\n<p>AMD(Asynchronous Module Definition)는 비동기 방식으로 <code class=\"tui-language-text\">define</code> 함수를 사용하여 모듈의 API와 의존성 관계를 정의한다. CommonJS 보다는 문법이 직관적이지 않다. AMD는 브라우저에서 바로 사용 가능하고 동적 로딩을 지원한다. AMD를 지원하는 대표적인 라이브러리는 <a href=\"https://requirejs.org/\">RequireJS</a>이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'jquery'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">$<span class=\"token punctuation\">,</span> _</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">privateFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">publicFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    publicFn<span class=\"token operator\">:</span> publicFn\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"commonjs\" style=\"position:relative;\"><a href=\"#commonjs\" aria-label=\"commonjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CommonJS</h3>\n<p>CommonJS는 동기 방식으로 <code class=\"tui-language-text\">require</code> 함수로 의존성 모듈을 가져오고 <code class=\"tui-language-text\">module.exports</code> 객체로 모듈의 API를 정의한다. 아래의 예제에서 볼 수 있듯이 AMD 보다 문법이 직관적이다. CommonJS는 자바스크립트를 브라우저 이외 환경에서 사용하고자 만들어졌기 때문에 브라우저에서 바로 사용할 수 없다. 브라우저에서 CommonJS로 작성한 자바스크립트를 실행하기 위해서는 번들러로 변환과정을 거쳐야한다. 하지만 Node는 CommonJS를 사용하기 때문에 Node 기반의 서버나 도구를 개발할 때는 CommonJS을 바로 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">var</span> $ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jquery'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> _ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lodash'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">privateFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">publicFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  publicFn<span class=\"token operator\">:</span> publicFn\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"umd\" style=\"position:relative;\"><a href=\"#umd\" aria-label=\"umd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UMD</h3>\n<p><a href=\"https://github.com/umdjs/umd\">UMD</a>(Universal Module Definition)는 다양한 모듈 방식을 모두 지원하는 일종의 코드 패턴이다. 조건문으로 AMD나 CommonJS를 지원하는지 확인하여 지원하는 모듈 방식의 코드를 사용할 수 있다. UMD을 직접 작성하는 일은 거의 드물며, 대부분 번들러에 의해 생성되는 코드를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">root<span class=\"token punctuation\">,</span> factory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> define <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">&amp;&amp;</span> define<span class=\"token punctuation\">.</span>amd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// AMD</span>\n    <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'jquery'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> exports <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Node, CommonJS-like</span>\n    module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jquery'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lodash'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Browser globals (root is window)</span>\n    root<span class=\"token punctuation\">.</span>myModule <span class=\"token operator\">=</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">.</span>jQuery<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">.</span>_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$<span class=\"token punctuation\">,</span> _</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">privateFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">publicFn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    publicFn<span class=\"token operator\">:</span> publicFn\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"es6-모듈\" style=\"position:relative;\"><a href=\"#es6-%EB%AA%A8%EB%93%88\" aria-label=\"es6 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6 모듈</h3>\n<p>ES6에서는 모듈이 표준으로 정의되었고 모듈 정의를 위해 <code class=\"tui-language-text\">export</code>와 <code class=\"tui-language-text\">import</code> 키워드를 사용한다.</p>\n<h4 id=\"export--import\" style=\"position:relative;\"><a href=\"#export--import\" aria-label=\"export  import permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>export / import</h4>\n<ul>\n<li>모듈을 외부에 공개하기 위해서는 <code class=\"tui-language-text\">export</code> 키워드를 사용한다. 함수, 변수, 클래스를 개별로 export할 수 있으며, 이러한 방식을 <strong>named export</strong>라고 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// lib.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>named export의 경우 모듈을 import할 때 아래와 같이 <code class=\"tui-language-text\">import</code> 키워드와 중괄호 <code class=\"tui-language-text\">{ }</code>를 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>sayHello<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello</span></code></pre></div>\n<ul>\n<li>모듈을 import할 때 <code class=\"tui-language-text\">as</code> 키워드로 별칭을  붙일 수 있다. 아래 예는 <code class=\"tui-language-text\">sayHello</code>를 <code class=\"tui-language-text\">hi</code>라는 별칭으로 가져온 것이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>sayHello <span class=\"token keyword\">as</span> hi<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello</span></code></pre></div>\n<ul>\n<li>모듈 전체를 import할 때는 <code class=\"tui-language-text\">*</code>을 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> lib <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib'</span><span class=\"token punctuation\">;</span>\n\nlib<span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello</span></code></pre></div>\n<ul>\n<li>모듈을 <code class=\"tui-language-text\">default export</code>로 지정할 경우, import할 때 중괄호 <code class=\"tui-language-text\">{ }</code>를 사용하지 않아도 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// lib.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">import</span> sayHello <span class=\"token keyword\">from</span> <span class=\"token string\">'./lib'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello</span></code></pre></div>\n<h4 id=\"정적-import\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%A0%81-import\" aria-label=\"정적 import permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정적 import</h4>\n<p>ES6 모듈은 아래와 같이 동적으로 import 혹은 export할 수 없다. import와 export할 대상을 실행 시점에 변경할 수 없기 때문에 번들링 시에 정적으로 import와 export 구문을 분석하고, 사용하지 않는 코드는 제외하는 최적화를 할 수 있다. 사용하지 않는 코드를 제외시키는 작업은 Webpack과 같은 번들링 도구에서 지원한다. (<a href=\"https://webpack.js.org/guides/tree-shaking/\">Webpack의 Tree Shaking</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 동작하지 않는 코드</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./big'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SyntaxError</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./small'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SyntaxError</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>참고로 동적으로 import 할 수 있는 <code class=\"tui-language-text\">import()</code> 구문은 현재 ECMAScript 스펙에 <a href=\"https://tc39.github.io/proposal-dynamic-import/\">Draft</a> 상태이고 크롬 63 버전 이후부터 사용할 수 있다.</p>\n<h4 id=\"지원-환경\" style=\"position:relative;\"><a href=\"#%EC%A7%80%EC%9B%90-%ED%99%98%EA%B2%BD\" aria-label=\"지원 환경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>지원 환경</h4>\n<h5 id=\"브라우저-환경에서의-사용\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C%EC%9D%98-%EC%82%AC%EC%9A%A9\" aria-label=\"브라우저 환경에서의 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 환경에서의 사용</h5>\n<p>ES6 모듈을 지원하는 브라우저는 아래와 같다.</p>\n<ul>\n<li>크롬 61 이상</li>\n<li>사파리 10.1 이상</li>\n<li>파이어폭스 54 이상 (dom.moduleScripts.enabled 설정 필요)</li>\n<li>엣지 16 이상 (15는 Experimental Javascript Feature 설정 필요)</li>\n</ul>\n<p>ES6 모듈을 지원하지 않는 브라우저를 사용할 때는 트랜스파일러 및 번들러(Webpack, Rollup)를 사용하여, 해당 브라우저에 맞게 코드를 변환해야 한다. 번들러에 대한 자세한 내용은 <a href=\"/test123/fe-guide/ko_BUNDLER\">[FE 가이드] 번들러</a>에서 설명한다.</p>\n<h5 id=\"node\" style=\"position:relative;\"><a href=\"#node\" aria-label=\"node permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node</h5>\n<p>Node에서는 CommonJS로 모듈을 지원하지만, 앞으로는 ES6 모듈도 도입할 예정이다. 따라서 기존에 사용 중인 CommonJS과 ES6 모듈을 구분하는 방법으로 <a href=\"https://nodejs.org/api/esm.html\">.mjs 확장자 사용</a>을 논의 중이다.</p>\n<h2 id=\"npm을-통한-외부-패키지-의존성-관리\" style=\"position:relative;\"><a href=\"#npm%EC%9D%84-%ED%86%B5%ED%95%9C-%EC%99%B8%EB%B6%80-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B4%80%EB%A6%AC\" aria-label=\"npm을 통한 외부 패키지 의존성 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm을 통한 외부 패키지 의존성 관리</h2>\n<p>만약 <code class=\"tui-language-text\">script</code> 태그로 자바스크립트 파일들을 로드한다면, 필요한 패키지를 의존성에 맞게 일일이 나열해야 하고 각 패키지의 버전을 알맞게 관리해야 한다. 하지만 npm을 사용하면 이 모든 것들을 package.json으로 관리할 수 있다.</p>\n<p>npm은 자바스크립트 패키지(모듈) 저장소이다. 누구나 <a href=\"https://www.npmjs.com/\">npm</a>에 자신이 만든 패키지를 공개할 수 있는데, 이때 패키지의 정보는 package.json라는 설정 파일에 기입해야 한다. package.json에는 패키지 이름과 버전 등의 기본적인 정보뿐만 아니라 해당 패키지의 의존성까지 기입해야 한다. 따라서 package.json을 통해서 패키지의 의존성을 확인할 수 있다. 또한 npm은 커맨드 라인 인터페이스(CLI)를 제공한다. CLI는 Node.js 설치할 때 자동으로 설치되고, <code class=\"tui-language-text\">npm</code> 명령어로 패키지를 설치/삭제/업데이트 할 수 있다.</p>\n<p>참고로 npm 이외에도 <a href=\"https://yarnpkg.com/lang/en/\">yarn</a>이라는 패키지 매니저가 있다. yarn은 npm의 저장소를 사용하며 npm의 단점을 보완하고자 만들어졌다. yarn이 패키지를 관리하는 내부동작은 npm과 다르겠지만, package.json을 기준으로 의존성을 관리하는 것은 동일하다. 따라서 npm으로 만든 패키지에서 yarn을 사용할 수 있다.</p>\n<h3 id=\"npm-cli-명령\" style=\"position:relative;\"><a href=\"#npm-cli-%EB%AA%85%EB%A0%B9\" aria-label=\"npm cli 명령 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm CLI 명령</h3>\n<ul>\n<li><code class=\"tui-language-text\">npm init</code> : package.json을 생성한다.</li>\n<li><code class=\"tui-language-text\">npm install</code> : package.json에 명시된 의존성 패키지들을 모두 설치한다.</li>\n<li><code class=\"tui-language-text\">npm install [패키지명]</code> : 해당 패키지를 설치 후 package.json의 <strong>dependencies</strong>에 추가한다.</li>\n<li><code class=\"tui-language-text\">npm install [패키지명] -g</code> : 해당 패키지를 전역으로 설치한다.</li>\n<li><code class=\"tui-language-text\">npm install [패키지명] --save-dev</code> : 해당 패키지를 설치 후 package.json의 <strong>devDependencies</strong>에 의존성을 추가한다.</li>\n<li><code class=\"tui-language-text\">npm update</code> : package.json의 <strong>dependencies</strong>와 <strong>devDependencies</strong> 패키지들을 모두 업데이트 후 package.json에 버전 정보를 갱신한다.</li>\n<li><code class=\"tui-language-text\">npm update [패키지명]</code> : 해당 패키지를 업데이트 후 package.json에 버전 정보를 갱신한다.</li>\n<li><code class=\"tui-language-text\">npm update [패키지명] --no-save</code> : 해당 패키지를 업데이트만 하고 package.json에 버전 정보를 갱신하지 않는다.</li>\n<li><code class=\"tui-language-text\">npm prune</code> : package.json에 명시되지 않은 패키지를 모두 제거한다.</li>\n</ul>\n<h3 id=\"전역-설치-vs-지역-설치\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%EC%84%A4%EC%B9%98-vs-%EC%A7%80%EC%97%AD-%EC%84%A4%EC%B9%98\" aria-label=\"전역 설치 vs 지역 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 설치 vs 지역 설치</h3>\n<p>패키지의 전역 설치와 지역 설치는 어떻게 다른지 알아보자.</p>\n<ul>\n<li>\n<p>전역 설치</p>\n<ul>\n<li><code class=\"tui-language-text\">npm install</code> 시에 <code class=\"tui-language-text\">-g</code> 옵션을 지정하여 설치한다.</li>\n<li>전역으로 설치하는 패키지는 <code class=\"tui-language-text\">/usr/local/lib/node_modules</code> 혹은 <code class=\"tui-language-text\">/usr/local/bin</code>에 설치된다. (윈도우의 경우 <code class=\"tui-language-text\">c:\\Users\\%USERNAME%\\AppData\\Roaming\\npm\\node_modules</code> 에 설치한다.)</li>\n<li>패키지를 여러 프로젝트에서 공통으로 사용할 경우에는 전역으로 설치하여 사용하는 것이 좋다.</li>\n</ul>\n</li>\n<li>\n<p>지역 설치</p>\n<ul>\n<li><code class=\"tui-language-text\">npm install</code> 시에 별도의 옵션을 지정하지 않으면 지역으로 설치한다.</li>\n<li>지역으로 설치하는 패키지는 프로젝트 루트의 <code class=\"tui-language-text\">node_modules</code> 폴더에 설치된다.</li>\n<li>지역으로 설치된 패키지는 해당 프로젝트에서만 사용할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"packagejson\" style=\"position:relative;\"><a href=\"#packagejson\" aria-label=\"packagejson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.json</h3>\n<p>패키지에 관련된 모든 정보를 저장하는 설정 파일로 아래와 같은 정보를 갖는다.</p>\n<ul>\n<li><code class=\"tui-language-text\">name</code>, <code class=\"tui-language-text\">version</code>, <code class=\"tui-language-text\">description</code> : 패키지의 이름, 버전, 설명을 기입한다.</li>\n<li><code class=\"tui-language-text\">script</code> : node_modules를 상대경로로 사용하는 간단한 스크립트를 등록한다. 예를 들어 빌드나 테스트를 실행하는 스크립트를 등록한다.</li>\n<li><code class=\"tui-language-text\">main</code> : 패키지의 시작점이 되는 파일로, 해당 파일을 시작으로 의존성 패키지를 확인해 나아간다.</li>\n<li>\n<p><code class=\"tui-language-text\">dependencies</code></p>\n<ul>\n<li>이 패키지를 실행하기 위해 필요한 의존성을 정의한다.</li>\n<li>해당 패키지가 동작하는 데 필요한 패키지이므로 배포나 번들 시에 포함된다.</li>\n<li><code class=\"tui-language-text\">npm install</code> 시 의존성 있는 하위 패키지의 dependencies까지 모두 설치한다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"tui-language-text\">devDependencies</code></p>\n<ul>\n<li>이 패키지를 개발할 때 필요한 의존성을 정의한다.</li>\n<li>개발 단계에서만 필요한 패키지이므로 배포나 번들 시에 포함되지 않는다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"packagejson-예시-tui-tree의-packagejson\" style=\"position:relative;\"><a href=\"#packagejson-%EC%98%88%EC%8B%9C-tui-tree%EC%9D%98-packagejson\" aria-label=\"packagejson 예시 tui tree의 packagejson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.json 예시 (<a href=\"https://github.com/nhn/tui.tree\">tui-tree</a>의 package.json)</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">{\n    &quot;name&quot;: &quot;tui-tree&quot;,\n    &quot;version&quot;: &quot;3.5.0&quot;,\n    &quot;main&quot;: &quot;dist/tui-tree&quot;,\n    &quot;scripts&quot;: {\n        &quot;test&quot;: &quot;karma start --no-single-run&quot;,\n        &quot;test:ne&quot;: &quot;KARMA_SERVER=ne karma start&quot;,\n        &quot;bundle&quot;: &quot;webpack &amp;&amp; webpack -p&quot;,\n        &quot;serve&quot;: &quot;webpack-dev-server --inline --hot -d&quot;,\n        &quot;serve:ie8&quot;: &quot;webpack-dev-server -d&quot;,\n        &quot;cpy-dist2doc&quot;: &quot;mkdir -p doc/dist &amp;&amp; cp -f -r dist doc&quot;,\n        &quot;doc&quot;: &quot;jsdoc -c jsdoc.conf.json &amp;&amp; npm run cpy-dist2doc&quot;\n    },\n    &quot;description&quot;: &quot;TOAST UI Component: Tree&quot;,\n    &quot;repository&quot;: &quot;https://github.com/nhn/tui.tree.git&quot;,\n    &quot;keywords&quot;: [\n        &quot;nhn&quot;,\n        &quot;tui&quot;,\n        &quot;component&quot;,\n        &quot;tree&quot;\n    ],\n    &quot;author&quot;: &quot;nhn FE Development Lab &lt;dl_javascript@nhn.com&gt;&quot;,\n    &quot;license&quot;: &quot;MIT&quot;,\n    &quot;devDependencies&quot;: {\n        &quot;css-loader&quot;: &quot;^0.26.1&quot;,\n        &quot;eslint&quot;: &quot;^4.5.0&quot;,\n        &quot;eslint-config-tui&quot;: &quot;^1.0.1&quot;,\n        &quot;eslint-loader&quot;: &quot;^1.6.1&quot;,\n        &quot;extract-text-webpack-plugin&quot;: &quot;^1.0.1&quot;,\n        &quot;file-loader&quot;: &quot;^0.11.2&quot;,\n        &quot;istanbul-instrumenter-loader&quot;: &quot;^1.0.0&quot;,\n        &quot;jasmine-ajax&quot;: &quot;^3.2.0&quot;,\n        &quot;jasmine-core&quot;: &quot;^2.3.4&quot;,\n        &quot;jasmine-jquery&quot;: &quot;^2.0.5&quot;,\n        &quot;jsdoc&quot;: &quot;^3.5.4&quot;,\n        &quot;karma&quot;: &quot;1.3.0&quot;,\n        &quot;karma-chrome-launcher&quot;: &quot;^2.0.0&quot;,\n        &quot;karma-coverage&quot;: &quot;^1.1.1&quot;,\n        &quot;karma-es5-shim&quot;: &quot;^0.0.4&quot;,\n        &quot;karma-firefox-launcher&quot;: &quot;^1.0.0&quot;,\n        &quot;karma-jasmine&quot;: &quot;^1.0.2&quot;,\n        &quot;karma-jquery&quot;: &quot;^0.2.2&quot;,\n        &quot;karma-junit-reporter&quot;: &quot;^1.2.0&quot;,\n        &quot;karma-safari-launcher&quot;: &quot;^1.0.0&quot;,\n        &quot;karma-sourcemap-loader&quot;: &quot;^0.3.7&quot;,\n        &quot;karma-webdriver-launcher&quot;: &quot;git+https://github.com/nhn/karma-webdriver-launcher.git#v1.1.0&quot;,\n        &quot;karma-webpack&quot;: &quot;^1.8.0&quot;,\n        &quot;safe-umd-webpack-plugin&quot;: &quot;0.0.2&quot;,\n        &quot;style-loader&quot;: &quot;^0.13.1&quot;,\n        &quot;tui-jsdoc-template&quot;: &quot;^1.1.0&quot;,\n        &quot;url-loader&quot;: &quot;^0.5.7&quot;,\n        &quot;webpack&quot;: &quot;^1.13.3&quot;,\n        &quot;webpack-dev-server&quot;: &quot;^1.11.0&quot;\n    },\n    &quot;dependencies&quot;: {\n        &quot;tui-code-snippet&quot;: &quot;^1.3.0&quot;,\n        &quot;tui-context-menu&quot;: &quot;^2.0.0&quot;\n    }\n}</code></pre></div>\n<h4 id=\"package-lockjson-v5-\" style=\"position:relative;\"><a href=\"#package-lockjson-v5-\" aria-label=\"package lockjson v5  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package-lock.json (v5 ~)</h4>\n<p>같은 package.json으로 설치하더라도 설치 시점마다 node<em>modules에 설치되는 패키지는 완벽히 같지 않을 수 있다. 왜냐하면, 설치 시점에서 의존 패키지가 업데이트되었을 수도 있기 때문이다. 완벽히 같은 node</em>modules를 설치하기 위해서 npm 5부터 package-lock.json이 생겨났다.</p>\n<p><code class=\"tui-language-text\">npm install</code> 시에 package-lock.json은 자동으로 생성되고 현재 설치된 패키지들의 버전과 의존성 관계를 모두 저장한다. 따라서 사용자가 개발 환경 그대로의 의존성 있는 패키지를 설치하여 사용할 수 있다. 이를 위해서는 사용하는 버전 관리 시스템에 package-lock.json을 함께 포함해야 한다.</p>\n<p>package-lock.json 예시는 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">&quot;jquery&quot;: {\n    &quot;version&quot;: &quot;1.11.0&quot;,\n    &quot;resolved&quot;: &quot;https://registry.npmjs.org/jquery/-/jquery-1.11.0.tgz&quot;,\n    &quot;integrity&quot;: &quot;sha1-xnzu4ZtANlDWgq3POdXJAJgU2Uk=&quot;,\n    &quot;dev&quot;: true\n}</code></pre></div>\n<h3 id=\"의존성-탐색-시-우선순위\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%ED%83%90%EC%83%89-%EC%8B%9C-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\" aria-label=\"의존성 탐색 시 우선순위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의존성 탐색 시 우선순위</h3>\n<p>이번에는 의존성 패키지가 설치되는 위치와 패키지를 탐색하는 우선순서에 대해 구체적으로 설명한다.</p>\n<h4 id=\"node_modules-디렉터리\" style=\"position:relative;\"><a href=\"#node_modules-%EB%94%94%EB%A0%89%ED%84%B0%EB%A6%AC\" aria-label=\"node_modules 디렉터리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>node_modules 디렉터리</h4>\n<ul>\n<li>npm 을 통해 설치된 파일은 <code class=\"tui-language-text\">node_modules</code> 디렉터리 내에 저장된다.</li>\n<li>\n<p>npm v3 이전까지는 하위 의존성을 무조건 하위 디렉터리에 저장한다.</p>\n<ul>\n<li><code class=\"tui-language-text\">node_modules/a/node_modules/b/node_modules/c</code></li>\n</ul>\n</li>\n<li>\n<p>npm v3 부터 하위 의존성을 최대한 루트 디렉터리에 저장한다.</p>\n<ul>\n<li><code class=\"tui-language-text\">node_modules/a</code></li>\n<li><code class=\"tui-language-text\">node_modules/b</code></li>\n<li><code class=\"tui-language-text\">node_modules/c</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"requirejquery-시에-파일-탐색-우선순위\" style=\"position:relative;\"><a href=\"#requirejquery-%EC%8B%9C%EC%97%90-%ED%8C%8C%EC%9D%BC-%ED%83%90%EC%83%89-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\" aria-label=\"requirejquery 시에 파일 탐색 우선순위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">require(&#39;jquery&#39;)</code> 시에 파일 탐색 우선순위</h4>\n<ol>\n<li>require를 한 소스의 폴더에 있는 <code class=\"tui-language-text\">jquery</code> 파일</li>\n<li>require를 한 소스의 폴더에 있는 <code class=\"tui-language-text\">jquery.js</code> 파일</li>\n<li>require를 한 소스의 폴더에 있는 <code class=\"tui-language-text\">jquery.json</code> 파일</li>\n<li>require를 한 소스의 폴더에 있는 <code class=\"tui-language-text\">jquery.node</code> 파일</li>\n<li>\n<p>해당 패키지 루트에 있는 <code class=\"tui-language-text\">node_modules/jquery</code> 디렉터리 확인</p>\n<ol>\n<li><code class=\"tui-language-text\">package.json</code>의 <code class=\"tui-language-text\">main</code>에 정의된 파일</li>\n<li><code class=\"tui-language-text\">index.js</code></li>\n<li><code class=\"tui-language-text\">index.json</code></li>\n<li><code class=\"tui-language-text\">index.node</code></li>\n</ol>\n</li>\n<li>해당 패키지의 상위 패키지 에서 <code class=\"tui-language-text\">node_modules/jquery</code> 디렉터리 확인</li>\n</ol>\n<h3 id=\"의존성-버전-표기\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EB%B2%84%EC%A0%84-%ED%91%9C%EA%B8%B0\" aria-label=\"의존성 버전 표기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의존성 버전 표기</h3>\n<p>npm은 <a href=\"https://semver.org\">semver</a>라는 Versioning 규칙을 따른다. 따라서 package.json에서 의존성 패키지의 버전을 기입할 때나 새로운 버전의 패키지를 출시할 때의 버전은 semver 규칙을 따라야 한다. semver는 패키지의 버전으로 하위 호환성을 보장하는 지를 알려주기 때문에 패키지 의존성 관리에 도움을 준다.</p>\n<p>Semantic Versioning은 MAJOR, MINOR, PATCH 버전으로 이루어져 있고 버전 표기는 <code class=\"tui-language-text\">MAJOR.MINOR.PATCH</code>와 같이 작성한다. 각 버전에 대한 설명은 아래와 같다.</p>\n<ul>\n<li>MAJOR 버전 : 하위 호환성을 보장하지 않는 API 변경이 발생하면 MAJOR 버전을 변경한다.</li>\n<li>MINOR 버전 : 하위 호환성을 보장하는 API 및 기능이 추가되면  MINOR 버전을 변경한다.</li>\n<li>PATCH 버전 : 하위 호환성을 보장하면서 버그가 수정된 것이면 PATCH 버전을 변경한다.</li>\n</ul>\n<h4 id=\"tilde--범위\" style=\"position:relative;\"><a href=\"#tilde--%EB%B2%94%EC%9C%84\" aria-label=\"tilde  범위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tilde (~) 범위</h4>\n<ul>\n<li>\n<p>MINOR 버전이 명시된 경우 PATCH 변경만 허용하고, MINOR 버전이 명시되지 않으면 MINOR 변경까지도 허용한다.</p>\n<ul>\n<li>~1.2.3 : >= 1.2.3 &#x3C; 1.3.0</li>\n<li>~1.2 : >= 1.2.0 &#x3C; 1.3.0 : 1.2.x</li>\n<li>~1 : >= 1.0.0 &#x3C; 2.0.0 : 1.x</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"caret--범위\" style=\"position:relative;\"><a href=\"#caret--%EB%B2%94%EC%9C%84\" aria-label=\"caret  범위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Caret (^) 범위</h4>\n<ul>\n<li>\n<p>하위 호환성이 보장되는 업데이트를 진행한다.</p>\n<ul>\n<li>^1.2.3 : >= 1.2.3 &#x3C; 2.0.0</li>\n<li>^1.2 : >= 1.2.0 &#x3C; 2.0.0</li>\n<li>^1 : >= 1.0.0 &#x3C; 2.0.0</li>\n<li>^0.1.2 : >= 0.1.2 &#x3C; 0.2.0 (예외: 버전이 1.0.0 미만인 경우 API 변경이 수시로 일어날 수 있으므로 Tilde처럼 동작한다.)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"그-외\" style=\"position:relative;\"><a href=\"#%EA%B7%B8-%EC%99%B8\" aria-label=\"그 외 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그 외</h4>\n<ul>\n<li>latest : 항상 최신 버전을 적용하는 것이다.</li>\n<li>임의의 숫자를 위해 x, X, * 사용할 수 있다.</li>\n<li>부등호, 등호를 사용 가능하다.</li>\n</ul>\n<h2 id=\"맺음말\" style=\"position:relative;\"><a href=\"#%EB%A7%BA%EC%9D%8C%EB%A7%90\" aria-label=\"맺음말 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>맺음말</h2>\n<p>자바스크립트의 모듈과 의존성 관리 방법을 알아보았다. 자바스크립트는 단순히 파일만 나눈다고 모듈화 되는 것이 아니기 때문에 모듈 단위의 개발로 독립된 모듈을 만들고, 모듈 간의 의존성 관리도 효율적으로 할 수 있다. 또한, 자바스크립트 패키지 관리 도구인 npm을 사용하면 의존성 있는 모듈을 체계적으로 관리할 수 있다. 모듈 단위 개발과 npm을 사용하여 자바스크립트 코드를 효율적으로 관리해보자.</p>\n<hr>\n<p>이 문서는 NHN의 FE개발랩에서 작성하고 관리하는 공식 웹 프론트 개발 가이드이다.\n가이드 적용 관련 문의나 문서의 오류, 개선 제안은 공식 문의 채널(<a href=\"mailto:dl_javascript@nhn.com\">dl_javascript@nhn.com</a>)을 통해 할 수 있다.</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Last Modified</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2019. 05. 13</td>\n</tr>\n</tbody>\n</table>","frontmatter":{"id":"ko_DEPENDENCY-MANAGE","title":"의존성 관리","description":"자바스크립트는 서버 통신 없이 사용자 입력값의 유효성을 빠르게 확인하기 위해 만들어졌다. 초기의 자바스크립트는 간단한 작업을 위해 만들어졌지만, 현재 자바스크립트는 중요한 웹 기술 중 하나로 빠르게 발전하고 있다. 자바스크립트로 구현할 수 있는 기능이 많아질수록 코드는 더 늘어났고, 더 복잡해졌다. 점점 불어나는 코드를 기능이나 페이지 단위로 분리하는 것은 자연스러운 변화였지만, 아래 그림과 같이 복잡한 의존 관계를 피할수 없게 되었다.","date":null}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_DEPENDENCY-MANAGE","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}