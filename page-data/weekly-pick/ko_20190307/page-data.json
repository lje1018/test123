{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20190307","result":{"data":{"post":{"html":"<h1 id=\"vue에서-중첩-데이터를-감시하는-법\" style=\"position:relative;\"><a href=\"#vue%EC%97%90%EC%84%9C-%EC%A4%91%EC%B2%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EA%B0%90%EC%8B%9C%ED%95%98%EB%8A%94-%EB%B2%95\" aria-label=\"vue에서 중첩 데이터를 감시하는 법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue에서 중첩 데이터를 감시하는 법</h1>\n<blockquote>\n<p>원문 : <a href=\"http://michaelnthiessen.com/how-to-watch-nested-data-vue/\">http://michaelnthiessen.com/how-to-watch-nested-data-vue/</a></p>\n</blockquote>\n<p>앱은 배열이나 객체의 데이터 속성을 가질 수 있다. 그리고 당신은 데이터가 변경될 때마다 앱이 무엇가를 수행하길 원한다.</p>\n<p><img src=\"https://media.giphy.com/media/zQc8STzaOlJ3q/giphy.gif\" alt=\"image\"></p>\n<p>그래서 <code class=\"tui-language-text\">watch</code>속성을 만들 것이다, 하지만 Vue는 중첩된 데이터의 변경에 대해서는 <code class=\"tui-language-text\">watch</code>하지 못한다.</p>\n<p>다음은 이를 해결하는 방법이다.</p>\n<p><strong>객체나 배열을 <code class=\"tui-language-text\">watch</code>할 때 <code class=\"tui-language-text\">deep</code> 속성을 설정하여 Vue에게 중첩된 데이터를 <code class=\"tui-language-text\">watch</code>해야 한다고 알릴 필요가 있다.</strong></p>\n<p>이 글에서 중첩 데이터와 <code class=\"tui-language-text\">deep</code> 속성이 어떻게 생겼는지, 그리고 <code class=\"tui-language-text\">watch</code>속성을 사용할 때 유용하게 써먹을 수 있는 것들을 더 자세히 설명하겠다.</p>\n<p>또한 <a href=\"https://vuejs.org/v2/api/#watch\">Vue 문서</a>의 <code class=\"tui-language-text\">watch</code> 사용법을 확인하면 도움이 될 것이다.</p>\n<h2 id=\"이-글에서-다룰-내용\" style=\"position:relative;\"><a href=\"#%EC%9D%B4-%EA%B8%80%EC%97%90%EC%84%9C-%EB%8B%A4%EB%A3%B0-%EB%82%B4%EC%9A%A9\" aria-label=\"이 글에서 다룰 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이 글에서 다룰 내용</h2>\n<p>우선 <code class=\"tui-language-text\">watch</code>가 무엇인지 빠르게 복습해 볼 것이다.</p>\n<p>둘째, 주제에서 약간 우회하여 <code class=\"tui-language-text\">computed</code>과 <code class=\"tui-language-text\">watch</code>의 차이점을 명확히 알아볼 것이다.</p>\n<p>셋째, 배열과 객체에서 중첩된 데이터를 <code class=\"tui-language-text\">watch</code>할 수 있는 방법에 대해 살펴볼 것이다. 필요한 경우 부담없이 앞부분을 건너띄고 여기부터 읽어도 좋다(앞부분이 궁금하면 언제든지 앞부분으로 돌아와 확인하면 된다).</p>\n<p>또한 우리는 <code class=\"tui-language-text\">watch</code>의 <code class=\"tui-language-text\">immediate</code>와 <code class=\"tui-language-text\">handler</code>속성으로 무엇을 할 수 있는지 살펴볼것이다. 이 과정은 당신의 <code class=\"tui-language-text\">watch</code> 사용 스킬을 한 차원 높여 줄 것이다.</p>\n<p>그러나 그 전에 꼭 알려주고 싶은 좋은 소식이 있다.</p>\n<h2 id=\"13000명-이상의-월간-독자에게-바친다\" style=\"position:relative;\"><a href=\"#13000%EB%AA%85-%EC%9D%B4%EC%83%81%EC%9D%98-%EC%9B%94%EA%B0%84-%EB%8F%85%EC%9E%90%EC%97%90%EA%B2%8C-%EB%B0%94%EC%B9%9C%EB%8B%A4\" aria-label=\"13000명 이상의 월간 독자에게 바친다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>13,000명 이상의 월간 독자에게 바친다</h2>\n<p>매일 많은 사람이 내가 쓴 글을 읽고 있다는 사실에 놀랐다. 진정 겸손하게, 내가 계속해서 글을 쓰는데 동기부여가 된다.</p>\n<p>당신에게 감사드리고 싶었다.</p>\n<p>나는 당신이 Vue 앱을 만들 때 겪게 될 가장 일반적인(좌절감을 주는) 문제를 해결하는 <strong>144페이지 분량의 책</strong>을 썼다.</p>\n<p>이 책은 반응성 문제를 다루는 것 부터 혼란스러운 오류를 이해하는 것까지의 모든 것을 다룬다.</p>\n<p>또한, 일반적인 동작들(클래스를 동적으로 변경하는 것과 같은)을 올바른 방법으로 구현하는 방법을 살펴볼 수 있을 것이다.</p>\n<p>제일 좋은 부분은? 이 책을 돈을 받고 판매할 수 있음에도, 무료로 제공하고 있다는 것이다.</p>\n<h2 id=\"watch-메서드란-무엇인가\" style=\"position:relative;\"><a href=\"#watch-%EB%A9%94%EC%84%9C%EB%93%9C%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"watch 메서드란 무엇인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>watch 메서드란 무엇인가?</h2>\n<p>Vue에서 속성이 변경될 때 우리는 변화를 지켜보고, 변화에 대응하는 무언가를 할 수 있다.</p>\n<p>예를 들면, colour 속성(prop)이 변할때 콘솔에 로그를 기록하게 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'ColourChange'</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'colour'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">colour</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The colour has changed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"tui-language-text\">watch</code>는 많은 경우에 유용하게 사용할 수 있다. 하지만 <code class=\"tui-language-text\">computed</code> 속성만으로도 충분한 문제를 <code class=\"tui-language-text\">watch</code>를 사용해서 해결하는 경우가 많다.</p>\n<h2 id=\"watch를-사용할-것인가-computed를-사용할-것인가\" style=\"position:relative;\"><a href=\"#watch%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%A0-%EA%B2%83%EC%9D%B8%EA%B0%80-computed%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%A0-%EA%B2%83%EC%9D%B8%EA%B0%80\" aria-label=\"watch를 사용할 것인가 computed를 사용할 것인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">watch</code>를 사용할 것인가 <code class=\"tui-language-text\">computed</code>를 사용할 것인가?</h2>\n<p><code class=\"tui-language-text\">watch</code>속성은 <code class=\"tui-language-text\">computed</code> 속성과 비슷한 방식으로 작동하기 때문에 종종 혼동된다. 언제 어느 것을 사용할 지 아는 것은 더 까다롭다.</p>\n<p>그러나 나는 경험을 통해 이것을 구분하는 쉬운 방법을 생각해냈다.</p>\n<p><strong><code class=\"tui-language-text\">watch</code>는 \"부수 효과\" 처리를 위한 것이다. 만약 상태를 변경하고 싶다면 <code class=\"tui-language-text\">computed</code>를 사용하는 것이 좋다.</strong></p>\n<p>\"부수 효과\"는 컴포넌트 외부의 동작이나 비동기 처리를 말한다.</p>\n<p>일반적인 예는 다음과 같다.</p>\n<ul>\n<li>데이터를 가져오는 것 (Fetching data)</li>\n<li>DOM 조작하기</li>\n<li>로컬 저장소 또는 오디오 재생과 같은 브라우저 API 사용</li>\n</ul>\n<p>이 중 어떤 것도 직접 컴포넌트에 영향을 주지 않으므로 \"부수 효과\"로 간주한다.</p>\n<p>만약 이런 \"부수 효과\"에 대한 일이 아니면, 아마 <code class=\"tui-language-text\">computed</code>을 사용하는 것이 맞을 것이다. <code class=\"tui-language-text\">computed</code>는 <strong>다른 변화에 대한 응답으로 계산을 업데이트해야 할 때</strong> 정말 좋다.</p>\n<p>하지만 <code class=\"tui-language-text\">data</code>를 업데이트 하기 위해 <code class=\"tui-language-text\">watch</code>를 사용해야 하는 경우도 있다.</p>\n<p>때로는 <code class=\"tui-language-text\">computed</code>를 사용하는 것이 의미가 없는 경우도 있다. <code class=\"tui-language-text\">&lt;template&gt;</code>이나 메서드에서 업데이트해야 한다면, 당신의 <code class=\"tui-language-text\">data</code> 안으로 들어가야 한다. 그러나 그 후의 속성 변경에 대한 응답으로 업데이트 해야 하는 경우 <code class=\"tui-language-text\">watch</code>를 사용해야 한다.</p>\n<p><img src=\"https://media.giphy.com/media/Bc3SkXz1M9mjS/giphy.gif\" alt=\"image\"></p>\n<p><strong>주의:</strong> <code class=\"tui-language-text\">watch</code>를 사용하여 상태를 업데이트하려는 경우 주의해야 한다. 컴포넌트와 상위 컴포넌트가 같은 상태로 (직접 또는 간접적으로) 업데이트되고 있음을 의미한다. <strong>매우 빠르게 이상해질 수 있다</strong>.</p>\n<h2 id=\"중첩된-데이터-watch하기---배열-또는-객체\" style=\"position:relative;\"><a href=\"#%EC%A4%91%EC%B2%A9%EB%90%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-watch%ED%95%98%EA%B8%B0---%EB%B0%B0%EC%97%B4-%EB%98%90%EB%8A%94-%EA%B0%9D%EC%B2%B4\" aria-label=\"중첩된 데이터 watch하기   배열 또는 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>중첩된 데이터 <code class=\"tui-language-text\">watch</code>하기 - 배열 또는 객체</h2>\n<p>그럼, 실제로 <code class=\"tui-language-text\">watch</code>가 필요한 경우라고 가정해보자.</p>\n<p>그러나 배열이나 객체를 <code class=\"tui-language-text\">watch</code>할 때, 예상했던 대로 동작하지 않는다.</p>\n<p><strong>무슨 일이 벌어지고 있는 거지?</strong></p>\n<p>몇가지 값이 포함된 배열을 만든다고 가정해 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// array = [1, 2, 3, 4]</span></code></pre></div>\n<p>이제 더 많은 값을 넣어 배열을 업데이트하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">array<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\narray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\narray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// array = [1, 2, 3, 4, 5, 6, 7]</span></code></pre></div>\n<p>질문이 있다. <code class=\"tui-language-text\">array</code>가 변경되었는가?</p>\n<p>글쎄, 그렇게 간단하지 않다.</p>\n<p>배열의 내용은 변경되었지만, 변수는 여전히 같은 <code class=\"tui-language-text\">array</code> 객체를 가리킨다. 배열 컨테이너는 변경되지 않았지만 <strong>배열 내부</strong>는 변경되었다.</p>\n<p>따라서 Vue는 배열이나 객체를 <code class=\"tui-language-text\">watch</code>할 때, <strong>속성 내부가 변경</strong>되었다고 생각하지 않는다. Vue에게 변경을 <code class=\"tui-language-text\">watch</code>할 때 속성 내부를 검사하길 원한다고 알려줘야 한다.</p>\n<p>다음과 같이 <code class=\"tui-language-text\">deep</code>을 <code class=\"tui-language-text\">true</code>로 설정하고 <code class=\"tui-language-text\">handler</code> 메서드를 재배치 함으로써 Vue에게 원하는 바를 알려줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'ColourChange'</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    colours<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> Array<span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    colours<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// This will let Vue know to look inside the array</span>\n      deep<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token comment\">// We have to move our method to a handler field</span>\n      <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The list of colours has changed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 Vue는 변경 사항을 <code class=\"tui-language-text\">watch</code>할 때 속성 내부의 내용을 추적해야 함을 알 것이다.</p>\n<p>그런데 handler 함수는 무엇일까?</p>\n<p>조금 후에 handler에 대해 알아볼 것이다. 그 보다 우선 더 중요한 <code class=\"tui-language-text\">watch</code>의 immediate에 대해 알아보자.</p>\n<h2 id=\"immediate\" style=\"position:relative;\"><a href=\"#immediate\" aria-label=\"immediate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Immediate</h2>\n<p><code class=\"tui-language-text\">watch</code>는 속성의 값이 변할 때 실행되지만, 종종 변경과 관계없이 처음 한 번 실행해야 하는 경우가 있다.</p>\n<p>다음은 <code class=\"tui-language-text\">movie</code>속성의 설정에 따라 서버에서 데이터를 가져오는 <code class=\"tui-language-text\">MovieData</code> 컴포넌트 예제이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'MovieData'</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    movie<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n      required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      movieData<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Whenever the movie prop changes, fetch new data</span>\n    <span class=\"token function\">movie</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">movie</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Fetch data about the movie</span>\n      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>movie<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>movieData <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 컴포넌트는 훌륭하게 작동한다. <code class=\"tui-language-text\">movie</code> 속성이 변경할 때마다 <code class=\"tui-language-text\">watch</code>가 실행되고 새로운 데이터를 가져온다.</p>\n<p>여기에 작은 문제가 있다는 것만 빼고는 잘 동작한다.</p>\n<p>문제는 페이지가 로드 될 때 <code class=\"tui-language-text\">movie</code>가 기본값으로 설정된다는 것이다. 그러나 속성이 아직 변경되지 않았으므로 <code class=\"tui-language-text\">watch</code>는 실행되지 않는다. 다른 동영상을 선택할 때까지 데이터가 로드되지 않음을 의미한다.</p>\n<p>그렇다면 페이지 로드 시 즉시 <code class=\"tui-language-text\">watch</code>가 실행되도록 할 수 있을까?</p>\n<p><code class=\"tui-language-text\">immediate</code>를 <code class=\"tui-language-text\">true</code>로 설정하고 핸들러 함수를 아래처럼 옮긴다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Whenever the movie prop changes, fetch new data</span>\n  movie<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Will fire as soon as the component is created</span>\n    immediate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">movie</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Fetch data about the movie</span>\n      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>movie<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>movieData <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>자, 여러분은 <code class=\"tui-language-text\">handler</code> 함수를 두 번이나 보았다. 이제 그게 무엇인지 다룰 때가 되었다.</p>\n<h2 id=\"handler\" style=\"position:relative;\"><a href=\"#handler\" aria-label=\"handler permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Handler</h2>\n<p>Vue의 <code class=\"tui-language-text\">watch</code>에게 세 가지 속성을 지정할 수 있다.</p>\n<ul>\n<li>immediate</li>\n<li>deep</li>\n<li>handler</li>\n</ul>\n<p>처음 두 가지는 이미 보았고, 세 번째도 그리 어렵지 않다. 아마 당신도 모르게 벌써 사용하고 있었을 것이다.</p>\n<p><strong><code class=\"tui-language-text\">handler</code>는 <code class=\"tui-language-text\">watch</code>된 속성이 변경될 때 호출될 함수를 지정한다.</strong></p>\n<p>우리가 흔히 보았던 코드는 <code class=\"tui-language-text\">deep</code>, <code class=\"tui-language-text\">immediate</code>를 지정할 필요가 없는 경우 사용하는 단축표현이다. 단축표현 대신 아래처럼 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  movie<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">movie</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Fetch data about the movie</span>\n      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>movie<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>movieData <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>단축표현을 사용하여 아래처럼 함수를 직접 지정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">movie</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">movie</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Fetch data about the movie</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>movie<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>movieData <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Vue의 멋진 점은 함수를 처리하는 메서드 이름을 문자열로 지정할 수 있는 것이다. 두 개 이상의 속성이 변경될 때의 처리에 유용하다.</p>\n<p>기존 예제에서 <code class=\"tui-language-text\">actor</code>속성과 함께 <code class=\"tui-language-text\">movie</code>속성도 사용하여 데이터를 가져와 보자. 메서드와 <code class=\"tui-language-text\">watch</code>는 아래와 같은 모습일 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Whenever the movie prop changes, fetch new data</span>\n  movie <span class=\"token punctuation\">{</span>\n    handler<span class=\"token operator\">:</span> <span class=\"token string\">'fetchData'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Whenever the actor changes, we'll call the same method</span>\n  actor<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    handler<span class=\"token operator\">:</span> <span class=\"token string\">'fetchData'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\nmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Fetch data about the movie</span>\n  <span class=\"token function\">fetchData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>movie<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>actor<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>movieData <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이와 같이 사용하면 여러 속성이 같은 \"부수 효과\"를 일으킬 때, 코드를 좀 더 깔끔하게 해준다.</p>","frontmatter":{"id":"ko_20190307","title":"Vue에서 중첩 데이터를 감시하는 법","description":"앱은 배열이나 객체의 데이터 속성을 가질 수 있다. 그리고 당신은 데이터가 변경될 때마다 앱이 무엇가를 수행하길 원한다.","date":"2019.03.07","author":"김진우","tags":["VueJs"],"thumbnail":null}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20190307","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}