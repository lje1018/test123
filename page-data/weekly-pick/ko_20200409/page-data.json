{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20200409","result":{"data":{"post":{"html":"<h1 id=\"ecmascript-2020의-새로운-점\" style=\"position:relative;\"><a href=\"#ecmascript-2020%EC%9D%98-%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%A0%90\" aria-label=\"ecmascript 2020의 새로운 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ECMAScript 2020의 새로운 점</h1>\n<blockquote>\n<p>원문: Pawel Grzybek, <a href=\"https://pawelgrzybek.com/whats-new-in-ecmascript-2020/\">https://pawelgrzybek.com/whats-new-in-ecmascript-2020/</a></p>\n</blockquote>\n<p>ECMAScript 2020의 새로운 기능이 확정되었다. 필자는 <a href=\"https://pawelgrzybek.com/whats-new-in-ecmascript-2016-es7/\">2016</a>, <a href=\"https://pawelgrzybek.com/whats-new-in-ecmascript-2017/\">2017</a>, <a href=\"https://pawelgrzybek.com/whats-new-in-ecmascript-2018/\">2018</a>, <a href=\"https://pawelgrzybek.com/whats-new-in-ecmascript-2019/\">2019</a>년과 마찬가지로 올해 새롭게 추가된 기능을 예제와 함께 살펴보려고 한다.</p>\n<h2 id=\"stringprototypematchall-제안자-jordan-harband\" style=\"position:relative;\"><a href=\"#stringprototypematchall-%EC%A0%9C%EC%95%88%EC%9E%90-jordan-harband\" aria-label=\"stringprototypematchall 제안자 jordan harband permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">String.prototype.matchAll</code> (제안자: Jordan Harband)</h2>\n<p><code class=\"tui-language-text\">String.prototype</code>의 <code class=\"tui-language-text\">match()</code> 메서드는 정확히 일치하는 결과만을 반환하고 특정 정규 표현식 그룹에 관한 정보는 어떤 것도 제공하지 않았다. <a href=\"https://twitter.com/ljharb\">Jordan Harband</a> 덕분에 이제 <code class=\"tui-language-text\">match()</code>보다 더 많은 정보를 반환하는 <a href=\"https://github.com/tc39/proposal-string-matchall\"><code class=\"tui-language-text\">String.prototype.matchAll</code></a>을 사용할 수 있다. 완벽히 동일한 문자열 이외에 반복자(iterator)가 반환되는데, 이를 통해 모든 정규 표현식 캡처 그룹에 접근할 수 있다. Gorkem Yakin과 Daniel Ehrenberg가 제안하고 ECMAScript 2018에 추가된 <a href=\"https://pawelgrzybek.com/whats-new-in-ecmascript-2018/#regexp-named-capture-groups-by-gorkem-yakin-and-daniel-ehrenberg\">명명된 캡처 그룹</a>이 기억나는가? <code class=\"tui-language-text\">matchAll()</code> 메서드는 명명된 캡처 그룹과 함께 사용할 때 빛을 발한다. 아래의 예시를 살펴보면 명확히 와닿을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"From 2019.01.29 to 2019.01.30\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> regexp <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?&lt;year>\\d{4}).(?&lt;month>\\d{2}).(?&lt;day>\\d{2})</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gu</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>regexp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [ '2019.01.29', '2019.01.30' ]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"From 2019.01.29 to 2019.01.30\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> regexp <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?&lt;year>\\d{4}).(?&lt;month>\\d{2}).(?&lt;day>\\d{2})</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gu</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> results <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span>regexp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//   [</span>\n<span class=\"token comment\">//     '2019.01.29',</span>\n<span class=\"token comment\">//     '2019',</span>\n<span class=\"token comment\">//     '01',</span>\n<span class=\"token comment\">//     '29',</span>\n<span class=\"token comment\">//     index: 5,</span>\n<span class=\"token comment\">//     input: 'From 2019.01.29 to 2019.01.30',</span>\n<span class=\"token comment\">//     groups: [Object: null prototype] { year: '2019', month: '01', day: '29' }</span>\n<span class=\"token comment\">//   ],</span>\n<span class=\"token comment\">//   [</span>\n<span class=\"token comment\">//     '2019.01.30',</span>\n<span class=\"token comment\">//     '2019',</span>\n<span class=\"token comment\">//     '01',</span>\n<span class=\"token comment\">//     '30',</span>\n<span class=\"token comment\">//     index: 19,</span>\n<span class=\"token comment\">//     input: 'From 2019.01.29 to 2019.01.30',</span>\n<span class=\"token comment\">//     groups: [Object: null prototype] { year: '2019', month: '01', day: '30' }</span>\n<span class=\"token comment\">//   ]</span>\n<span class=\"token comment\">// ]</span></code></pre></div>\n<h2 id=\"import-제안자-domenic-denicola\" style=\"position:relative;\"><a href=\"#import-%EC%A0%9C%EC%95%88%EC%9E%90-domenic-denicola\" aria-label=\"import 제안자 domenic denicola permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">import()</code> (제안자: Domenic Denicola)</h2>\n<p>ECMAScript 2015에서 소개된 정적 모듈과는 반대로, <a href=\"https://twitter.com/domenic\">Domenic Denicola</a>가 제안한 <a href=\"https://github.com/tc39/proposal-dynamic-import\">동적 가져오기(Dynamic import)</a>는 필요에 따라 모듈을 가져올 수 있다. 함수형 구문(<code class=\"tui-language-text\">Function.prototype</code>를 상속하고 있다는 뜻은 아니다)인 <code class=\"tui-language-text\">import()</code>는 프로미스(promise)를 반환한다. 동적 가져오기는 매우 강력해서 필요에 따라 모듈을 가져올 수 있으며, 계산된 모듈 이름을 사용할 수 있고, 스크립트 안에서 실행하는 것도 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token keyword\">const</span> modulePage <span class=\"token operator\">=</span> <span class=\"token string\">'page.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span>modulePage<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">module</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      module<span class=\"token punctuation\">.</span><span class=\"token function\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> helpersModule <span class=\"token operator\">=</span> <span class=\"token string\">'helpers.js'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> module <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span>helpersModule<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> module<span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"bigint---임의-정밀도-정수-제안자-daniel-ehrenberg\" style=\"position:relative;\"><a href=\"#bigint---%EC%9E%84%EC%9D%98-%EC%A0%95%EB%B0%80%EB%8F%84-%EC%A0%95%EC%88%98-%EC%A0%9C%EC%95%88%EC%9E%90-daniel-ehrenberg\" aria-label=\"bigint   임의 정밀도 정수 제안자 daniel ehrenberg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">BigInt</code> - 임의 정밀도 정수 (제안자: Daniel Ehrenberg)</h2>\n<p><a href=\"https://twitter.com/littledan\">Daniel Ehrenberg</a> 덕분에 앞으로 <code class=\"tui-language-text\">Number.MAX_SAFE_INTEGER</code>를 제한 없이 사용할 수 있을 것이다. <a href=\"https://github.com/tc39/proposal-bigint\"><code class=\"tui-language-text\">BigInt</code></a>는 임의 정밀도로 정수를 표현하는 새로운 원시 값이다. <code class=\"tui-language-text\">BigInt</code> 함수를 사용하거나 숫자 값에 <code class=\"tui-language-text\">n</code> 접미사를 붙여서 숫자를 <code class=\"tui-language-text\">bigint</code> 타입으로 변환할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\">Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_SAFE_INTEGER</span>\n<span class=\"token comment\">// 9007199254740991</span>\n\nNumber<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_SAFE_INTEGER</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span>\n<span class=\"token comment\">// 9007199254740990 👎</span>\n\n<span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_SAFE_INTEGER</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">10n</span> <span class=\"token operator\">-</span><span class=\"token number\">10n</span>\n<span class=\"token comment\">// 9007199254740991n 👍</span></code></pre></div>\n<h2 id=\"promiseallsettled-제안자-jason-williams-robert-pamely-and-mathias-bynens\" style=\"position:relative;\"><a href=\"#promiseallsettled-%EC%A0%9C%EC%95%88%EC%9E%90-jason-williams-robert-pamely-and-mathias-bynens\" aria-label=\"promiseallsettled 제안자 jason williams robert pamely and mathias bynens permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">Promise.allSettled</code> (제안자: Jason Williams, Robert Pamely and Mathias Bynens)</h2>\n<p>ECMAScript 2015부터 자바스크립트에는 프로미스를 결합하는 방법으로 <code class=\"tui-language-text\">Promise.all()</code>과 <code class=\"tui-language-text\">Promise.race()</code> 2가지가 있었다. Jason Williams, Robert Pamely and <a href=\"https://twitter.com/mathias\">Mathias Bynens</a> 덕분에 우리는 이제 <a href=\"https://github.com/tc39/proposal-promise-allSettled\"><code class=\"tui-language-text\">Promise.allSettled()</code></a>를 사용할 수 있다. <code class=\"tui-language-text\">Promise.allSettled()</code>는 이행(fulfilled)되거나 거부(rejected)된 결과와 상관없이 모든 프로미스가 실행된 후에 어떤 처리를 하고 싶을 때 사용한다. 아래의 코드처럼 catch를 사용하지 않아도 된다!</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\">Promise<span class=\"token punctuation\">.</span><span class=\"token function\">allSettled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.github.com/users/pawelgrzybek\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> data<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://api.github.com/users/danjordan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> data<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">All profile settled</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"tui-language-text\">Promise.any()</code>도 어쩌면 ECMAScript에 곧 포함될 수도 있다. 필자는 이 모든 것을 <a href=\"https://pawelgrzybek.com/promise-combinators-explained/\">\"Promise combinators explained\"</a>에 설명해두었다.</p>\n<h2 id=\"globalthis-제안자-jordan-harband\" style=\"position:relative;\"><a href=\"#globalthis-%EC%A0%9C%EC%95%88%EC%9E%90-jordan-harband\" aria-label=\"globalthis 제안자 jordan harband permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">globalThis</code> (제안자: Jordan Harband)</h2>\n<p>자바스크립트에서 전역 <code class=\"tui-language-text\">this</code>란 무엇인가? 브라우저에서는 <code class=\"tui-language-text\">window</code>, 워커에서는 <code class=\"tui-language-text\">self</code>, Node.js에서는 <code class=\"tui-language-text\">global</code>, 그리고 다른 환경에서는 또다른 변수를 뜻한다. 이렇게 복잡한 상황은 이제 더는 일어나지 않을 것이다! <a href=\"https://twitter.com/ljharb\">Jordan Harband</a> 덕분에 우리는 <a href=\"https://github.com/tc39/proposal-global\"><code class=\"tui-language-text\">globalThis</code></a>를 활용할 수 있다.</p>\n<h2 id=\"for-in-메커니즘-제안자-kevin-gibbons\" style=\"position:relative;\"><a href=\"#for-in-%EB%A9%94%EC%BB%A4%EB%8B%88%EC%A6%98-%EC%A0%9C%EC%95%88%EC%9E%90-kevin-gibbons\" aria-label=\"for in 메커니즘 제안자 kevin gibbons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>for-in 메커니즘 (제안자: Kevin Gibbons)</h2>\n<p>ECMAScript는 for-in 루프 순서를 자세히 설명하지 않았다. <a href=\"https://twitter.com/bakkoting\">Kevin Gibbons</a> 덕분에 <a href=\"https://github.com/bakkot/for-in-exploration\">for-in 메커니즘의 규칙</a>이 확정되었다.</p>\n<h2 id=\"optional-chaining-제안자-gabriel-isenberg-claude-pache-dustin-savery\" style=\"position:relative;\"><a href=\"#optional-chaining-%EC%A0%9C%EC%95%88%EC%9E%90-gabriel-isenberg-claude-pache-dustin-savery\" aria-label=\"optional chaining 제안자 gabriel isenberg claude pache dustin savery permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>optional chaining (제안자: Gabriel Isenberg, Claude Pache, Dustin Savery)</h2>\n<p>객체 프로퍼티에 접근하기 위해 길게 이어진 체인은 오류가 나기 쉬우며 가독성도 좋지 않다. <a href=\"https://twitter.com/the_gisenberg\">Gabriel Isenberg</a>, <a href=\"https://github.com/claudepache\">Claude Pache</a>, Dustin Savery 덕분에 이 체인이 훨씬 간단해졌다. 만약 당신이 TypeScript 사용자라면 optional chaining이 <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#optional-chaining\">3.7 버전</a>에서 이미 구현되었으므로 이 기능이 새롭게 느껴지지 않을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> data <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token punctuation\">.</span>article <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token punctuation\">.</span>article<span class=\"token punctuation\">.</span>title\n\n<span class=\"token comment\">// after</span>\n<span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> data<span class=\"token operator\">?.</span>article<span class=\"token operator\">?.</span>title</code></pre></div>\n<h2 id=\"null-병합-연산자-제안자-gabriel-isenberg\" style=\"position:relative;\"><a href=\"#null-%EB%B3%91%ED%95%A9-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%A0%9C%EC%95%88%EC%9E%90-gabriel-isenberg\" aria-label=\"null 병합 연산자 제안자 gabriel isenberg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>null 병합 연산자 (제안자: Gabriel Isenberg)</h2>\n<p><a href=\"https://twitter.com/the_gisenberg\">Gabriel Isenberg</a>이 한 환상적인 작업은 <a href=\"https://github.com/tc39/proposal-nullish-coalescing\">null 병합 연산자</a>를 추가한 것이다. null 병합 연산자는 디폴트 값을 처리하기 위한 새로운 논리 연산자이다. 이 기능은 optional chaining과 관련되어 있다. <code class=\"tui-language-text\">||</code> 연산자와는 반대로, null 병합 연산자인 <code class=\"tui-language-text\">??</code>는 좌변 값이 <code class=\"tui-language-text\">null</code> 또는 <code class=\"tui-language-text\">undefined</code>일 때만 평가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"default value\"</span>\n<span class=\"token comment\">// default value</span>\n\n<span class=\"token string\">\"\"</span> <span class=\"token operator\">??</span> <span class=\"token string\">\"default value\"</span>\n<span class=\"token comment\">// \"\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> data<span class=\"token operator\">?.</span>article<span class=\"token operator\">?.</span>title <span class=\"token operator\">??</span> <span class=\"token string\">\"What's new in ECMAScript 2020\"</span></code></pre></div>\n<h2 id=\"importmeta-제안자-domenic-denicola\" style=\"position:relative;\"><a href=\"#importmeta-%EC%A0%9C%EC%95%88%EC%9E%90-domenic-denicola\" aria-label=\"importmeta 제안자 domenic denicola permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">import.meta</code> (제안자: Domenic Denicola)</h2>\n<p><a href=\"https://twitter.com/domenic\">Domenic Denicola</a>가 제안한 <a href=\"https://github.com/tc39/proposal-import-meta\"><code class=\"tui-language-text\">import.meta</code></a>는 현재 실행 중인 모듈에 호스트에 관한 메타 데이터 객체를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">import</span><span class=\"token punctuation\">.</span>meta<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// file:///Users/pawelgrzybek/main.js</span></code></pre></div>\n<h2 id=\"export--as-ns-from-mod\" style=\"position:relative;\"><a href=\"#export--as-ns-from-mod\" aria-label=\"export  as ns from mod permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">export * as ns from &quot;mod&quot;</code></h2>\n<p>개발자가 다른 모듈의 네임 스페이스를 새로운 이름의 특수 객체(exotic object)로 내보낼 수 있게 하는 <a href=\"https://spectranaut.github.io/proposal-export-ns-from/\">유용한 기능</a>이 추가되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> ns <span class=\"token keyword\">from</span> <span class=\"token string\">\"mod\"</span></code></pre></div>","frontmatter":{"id":"ko_20200409","title":"ECMAScript 2020의 새로운 점","description":"ECMAScript 2020의 새로운 기능이 확정되었다. 필자는 2016, 2017, 2018, 2019년과 마찬가지로 올해 새롭게 추가된 기능을 예제와 함께 살펴보려고 한다.","date":"2020.04.09","author":"곽희나","tags":["ecmascript"],"thumbnail":"https://user-images.githubusercontent.com/8615506/78867832-bfc34400-7a7c-11ea-8cab-3dbe2a0ecb8f.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20200409","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}