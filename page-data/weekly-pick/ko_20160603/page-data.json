{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20160603","result":{"data":{"post":{"html":"<h1 id=\"프로토타입-기반-언어-자바스크립트\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EA%B8%B0%EB%B0%98-%EC%96%B8%EC%96%B4-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\" aria-label=\"프로토타입 기반 언어 자바스크립트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로토타입 기반 언어, 자바스크립트</h1>\n<p>자바스크립트는 원형 객체로 새로운 객체를 생성하는 프로토타입(원형) 기반 언어다.\n프로토타입 기반 언어란 무엇일까? 자바스크립트로 프로토타입 언어의 특징을 어떻게 구현할까?\n이전에 접했던 자바스크립트에서의 프로토타입에 대한 글이 어려웠다면, 이 글을 통해서 조금이나마 쉽게 이해할 수 있기를 기대한다.</p>\n<h3 id=\"프로토타입-기반-언어\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EA%B8%B0%EB%B0%98-%EC%96%B8%EC%96%B4\" aria-label=\"프로토타입 기반 언어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로토타입 기반 언어</h3>\n<p>자바스크립트는 프로토타입 기반 언어다. 프로토타입 기반 언어란 무엇일까?\n위키피디아에는 다음과 같이 정의되어 있다.</p>\n<blockquote>\n<p>프로토타입 기반 언어는 클래스 기반 언어에서 상속을 사용하는 것과는 다르게,\n객체를 원형(프로토타입)으로 하는 복제 과정을 통해 객체의 동작 방식을 재사용 할 수 있게 한다.</p>\n</blockquote>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15846032/1de7ec4a-2cb4-11e6-9cb2-32ecd69bc2a9.png\" alt=\"image\"></p>\n<p>프로토타입 기반 언어는 원형 객체를 복제하여 새로운 객체를 하는 생성하는 언어를 말한다.\n그런데 자바스크립트도 복제를 하는가? 자바스크립트는 약간 다르다. 복제가 아닌 프로토타입 링크를 통해 원형을 참조한다.</p>\n<p>그러면 프로토타입 링크란 무엇인가?</p>\n<h3 id=\"자바스크립트-객체의-프로토타입-링크\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9D%EC%B2%B4%EC%9D%98-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EB%A7%81%ED%81%AC\" aria-label=\"자바스크립트 객체의 프로토타입 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 객체의 프로토타입 링크</h3>\n<p>프로토타입 링크를 설명하려면, 우선 자바스크립트의 객체에 대해 먼저 알아야 한다.</p>\n<blockquote>\n<p>자바스크립트에서 단순 원시 타입(simple primitive)인 문자열, 숫자, 불리언, null, undefined를 제외한\n모든 타입은 객체다.</p>\n</blockquote>\n<p>그렇다. 자바스크립트에서는 배열도 객체고 함수도 객체다.</p>\n<p>자바스크립트에서 객체는 원형 객체로 부터 생성되며, 생성된 객체는 원형에 대한 프로토타입 링크(<code class=\"tui-language-text\">__proto__</code>)를 갖게 된다.</p>\n<blockquote>\n<p><code class=\"tui-language-text\">__proto__</code>는 원형에 대한 참조 정보를 갖고 있는 객체의 내부 속성으로, ES6 부터는 표준으로 제정되었다.</p>\n</blockquote>\n<p>원형 또한 객체이기 때문에 원형은 또 다른 원형을 참조하게 되고, 다음 그림과 같이 연속된 프로토타입 링크를 통해 자바스크립트 객체의 최종 원형인 <code class=\"tui-language-text\">Object.prototype</code>까지 연결된다.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15841811/f14b233e-2c8e-11e6-988d-6ea081b4c984.png\" alt=\"프로토타입 체인\"></p>\n<blockquote>\n<p><code class=\"tui-language-text\">Object.prototype</code> 객체에는 <code class=\"tui-language-text\">toString</code>, <code class=\"tui-language-text\">hasOwnProperty</code> 함수 등과 같이 자바스크립트 객체에서 흔히 사용하던 속성들이 정의되어 있고, 그로 인해 모든 객체에서 해당 속성들을 사용할 수 있다.</p>\n</blockquote>\n<p>그림과 같이 객체 간에 형성되어있는 일련의 링크를 프로토타입 체인이라고 부른다.</p>\n<p>프로토타입 체인에 대해 조금 더 알아볼 필요가 있을 것 같다.</p>\n<h3 id=\"프로토타입-체인\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8\" aria-label=\"프로토타입 체인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로토타입 체인</h3>\n<p>우선 foo라는 객체에 다음과 같이 속성을 정의한다.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15841819/ff4e643c-2c8e-11e6-9e3d-ea0df8075206.png\" alt=\"객체 foo\"></p>\n<p>당연한 얘기겠지만 <code class=\"tui-language-text\">foo.a</code>는 <code class=\"tui-language-text\">foo.b</code>는 2를 반환한다.\n그렇다면 <code class=\"tui-language-text\">foo</code>객체에 정의되지 않은 <code class=\"tui-language-text\">foo.c</code>를 호출하게 되면 어떤 값을 반환할까? undefined를 반환할까?</p>\n<p><code class=\"tui-language-text\">foo</code>객체의 프로토타입 체인을 보기 전까지 알 수 없다.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15841859/401afff2-2c8f-11e6-81e7-63cc13fc6977.png\" alt=\"객체 foo 프로토타입 체인\"></p>\n<p>이것이 <code class=\"tui-language-text\">foo</code>객체의 프로토타입 체인이다. 이 체인에서 <code class=\"tui-language-text\">foo.c</code>는 무엇을 반환할까?</p>\n<p><code class=\"tui-language-text\">foo</code>객체의 속성에 접근하게 되면 프로토타입 체인은 호출한 <code class=\"tui-language-text\">foo</code>객체의 속성부터 <code class=\"tui-language-text\">Object.prototype</code>까지까지 프로토타입 링크를 따라 차례차례 탐색하기 시작한다.\n위 그림에서는 '원형 객체2'에 <code class=\"tui-language-text\">c</code>가 정의되어 있기 때문에 <code class=\"tui-language-text\">foo.c</code>는 <code class=\"tui-language-text\">undefined</code>가 아닌 7을 반환한다.</p>\n<p>만약, 체인 상의 어떤 객체에도 존재하지 않는 <code class=\"tui-language-text\">foo.d</code>에 접근하게 되면, 어떤 값을 반환할까?\n프로토타입 체인의 최종 원형인 <code class=\"tui-language-text\">Object.prototype</code>까지 탐색한 후 값이 없음을 확인하고 <code class=\"tui-language-text\">undefined</code>를 반환한다.</p>\n<p>자바스크립트에서는 객체 속성에 접근하게 되면 해당 객체의 속성들만 탐색한 후 결과를 반환하는 것이 아니라, 최종 원형인 <code class=\"tui-language-text\">Object.prototype</code>까지 탐색한 후 결과를 반환한다는 것을 기억하자.</p>\n<p>그러면 이제 프로토타입 체인을 코드로 직접 구현해보자.</p>\n<h3 id=\"objectcreate함수로-자바스크립트의-프로토타입-체인-구현하기\" style=\"position:relative;\"><a href=\"#objectcreate%ED%95%A8%EC%88%98%EB%A1%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"objectcreate함수로 자바스크립트의 프로토타입 체인 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">Object.create</code>함수로 자바스크립트의 프로토타입 체인 구현하기</h3>\n<p>ES5 이전에는 프로토타입 체인을 구현하려면 무조건 생성자 함수와 <code class=\"tui-language-text\">new</code> 연산자를 사용해야 했다.</p>\n<blockquote>\n<p><code class=\"tui-language-text\">new</code> 연산자 사용은 ES5 이전의 유일한 객체 생성 방법이며 리터럴(literal) 방식도 내부적으로는 <code class=\"tui-language-text\">new</code> 연산자를 사용한다.</p>\n</blockquote>\n<p>그러나 클래스 기반 언어를 따라 한 <code class=\"tui-language-text\">new</code> 연산자는 프로토타입 체인을 복잡하게 만들어, 사용자로 하여금 프로토타입 체인에 대한 구현을 어렵게 했다.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15843258/a6c97614-2c9b-11e6-8771-15de4f7ed58b.png\" alt=\"복잡복잡\"></p>\n<p>다행스럽게도 ES5부터는 <code class=\"tui-language-text\">Object.create</code>라는 프로토타입 언어의 특징을 잘 살려 객체를 생성할 수 있는 새로운 방법을 제공한다.</p>\n<p>여기서는 <code class=\"tui-language-text\">Object.create</code>를 사용하여 프로토타입 체인에 대해 보다 쉽게 구현하는 방법에 대해 설명하겠다.</p>\n<blockquote>\n<p>Object.create 함수는 ES5부터 지원하는 함수이며, 인자로 전달된 객체를 원형으로 하는 새로운 객체를 생성하는 기능을 한다.</p>\n</blockquote>\n<p>먼저 <code class=\"tui-language-text\">init</code>함수와 <code class=\"tui-language-text\">identify</code>함수를 정의한 <code class=\"tui-language-text\">foo</code>객체를 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">init</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">who</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>me <span class=\"token operator\">=</span> who<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">identify</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"I am \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>me<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15841886/86483832-2c8f-11e6-85fa-2c1aa5d51b26.png\" alt=\"코드 foo 객체\"></p>\n<p><code class=\"tui-language-text\">foo</code>객체는 최종 원형 객체인 <code class=\"tui-language-text\">Object.prototype</code>를 참조하고 있다.</p>\n<p>다음으로 <code class=\"tui-language-text\">foo</code>객체를 원형으로 하는 <code class=\"tui-language-text\">bar</code>객체를 생성해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token keyword\">var</span> bar <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbar<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">speak</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello,\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">identify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15841920/b7015364-2c8f-11e6-821d-f1f4a06fca4e.png\" alt=\"코드 bar 객체\"></p>\n<p><code class=\"tui-language-text\">bar</code> 객체는 <code class=\"tui-language-text\">foo</code>객체를 원형으로 생성되었기 때문에 프로토타입 링크(<code class=\"tui-language-text\">__proto__</code>)를 통해 <code class=\"tui-language-text\">foo</code>를 참조하고 <code class=\"tui-language-text\">foo</code>에서 정의한 <code class=\"tui-language-text\">init</code>과 <code class=\"tui-language-text\">identify</code>함수를 모두 사용할 수 있다.\n<code class=\"tui-language-text\">bar</code> 객체에 정의한 <code class=\"tui-language-text\">speak</code>함수를 보면 <code class=\"tui-language-text\">foo</code>객체에서 정의한 <code class=\"tui-language-text\">identify</code>함수를 사용하는 것을 볼 수 있다.</p>\n<p>이제 마지막으로 <code class=\"tui-language-text\">bar</code>를 원형으로 하는 객체를 생성해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token keyword\">var</span> baz <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbaz<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"baz\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbaz<span class=\"token punctuation\">.</span><span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, I am baz</span></code></pre></div>\n<p><img src=\"https://cloud.githubusercontent.com/assets/2888775/15841982/328d5424-2c90-11e6-9384-737da27db263.png\" alt=\"코드 baz 객체\"></p>\n<p><code class=\"tui-language-text\">Object.create</code>함수를 이용하여 <code class=\"tui-language-text\">baz</code> 객체를 생성했다.\n<code class=\"tui-language-text\">baz</code>의 원형 객체는 <code class=\"tui-language-text\">bar</code>이며 <code class=\"tui-language-text\">bar</code>의 원형 객체는 <code class=\"tui-language-text\">foo</code>이기 때문에, <code class=\"tui-language-text\">baz</code>에서는 <code class=\"tui-language-text\">foo</code>의 <code class=\"tui-language-text\">init</code>과 <code class=\"tui-language-text\">bar</code>의 <code class=\"tui-language-text\">speak</code> 모두 사용이 가능하다.</p>\n<p><code class=\"tui-language-text\">Object.create</code>함수를 사용하여 자바스크립트의 프로토타입 체인을 구현해 보았다. 위에서 설명한 개념을 아주 쉽게 구현할 수 있었다.</p>\n<p>ES5를 지원하지 않는 브라우저에서 <code class=\"tui-language-text\">Object.create</code>를 사용하려면 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\">MDN에서 제공하는 폴리필(polyfill)</a>을 추가하면 된다.</p>\n<blockquote>\n<p>폴리필(polyfill)이란 브라우저에서 지원하지 않는 api를 보충해 주는 코드를 말한다.</p>\n</blockquote>\n<h3 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h3>\n<ol>\n<li>프로토타입 기반 언어인 자바스크립트의 객체는 원형으로부터 생성된다.</li>\n<li>생성된 객체는 프로토타입 링크(<code class=\"tui-language-text\">__proto__</code>)를 통해 원형을 참조한다.</li>\n<li>객체들 사이에 형성된 일련의 링크(프로토타입 링크)를 프로토타입 체인이라고 한다.</li>\n<li>Object.create함수를 이용하면, 프로토타입 언어의 특징을 살린 프로토타입 체인을 쉽게 구현할 수 있다.</li>\n</ol>\n<p><br><br><br></p>\n<h4 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h4>\n<ul>\n<li>카일 심슨, 『You Don't Know JS - this와 객체 프로토타입』, 이일웅, 한빛미디어(2015)</li>\n<li>나라얀 프루스티, 『ECMAScript 6 길들이기』, 이일웅, 에이콘(2016)</li>\n<li><a href=\"https://ko.wikipedia.org/wiki/%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85_%EA%B8%B0%EB%B0%98_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\">위키피디아 - 프로토타입 기반 프로그래밍</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain\">MDN: 상속과 프로토토타입</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\">MDN: Object.create</a></li>\n<li><a href=\"https://john-dugan.com/object-oriented-javascript-pattern-comparison/\">Object Oriented JavaScript Pattern Comparison - OLOO Pattern</a></li>\n</ul>","frontmatter":{"id":"ko_20160603","title":"프로토타입 기반 언어, 자바스크립트","description":"자바스크립트는 원형 객체로 새로운 객체를 생성하는 프로토타입(원형) 기반 언어다. 프로토타입 기반 언어란 무엇일까? 자바스크립트로 프로토타입 언어의 특징을 어떻게 구현할까? 이전에 접했던 자바스크립트에서의 프로토타입에 대한 글이 어려웠다면, 이 글을 통해서 조금이나마 쉽게 이해할 수 있기를 기대한다.","date":"2016.06.03","author":"김성호","tags":["ecmascript"],"thumbnail":"https://cloud.githubusercontent.com/assets/2888775/15846032/1de7ec4a-2cb4-11e6-9cb2-32ecd69bc2a9.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20160603","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}