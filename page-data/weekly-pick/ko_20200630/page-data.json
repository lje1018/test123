{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20200630","result":{"data":{"post":{"html":"<h1 id=\"puppeteer로-e2e-테스트하기-팁---puppeteer와-함께-속도-높이기\" style=\"position:relative;\"><a href=\"#puppeteer%EB%A1%9C-e2e-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EA%B8%B0-%ED%8C%81---puppeteer%EC%99%80-%ED%95%A8%EA%BB%98-%EC%86%8D%EB%8F%84-%EB%86%92%EC%9D%B4%EA%B8%B0\" aria-label=\"puppeteer로 e2e 테스트하기 팁   puppeteer와 함께 속도 높이기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Puppeteer로 E2E 테스트하기 팁 - Puppeteer와 함께 속도 높이기!</h1>\n<blockquote>\n<p>원문 : <a href=\"https://goodguydaniel.com/blog/tips-end-to-end-testing-puppeteer/\">https://goodguydaniel.com/blog/tips-end-to-end-testing-puppeteer/</a></p>\n</blockquote>\n<p>자바스크립트 세계에서 E2E 테스트는 신나는 한 때를 보내고 있다. 지난 몇 년 동안, 자바스크립트 커뮤니티에서 <a href=\"https://www.cypress.io/\">cypress</a>와 <a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v4.0.1&#x26;show=outline\">Puppeteer</a>와 같은 도구들이 쏟아져나왔고 빠르게 채택되어 왔다.</p>\n<p>오늘은 Puppeteer에 관해서 이야기할 것이다.</p>\n<p>Puppeteer를 사용할 때 고려해야 할 사항들을 이해하는 데 전반적으로 도움이 될만한 실용적인 팁과 자원들을 공유하려고 한다.</p>\n<p><strong>다룰 주제들</strong></p>\n<ol>\n<li>실행하기</li>\n<li>테스트 작성하기</li>\n<li>디버깅하기</li>\n<li>성능 측정 테스트 자동화</li>\n<li>브라우저 지원 범위</li>\n</ol>\n<h2 id=\"실행하기\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행하기</h2>\n<p>이번 목차에서는 Jest와 같은 기본 테스트 라이브러리/프레임워크 사용 시 고려해야 할 상호운용성(interoperability) 내용을 포함해, Puppeteer로 테스트를 실행하기 위한 주요 부분들을 다룬다.</p>\n<h3 id=\"병렬로-테스트-실행하기\" style=\"position:relative;\"><a href=\"#%EB%B3%91%EB%A0%AC%EB%A1%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"병렬로 테스트 실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>병렬로 테스트 실행하기</h3>\n<p>작성한 테스트 케이스 묶음(test suite)을 다양한 브라우저 인스턴스에서 실행시키려면 선택한 테스트 러너(test runner)에 의존해야 한다. 예를 들어 <a href=\"https://jestjs.io/\">Jest</a>를 사용할 때는, 동시에 실행시킬 브라우저 세션 개수를 정의하기 위해서 <a href=\"https://jestjs.io/docs/en/cli.html#--maxworkersnumstring\">maxWorkers</a> 옵션을 설정한다.</p>\n<h3 id=\"전역-타임아웃값-알기\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%ED%83%80%EC%9E%84%EC%95%84%EC%9B%83%EA%B0%92-%EC%95%8C%EA%B8%B0\" aria-label=\"전역 타임아웃값 알기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 타임아웃값 알기</h3>\n<p>테스트 타임아웃에 대한 기본 전역 값을 증가시키는 것이 필요하다. E2E 테스트는 실행하는 데 몇 초가 소요될 수 있다. Jest를 사용한다면, <a href=\"https://jestjs.io/docs/en/configuration#testtimeout-number\">testTimeout</a> 속성을 사용해 타임아웃값을 설정할 수 있다. Jest 26.0의 기본값은 5초이다.</p>\n<p>앞서 얘기한 설정을 위한 <code class=\"tui-language-text\">jest.config.js</code> 예제 파일을 준비했다.</p>\n<p><strong>jest.config.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  verbose<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  rootDir<span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span>\n  testTimeout<span class=\"token operator\">:</span> <span class=\"token number\">30000</span><span class=\"token punctuation\">,</span>\n  maxWorkers<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://jestjs.io/docs/en/configuration#testtimeout-number\">mocha</a>를 사용한다면 <code class=\"tui-language-text\">describe</code> 블록 최상단에 <code class=\"tui-language-text\">this.timeout(VALUE_IN_SECONDS)</code>를 추가할 수 있다.</p>\n<h3 id=\"puppeteerlaunch-추상화하기\" style=\"position:relative;\"><a href=\"#puppeteerlaunch-%EC%B6%94%EC%83%81%ED%99%94%ED%95%98%EA%B8%B0\" aria-label=\"puppeteerlaunch 추상화하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>puppeteer.launch 추상화하기</h3>\n<p>작성한 테스트를 검증하기 위해 <a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v3.1.0&#x26;show=api-puppeteerlaunchoptions\">puppeteer.launch</a>를 실행해야 한다. 랩퍼 함수를 만들고 이 함수 안에서 호출하여 추상화하는 것이 좋다. 그렇게 하면 커스터마이징 한 모든 테스트 환경을 한 곳에서 쉽게 관리할 수 있다. <strong>구성</strong> 내용은 다음과 같다.</p>\n<ul>\n<li>브라우저가 열어야할 페이지를 클라이언트가 지정할 수 있도록 한다.</li>\n<li>실행할 테스트의 <strong>네트워크 조건</strong>을 클라이언트가 선택할 수 있도록 한다. \"네트워크 연결 속도 떨어뜨리기\" 목차에서 이 내용을 다룰 것이다.</li>\n<li><a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v3.1.0&#x26;show=api-puppeteerlaunchoptions\">DevTools</a>의 실행 여부 등을 클라이언트가 지정할 수 있도록 한다.</li>\n</ul>\n<p><strong>boot.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> puppeteer <span class=\"token keyword\">from</span> <span class=\"token string\">\"puppeteer\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">boot</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> browser <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    goToTargetApp <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    headless <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    devtools <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    slowMo <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options<span class=\"token punctuation\">;</span>\n\n  browser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    headless<span class=\"token punctuation\">,</span>\n    devtools<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>slowMo <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">{</span> slowMo <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>goToTargetApp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 테스트할 앱과 관련된 몇 가지 환경 변수가 여기 있다고 가정한다.</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">APP_URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> page <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>실행 함수(launch function)를 가지고 테스트 환경의 설정을 추상화하여 사용하는 것을 선호한다. 이 함수를 가능한 한 작게 유지하려고 노력하지만, 가끔은 여기에 무언가를 더 추가하고 싶은 충동을 느끼곤 한다. 여기 이런 말이 있다.</p>\n<blockquote>\n<p>\"함수는 한 가지 일만 해야 한다. 그 일을 잘해야 하고. 그 일만 해야 한다.\"</p>\n</blockquote>\n<p>원문: <a href=\"https://www.amazon.com/gp/product/0132350882/ref=as_li_tl?ie=UTF8&#x26;camp=1789&#x26;creative=9325&#x26;creativeASIN=0132350882&#x26;linkCode=as2&#x26;tag=goodguydaniel-20&#x26;linkId=7d43375b6b0cd381f5ce0e61779b6fc5\">Robert C. Martin의 Clean Code</a> 발췌</p>\n<h3 id=\"네트워크-연결-속도-떨어뜨리기\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%97%B0%EA%B2%B0-%EC%86%8D%EB%8F%84-%EB%96%A8%EC%96%B4%EB%9C%A8%EB%A6%AC%EA%B8%B0\" aria-label=\"네트워크 연결 속도 떨어뜨리기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 연결 속도 떨어뜨리기</h3>\n<p>테스트는 다양한 네트워크 속도에서 실행될 수 있다. <a href=\"https://gist.github.com/trungpv1601/2ccd3cc998149a84ba80ed7a4c9ef562\">운 좋게 찾은 gist 코드를 기반</a>으로 한 사용 패턴을 공유하겠다.</p>\n<p><code class=\"tui-language-text\">puppeteer.launch</code> 실행 구문을 추상화했다면, 다음과 같이 네트워크 프리셋(<code class=\"tui-language-text\">NETWORK_PRESETS</code>)을 사용해 테스트 환경을 변경할 수 있다.</p>\n<p><strong>boot.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> puppeteer <span class=\"token keyword\">from</span> <span class=\"token string\">\"puppeteer\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token constant\">NETWORK_PRESETS</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./network-presets\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">boot</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> browser <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    goToTargetApp <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    headless <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    devtools <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    slowMo <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options<span class=\"token punctuation\">;</span>\n\n  browser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    headless<span class=\"token punctuation\">,</span>\n    devtools<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>slowMo <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">{</span> slowMo <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>goToTargetApp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 테스트할 앱과 관련된 몇 가지 환경 변수가 여기 있다고 가정한다.</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">TARGET_APP_URL</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>targetAppQueryParams<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>network <span class=\"token operator\">&amp;&amp;</span> <span class=\"token constant\">NETWORK_PRESETS</span><span class=\"token punctuation\">[</span>network<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 커스터마이징 한 네트워크 속도를 설정한다.</span>\n      <span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createCDPSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"Network.emulateNetworkConditions\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">NETWORK_PRESETS</span><span class=\"token punctuation\">[</span>network<span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> page <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>network-presets.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// source: https://gist.github.com/trungpv1601/2ccd3cc998149a84ba80ed7a4c9ef562</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">GPRS</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    offline<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    downloadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">50</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    uploadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    latency<span class=\"token operator\">:</span> <span class=\"token number\">500</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  Regular2G<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    offline<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    downloadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">250</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    uploadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">50</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    latency<span class=\"token operator\">:</span> <span class=\"token number\">300</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  Good2G<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    offline<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    downloadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">450</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    uploadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">150</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    latency<span class=\"token operator\">:</span> <span class=\"token number\">150</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  Regular3G<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    offline<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    downloadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">750</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    uploadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">250</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    latency<span class=\"token operator\">:</span> <span class=\"token number\">100</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  Good3G<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    offline<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    downloadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    uploadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">750</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    latency<span class=\"token operator\">:</span> <span class=\"token number\">40</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  Regular4G<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    offline<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    downloadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    uploadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    latency<span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">DSL</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    offline<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    downloadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    uploadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    latency<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  WiFi<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    offline<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    downloadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">30</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    uploadThroughput<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">15</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    latency<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"브라우저-익스텐션-불러오기\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%9D%B5%EC%8A%A4%ED%85%90%EC%85%98-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"브라우저 익스텐션 불러오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 익스텐션 불러오기</h3>\n<p>여기에 브라우저 익스텐션을 불러오는 방법이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 1. 프로젝트에서 EXTENSION_PATH 값에 따라서 puppeteer를 실행한다.</span>\n<span class=\"token comment\">// EXTENSION_PATH는 익스텐션 에셋의 디렉토리를 가리키는 상대 경로다.</span>\nbrowser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 익스텐션은 head-full 모드로만 동작한다.</span>\n  headless<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  devtools<span class=\"token punctuation\">,</span>\n  args<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">--disable-extensions-except=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">EXTENSION_PATH</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">--load-extension=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">EXTENSION_PATH</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span><span class=\"token punctuation\">(</span>slowMo <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">{</span> slowMo <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. title 값으로 익스텐션을 찾는다.</span>\n<span class=\"token comment\">// 이것도 사용 사례에 따라 다르게 다루고 싶어할 수 있다.</span>\n<span class=\"token keyword\">const</span> targets <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">targets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> extensionTarget <span class=\"token operator\">=</span> targets<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> _targetInfo <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> _targetInfo<span class=\"token punctuation\">.</span>title <span class=\"token operator\">===</span> <span class=\"token string\">\"my extension page title\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 3. URL에서 extensionId를 얻는다.</span>\n<span class=\"token comment\">// 고정된 extensionId를 가지고 있다면 환경 변수의 값을 가져오고 그렇지 않으면 빈 값으로 동작할 것이다.</span>\n<span class=\"token keyword\">const</span> partialExtensionUrl <span class=\"token operator\">=</span> extensionTarget<span class=\"token punctuation\">.</span>_targetInfo<span class=\"token punctuation\">.</span>url <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> extensionID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> partialExtensionUrl<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// \"popup.html\" 파일은 익스텐션의 진입점이다.</span>\n<span class=\"token keyword\">const</span> extensionPopupHtml <span class=\"token operator\">=</span> <span class=\"token string\">\"popup.html\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 4. 새 탭에서 크롬 익스텐션 열기</span>\n<span class=\"token comment\">// 익스텐션 URL을 정상적으로 빌드하려면 extensionId와 진입점 파일이 필요하다.</span>\nextensionPage <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nextensionUrl <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">chrome-extension://</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>extensionID<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>extensionPopupHtml<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> extensionPage<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span>extensionUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ... 이제 extensionPage을 사용하여 익스텐션과 상호 작용한다.</span></code></pre></div>\n<p>Puppeteer로 크롬 익스텐션을 테스트하는 방법에 대해서 더 알고 싶다면, <a href=\"https://gokatz.me/\">Gokul Kathirvel</a>의 <a href=\"https://gokatz.me/blog/automate-chrome-extension-testing/\">크롬 익스텐션 UI 테스트 자동화하기</a> 글을 읽어보길 바란다.</p>\n<h2 id=\"테스트-작성하기\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"테스트 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 작성하기</h2>\n<p>이 장에서 \"input 필드에서 텍스트 값 지우기\" 목차를 제외한 다른 내용들은 공식 문서에서 쉽게 찾을 수 있다. Puppeteer API의 필수 주제들을 살펴보겠다.</p>\n<h3 id=\"pageevaluate로-작업하기\" style=\"position:relative;\"><a href=\"#pageevaluate%EB%A1%9C-%EC%9E%91%EC%97%85%ED%95%98%EA%B8%B0\" aria-label=\"pageevaluate로 작업하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>page.evaluate로 작업하기</h3>\n<p><a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v3.0.3&#x26;show=api-pageevaluatepagefunction-args\">page.evaluate</a>를 사용할 때, 페이지 컨텍스트 상에서 실행된다는 것을 자세히 알아야 한다. 즉, 화살표 함수의 인자로 <code class=\"tui-language-text\">page.evaluate</code>를 사용하면 함수 밖에서 <code class=\"tui-language-text\">page.evaluate</code>를 참조할 수 없다. <code class=\"tui-language-text\">page.evaluate</code>의 세 번째 인자로 필요한 모든 데이터를 제공해야 한다는걸 잊지 말아라.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// input 엘리먼트에서 \"value\" 값 추출하기</span>\n<span class=\"token keyword\">const</span> inputValue <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> inputEl<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"pagewaitforselector와-pagewaitforfunction\" style=\"position:relative;\"><a href=\"#pagewaitforselector%EC%99%80-pagewaitforfunction\" aria-label=\"pagewaitforselector와 pagewaitforfunction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>page.waitForSelector와 page.waitForFunction</h3>\n<p><a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v3.1.0&#x26;show=api-pagewaitforselectorselector-options\">page.waitForSelector</a> 및 <a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v3.1.0&#x26;show=api-pagewaitforfunctionpagefunction-options-args\">page.waitForFunction</a> API에 익숙해지면 테스트를 작성하는 데 생산성이 매우 높아진다. 변경 사항을 작성하기 위한 몇 가지 테스트가 있는 경우, 테스트를 진행하기 전 UI에는 일부 조건이 충족될 때까지 기다려야 된다. 테스트 진행을 일시 정지하고 UI를 기다리는 일은 Puppeteer에서만 일어나는 것이 아니라 일반적인 관행이다. 아래에서 몇 가지 기본적인 사용 예를 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 이 함수는 테스트를 진행하기 전에 메뉴가 표시되기를 기다린다.</span>\n<span class=\"token comment\">// 이렇게하면 메뉴의 리스트 항목과 상호 작용할 수 있다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getSmuiSelectOptions</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> selector <span class=\"token operator\">=</span> <span class=\"token string\">\".mdc-menu-surface li\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForSelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> timeout<span class=\"token operator\">:</span> <span class=\"token number\">1000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$$</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 애플리케이션에서 어떤 항목이 제거되었을 때 스네이크바가 나타날 때까지 기다린다.</span>\n<span class=\"token keyword\">await</span> extensionPage<span class=\"token punctuation\">.</span><span class=\"token function\">waitForFunction</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token operator\">!</span><span class=\"token operator\">!</span>document\n      <span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*[data-testid=\"global-snackbar\"]'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>innerText<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deleted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    timeout<span class=\"token operator\">:</span> <span class=\"token number\">2000</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>결정을 내려야한다. 타임아웃 시간을 늘리거나 줄여야 한다. 테스트 속도를 빠르게 하기 위해서는 가능한 타임아웃 시간을 짧게 설정하기를 권장한다. (목킹되지 않은) 네트워크 요청을 수행해야 하는 시스템에 대해 E2E 테스트를 실행하는 것은 네트워크 불안정성을 고려해야 한다는 것을 의미한다. 일반적으로 <em>완벽한</em> 네트워크 조건에서 실행되더라도, 당신은 타임아웃값으로 약간의 여유마저 줄이고 싶어할 것이다.</p>\n<h3 id=\"elementselect\" style=\"position:relative;\"><a href=\"#elementselect\" aria-label=\"elementselect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>element.select</h3>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\">네이티브 HTML select 엘리먼트</a>에서 옵션을 선택할 수 있는 방법이 마음에 든다. 이것은 단일 및 다중 선택에서 모두 동작하며 자연스럽다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// \"custom-http-method\" id 값을 가진 select 엘리먼트에서 HTTP method 방식을 선택하기</span>\n<span class=\"token keyword\">const</span> selectEl <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#custom-http-method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">await</span> selectEl<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"tui-language-text\">element.select</code>를 사용하면 편리하지만, <a href=\"https://material-ui.com/components/selects/#select\">Material UI 컴포넌트의 select</a> 객체처럼 숨겨진 input 필드를 가진 <code class=\"tui-language-text\">div &gt; ul &gt; li</code> 구조로 작성된 사용자 정의 select 필드에 대해서는 다르게 접근해야 한다.</p>\n<h3 id=\"스크린샷\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7\" aria-label=\"스크린샷 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크린샷</h3>\n<p>특정 테스트 케이스의 경우에는 테스트 전체에서 애플리케이션이 어떻게 보이는지 타임라인으로 생성해주는 스크린샷 묶음으로 출력하고 싶다. 테스트 사이에 스크린샷을 찍으면, 실패한 테스트에서 무엇을 디버깅할지 초기 지점을 알 수 있다. <a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v3.1.0&#x26;show=api-pagescreenshotoptions\">page.screenshot</a> API를 감싼 작은 유틸리티 모듈이 여기 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 스크린샷이 실패했을 때 테스트를 중단시키지 않기 위해서 `page.screenshot` 호출을 try-catch로 감쌌다.</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">prtScn</span><span class=\"token punctuation\">(</span>\n  page<span class=\"token punctuation\">,</span>\n  path <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Screenshot </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"png\"</span><span class=\"token punctuation\">,</span> fullPage<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// eslint-disable-next-line no-console</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// eslint-disable-next-line no-console</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to take screenshot but test will proceed...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> utils <span class=\"token keyword\">from</span> <span class=\"token string\">\"test-utils\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// (...)</span>\n\n<span class=\"token comment\">// 참고: 이 유틸리티는 클래스로 만들 수 있고 스크린샷을 찍을 때마다 매번 전달하지 않도록 페이지를 컨텍스트로 전달한다.</span>\n<span class=\"token keyword\">await</span> utils<span class=\"token punctuation\">.</span><span class=\"token function\">prtScn</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"페이지-다시-불러오기\" style=\"position:relative;\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%8B%A4%EC%8B%9C-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0\" aria-label=\"페이지 다시 불러오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>페이지 다시 불러오기</h3>\n<p><a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v3.1.0&#x26;show=api-pagereloadoptions\">page.reload</a> API를 사용해보자. 테스트를 계속해서 진행하기 전에 특정 브라우저 작업이 유휴 상태(idle)가 될 때까지 기다리는 옵션 세트를 지정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> waitUntil<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"networkidle0\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위 예제에서는 <code class=\"tui-language-text\">networkidle0</code>를 사용하여 페이지를 다시 불러오고, 0.5초 내에 HTTP 요청이 없으면 테스트를 진행할 수 없다.</p>\n<h3 id=\"input-필드에서-텍스트-지우기\" style=\"position:relative;\"><a href=\"#input-%ED%95%84%EB%93%9C%EC%97%90%EC%84%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%A7%80%EC%9A%B0%EA%B8%B0\" aria-label=\"input 필드에서 텍스트 지우기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>input 필드에서 텍스트 지우기</h3>\n<p>필자는 input 필드를 지우는 아주 창의적인 방법을 찾느라 기절할뻔 했다. 몇몇 개발자들은 <a href=\"https://github.com/puppeteer/puppeteer/issues/3094\">이 기능에 관심을 보였었지만</a>, 반대로 관심이 없어 보이기도 했다. 찾아낸 방법은 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">/**\n * 엘리먼트 지우기\n * @param {ElementHandle} el\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> clickCount<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> el<span class=\"token punctuation\">.</span><span class=\"token function\">press</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Backspace\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>세 번 연속된 클릭으로 전체 텍스트를 선택하는 기능을 사용하며 <strong>이 방법은 크롬에서만 동작</strong>한다. 그런 다음 전체 필드를 지우기 위해 키보드 이벤트를 트리거해야 한다.</p>\n<h2 id=\"디버깅하기\" style=\"position:relative;\"><a href=\"#%EB%94%94%EB%B2%84%EA%B9%85%ED%95%98%EA%B8%B0\" aria-label=\"디버깅하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디버깅하기</h2>\n<p>몇 가지 디버깅 기술을 강조하고 싶고, 특히 <code class=\"tui-language-text\">slowMo</code> 옵션이 그렇다.</p>\n<h3 id=\"slowmo로-디버깅하기\" style=\"position:relative;\"><a href=\"#slowmo%EB%A1%9C-%EB%94%94%EB%B2%84%EA%B9%85%ED%95%98%EA%B8%B0\" aria-label=\"slowmo로 디버깅하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>slowMo로 디버깅하기</h3>\n<p><a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v3.1.0&#x26;show=api-puppeteerlaunchoptions\">slowMo</a> 옵션을 사용하여 개별 테스트를 디버그하고 싶을 것이다. 이 옵션은 사람이 실제로 애플리케이션과 상호 작용하는 것과 같은 상황에서 확인할 수 있도록 E2E 테스트의 상호 작용(단계)을 느리게 만든다. 이 방법은 굉장히 가치있다고 생각한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">page<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> slowMo<span class=\"token operator\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다음 GIF 이미지에서 <code class=\"tui-language-text\">slowMo</code> 옵션을 사용해서 실행했을 때와 그렇지 않았을 때의 차이를 볼 수 있다.</p>\n<p><img src=\"https://goodguydaniel.com/static/no-slowmo-6aca3f0c8588266fc361b6d539dff4ef.gif\">\nsource: © 2020 by goodguydaniel.com\n<em><strong>slowMo 옵션을 사용하지 않은</strong> tweak 크롬 익스텐션에 대한 E2E 테스트. 무슨 일이 일어나고 있는지 알 수 없다.</em></p>\n<p><img src=\"https://goodguydaniel.com/static/slowmo-8396d2ef46b4ad484930ead8c25d32f3.gif\">\nsource: © 2020 by goodguydaniel.com\n<em><strong>slowMo 옵션을 사용한</strong> tweak 크롬 익스텐션에 대한 E2E 테스트. 마치 사람이 입력하는 것처럼 'URL' 영역에 문자가 나타나는 것을 볼 수 있다.</em></p>\n<p>이 예제에서는 서로 다른 사용 사례를 보여주기 위해서 <a href=\"https://tweak-extension.com/\">tweak 브라우저 익스텐션</a>을 사용했다.</p>\n<p>디버깅을 위한 더 놀라운 팁을 주자면, 구글의 디버깅 팁에 관한 짧은 글을 읽어보길 바란다.</p>\n<h3 id=\"디버거-사용하기\" style=\"position:relative;\"><a href=\"#%EB%94%94%EB%B2%84%EA%B1%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"디버거 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디버거 사용하기</h3>\n<p><a href=\"https://developers.google.com/web/tools/puppeteer/debugging\">구글의 디버깅 팁</a>에서 이 내용을 얻었다. X초 동안 테스트를 정지시키고 테스트 실패 이유를 확인하고 애플리케이션을 검사하기 위해 <code class=\"tui-language-text\">sleep</code>문을 던지는 습관이 있었다. 그러나 지금은 아래 코드를 사용하는 방식으로 완전히 바꿨다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">debugger</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>더 훌륭한 디버깅 팁을 보려면, <a href=\"https://developers.google.com/web/tools/puppeteer/debugging\">구글의 디버깅 팁에 관한 짧은 글</a>을 읽어보길 바란다.</p>\n<h2 id=\"성능-측정-테스트-자동화\" style=\"position:relative;\"><a href=\"#%EC%84%B1%EB%8A%A5-%EC%B8%A1%EC%A0%95-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9E%90%EB%8F%99%ED%99%94\" aria-label=\"성능 측정 테스트 자동화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>성능 측정 테스트 자동화</h2>\n<p>웹 성능 테스트를 자동화하기 위해 Puppeteer를 사용하는 것이 굉장히 <em>화제</em> 다. <a href=\"https://addyosmani.com/\">Addy Osmani</a>가 개발한 <a href=\"https://github.com/addyosmani/puppeteer-webperf\">addyosmani/puppeteer-webperf</a> 모듈이 없었다면 이 글을 작성할 수도 없었고, 이 모듈 외에 더 추천할만한 것도 없다. 프로젝트의 <code class=\"tui-language-text\">README.md</code>에서 성능 자동화를 사용해볼 수 있는 여러 예제를 확인할 수 있다.</p>\n<h2 id=\"브라우저-지원-범위\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%A7%80%EC%9B%90-%EB%B2%94%EC%9C%84\" aria-label=\"브라우저 지원 범위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 지원 범위</h2>\n<p><a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v4.0.1&#x26;show=outline\">공식 문서</a>에 따르면, 이 글을 작성하던 시점에 호환성 실험 단계로 발생할 수 있는 몇 가지 문제만 주의하면 파이어폭스에서도 Puppeteer를 사용할 수 있다고 했다. \"puppeteer.launch 추상화하기\" 목차에서 다룬 <code class=\"tui-language-text\">puppeteer.launch</code> API 옵션을 통해서 실행시킬 브라우저를 지정할 수 있다.</p>\n<p><strong>Puppeteer에서 가장 좋아하는 부분은 무엇인가? 다음에 무엇을 배우고 싶은지 추천해주지 않겠는가?</strong></p>","frontmatter":{"id":"ko_20200630","title":"Puppeteer로 E2E 테스트하기 팁 - Puppeteer와 함께 속도 높이기!","description":"자바스크립트 세계에서 E2E 테스트는 신나는 한 때를 보내고 있다. 지난 몇 년 동안, 자바스크립트 커뮤니티에서 cypress와 Puppeteer와 같은 도구들이 쏟아져나왔고 빠르게 채택되어 왔다. 오늘은 Puppeteer에 관해서 이야기할 것이다.","date":"2020.06.30","author":"류선임","tags":["devtool","test"],"thumbnail":null}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20200630","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}