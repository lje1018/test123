{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/en_20191028","result":{"data":{"post":{"html":"<h1 id=\"toast-ui-doc-a-tool-that-will-awesomeify-your-javascript-api-documentation\" style=\"position:relative;\"><a href=\"#toast-ui-doc-a-tool-that-will-awesomeify-your-javascript-api-documentation\" aria-label=\"toast ui doc a tool that will awesomeify your javascript api documentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TOAST UI Doc: A Tool That Will AWESOMEIFY Your JavaScript API Documentation</h1>\n<p>If you are reading this, it may be safe to assume that you are a developer who has had an experience with writing an API documentation. Let's assume that someone told you to write API documentation for hundred functions. What kind of image comes to your mind? Is it an image of you opening a new excel or a word document and enumerating hundred different functions and descriptions while meticulously staring at the source code? If you are one of the lucky ones who are fortunate enough to have prior experience with documenation generators and therefore are aware of the benefits they provide, such nightmare would not have crossed your mind for even a little bit. </p>\n<p>For those who are yet to know what a <strong>documentation generator</strong> is, like Java's  <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html\">Javadoc</a> and Python's <a href=\"http://www.sphinx-doc.org/en/master/\">Sphinx</a>, documentation generator is a tool that parses through the comments made in the source file, and compiles the information regarding classes, methods, and the API into an HTML document. If the source file has been adequately commented during development, you can forgo the <em>tedious process of manually writing the API documentation</em> with a single line of command provided by the documentation generator. Obviously, such tool exists for JavaScript as well, and <a href=\"https://github.com/jsdoc/jsdoc\">JSDoc</a> is one of the most famous documentation generators for JavaScript.</p>\n<p>At NHN's FE Development Lab, we have enthusiastically utilized such documentation generators. We have even built on the original JSDoc to build our own customized <a href=\"https://github.com/nhn/tui.jsdoc-template\">TOAST UI JSDoc Template</a>, and have used this very module to document our TOAST UI APIs. Also, recently, we have published the <a href=\"https://github.com/nhn/toast-ui.doc\">TOAST UI Doc</a>, our own documentation generator. While it may be similar to the previous TOAST UI JSDoc Template, this project was started in order to build a JavaScript documentation generator that is <em>better in terms of development and management</em>. In this article, I plan on sharing the story of how TOAST UI Doc came to be, including the general timeline of the development cycle, used technology, and offered benefits. With hopes that TOAST UI Doc would be able to be recognized as one of the most helpful documentation generators for JavaScript, let's dig in!</p>\n<h2 id=\"how-toast-ui-doc-came-to-be-released\" style=\"position:relative;\"><a href=\"#how-toast-ui-doc-came-to-be-released\" aria-label=\"how toast ui doc came to be released permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How TOAST UI Doc Came to be Released</h2>\n<p>Before TOAST UI Doc was released, TOAST UI JSDoc Template, JSDoc Template for simplicity's sake, was used in drafting API documentation for TOAST UI products. The image below illustrates the process of generating API documents. </p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646176-27bf1b80-f970-11e9-9154-44ce1cf61bbc.png\" alt=\"01-tui-jsdoc-template-structure\"></p>\n<p>JSDoc Template was nothing more than a <em>template</em>, not a documentation generator. JSDoc parses the comments from JavaScript, and gives it structure in the shape of an HTML file with the help of templating. If you <a href=\"https://jsdoc.app/about-configuring-default-template.html\">set the template to be <code class=\"tui-language-text\">tui-jsdoc-template</code> in JSDoc's config file</a>, the <a href=\"https://nhn.github.io/tui.jsdoc-template/latest/\">TOAST UI's template</a> will be applied instead of the <a href=\"https://cancerberosgx.github.io/jsdoc-templates-demo/demo/default/Environment.html\">default template</a>. The LNB (tabs, search, toggle menu etc.) and the Examples page, as visible on the JSDoc Template's demo page, are added features that we have extended from the JSDoc. </p>\n<p>While it attracted and helped many users in that it offered a wider range of features than the default template does (it was even linked to JSDoc's Github Readme,) users have also claimed that it <em>lacked readability, making the API not as accessible</em>. In order to target such issue, we have decided to improve our JSDoc Template's design. </p>\n<h3 id=\"is-improving-the-design-enough\" style=\"position:relative;\"><a href=\"#is-improving-the-design-enough\" aria-label=\"is improving the design enough permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Is Improving the Design Enough?</h3>\n<p>As we were getting ready to start the design improvement process, we thoroughly examined the JSDoc Template and found some issues ourselves. Because it is a template that was extended from the JSDoc's default template, it had numerous JSDoc module dependencies, and the code was messy. Therefore, it became even more complicated when we tried to add or modify a feature, in that we needed to have a strong grasp on the inner workings of JSDoc and its implementation. Also, JSDoc's processing of <a href=\"http://taffydb.com/working_with_data.html\">Taffy</a> type parsing data and using the template file (<code class=\"tui-language-text\">*.tmpl</code>) made JSDoc Template maintenance an extremely convoluted task.</p>\n<p>Therefore, before we could do anything about the design, we needed to figure out a way to solve the maintenance issue, so we started looking for alternatives to JSDoc. There was a number of documentation generators for JavaScript. The image below is a <a href=\"https://www.slant.co/topics/5104/~javascript-documentation-tools\">popularity comparison of JavaScript documentation generators</a> conducted in July, 2018. </p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646177-27bf1b80-f970-11e9-860e-39606953230c.png\" alt=\"02-rank-favorite\"></p>\n<p>JSDoc reigned supreme. We considered other tools on the list, but none satisfied the three qualities that we valued. </p>\n<ol>\n<li>It must be able to parse <a href=\"https://jsdoc.app\">JSDoc comments</a>.</li>\n<li>It must offer a template, and it must be extendable.</li>\n<li>It must have had active commits within the last six months. </li>\n</ol>\n<p>We have considered <a href=\"https://github.com/yui/yuidoc\">YUIDoc</a> as well as <a href=\"https://github.com/esdoc/esdoc\">ESDoc</a>, but both have suffered blows when JSDoc rose to popularity. It was then that we found a new tool. While we were looking at <a href=\"https://www.npmtrends.com/documentation-vs-esdoc-vs-jsdoc-vs-yuidocjs\">npm trend's npm download comparison chart</a>, we ran into <a href=\"https://github.com/documentationjs/documentation\">documentation.js</a>. </p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646178-27bf1b80-f970-11e9-8dd5-e8b291a5cc35.png\" alt=\"03-rank-npm\"></p>\n<h3 id=\"discovering-documentationjs\" style=\"position:relative;\"><a href=\"#discovering-documentationjs\" aria-label=\"discovering documentationjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Discovering documentation.js</h3>\n<p>documentation.js checked all of our boxes! Following are the characteristics that we found satisfactory. </p>\n<ul>\n<li>It supports ES5, ES2017, JSX, Vue, and Flow type.</li>\n<li>It offers JSDoc parsing data as Markdown and JSON.</li>\n<li>It offers API that can be used in the Node environment. </li>\n</ul>\n<p>In terms of functionality, it was worth a shot. As a final check, we tested how we could extend the existing template. Upon speculation, documentation.js's <a href=\"http://documentation.js.org/html-example\">default template</a> had a UI that was similar to that of JSDoc Template, so we presumed that it would be an easy road ahead. However, we had to reimplement features like search and Examples page with respect to the documentation.js's template. In other words, we had to start all over from when we were first building our JSDoc template. </p>\n<p>Two roads diverged in front of us. We could have either fixed the designs of JSDoc Template and be happy with already implemented features, or rebuild according to documentation.js despite the obviously glaring efforts. </p>\n<h3 id=\"why-not-build-a-wrapper\" style=\"position:relative;\"><a href=\"#why-not-build-a-wrapper\" aria-label=\"why not build a wrapper permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why Not Build a Wrapper?</h3>\n<p>While we leaned towards the latter, we knew that simply adding functionality to templates could not fix the problems that we had with JSDoc Template. documentation.js uses handlebars as templates, and much like JSDoc Templates, the process of extending a template complicated the code while providing numerous restrictions on data modification. Instead, we focused on the fact that documentation.js allowed us to use parsed data as JSON. If we have access to the parsing data we could have just built our own documentation generator without having to rely on other tools' templates.</p>\n<p>Then, we found a way to create templates and generate documentations: the <strong>Static Site Generators</strong>! Static webpages are pages built purely with HTML, CSS, and JavaScript. Using static site generators, we could retrieve the product as an HTML file like the documentation generators and build our own templates. </p>\n<p>If you are familiar with <a href=\"https://pages.github.com/\">Github pages</a>, you should also be familiar with <a href=\"https://jekyllrb.com\">Jekyll</a>. Furthermore, recently, numerous static site generators are offered as open source projects. </p>\n<p>We decided to build a wrapper with a built-in static site generator that could generate JavaScript API documentation. The following is a simple breakdown of the wrapper's structure. </p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646179-2857b200-f970-11e9-915f-5f5b4bee6e44.png\" alt=\"04-wrapper-structure\"></p>\n<h3 id=\"choosing-gatsby\" style=\"position:relative;\"><a href=\"#choosing-gatsby\" aria-label=\"choosing gatsby permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Choosing Gatsby</h3>\n<p>All that was left to do was to choose which static site generator to use. Two candidates were considered: <a href=\"https://www.gatsbyjs.org\">Gatsby</a> and <a href=\"https://docusaurus.io\">Docusaurus</a>. Both have active contributors and can support React components when building templates. Additionally, they both make page generation and distribution incredibly easy with the help of CLI and option configurations. </p>\n<p>While Docusaurus seemed more appropriate than Gatsby for a documentation generator because of the version control capabilities and easy CI configuration, it had more limitations when it came to UI extension. For example, we had to use options to implement the LBN and headers instead of using React components. In other words, <em>we were still dealing with templates</em>. Lastly, the main problem was that Docusaurus only allowed Markdown to be used internally, making it difficult to implement the intricate designs. </p>\n<p>Contrarily, Gatsby allowed us to implement everything that we had in mind. The image below depicts Gatsby's workflow, and while the overall flow is not much different from that of other static site generators, the technology stack used is stronger than any other tool out there. </p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646180-2857b200-f970-11e9-80c6-b64cc17d1120.png\" alt=\"05-gatsby\"></p>\n<p>(Source : <a href=\"https://www.gatsbyjs.org/\">https://www.gatsbyjs.org/</a>)</p>\n<p>The following sections examine Gatsby's most important features. </p>\n<h4 id=\"spa-development\" style=\"position:relative;\"><a href=\"#spa-development\" aria-label=\"spa development permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SPA Development</h4>\n<p>Using Gatsby, you can develop Single Page Applications (SPAs) using <a href=\"https://graphql.org/\">GraphQL</a> and <a href=\"https://reactjs.org/\">React</a>. GraphQL helps us to get data from the data source, and Gatsby even supports <a href=\"https://www.gatsbyjs.org/docs/static-query/\">static query through GraphQL</a>. Furthermore, because it is built with React, we can easily build components to extend the features, and can work as if we were developing a regular React application. </p>\n<h4 id=\"variety-of-plugin-support\" style=\"position:relative;\"><a href=\"#variety-of-plugin-support\" aria-label=\"variety of plugin support permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variety of Plugin Support</h4>\n<p><a href=\"https://www.gatsbyjs.org/plugins/\">Gatsby plugins</a> also help us to reduce manual labor that goes into development. For example, instead of manually configuring code highlighting features, you could simply install the <a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-prismjs/\"><code class=\"tui-language-text\">gatsby-remark-prismjs</code></a> plugin and start using it immediately. </p>\n<h4 id=\"convenient-build-process\" style=\"position:relative;\"><a href=\"#convenient-build-process\" aria-label=\"convenient build process permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Convenient Build Process</h4>\n<p>Gatsby provides us with a <a href=\"https://www.gatsbyjs.org/docs/gatsby-cli/\">Gatsby CLI</a> to facilitate development and build. Gatsby generates static websites using Webpack, and because Gatsby has a built-in Webpack configuration, as a user, you simply have to execute Gatsby commands. If your project requires more intricate configuration, you can use Gatsby's configuration file to better suit your needs. Furthermore, by providing the development server, you can view the product in live time as you build. </p>\n<h4 id=\"distribution-as-a-static-site\" style=\"position:relative;\"><a href=\"#distribution-as-a-static-site\" aria-label=\"distribution as a static site permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Distribution as a Static Site</h4>\n<p>Sites that have been developed as SPAs create pages on the server side according to the accessible paths while the build is underway. The static sites are built through such process, and can be used with Github pages, despite the fact that Github pages do not support SPAs. </p>\n<p>The following is a summary of benefits that come with using Gatsby as a new documentation generator. </p>\n<ol>\n<li>It can process data as JSON with the help of GraphQL and plugins. In other words, it can help us use the parsed data from documentation.js. </li>\n<li>It is easy to maintain, as the template can be built as a single application using React components.</li>\n<li>Because the produced document is an SPA, it offers better user-experience compared to documentation generated using other tools, in that users do not have to refresh the page. </li>\n</ol>\n<p>Gatsby was perfectly suitable for our new documentation generator.</p>\n<h3 id=\"the-creation-of-toast-ui-doc\" style=\"position:relative;\"><a href=\"#the-creation-of-toast-ui-doc\" aria-label=\"the creation of toast ui doc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Creation of TOAST UI Doc</h3>\n<p>Finally, we had a more solid picture of replacing the JSDoc Template. <strong>TOAST UI Doc (package name: <code class=\"tui-language-text\">@toast-ui/doc</code>)</strong>, with the help of documentation.js and Gatsby, was our own and brand new documentation generator. </p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646181-2857b200-f970-11e9-940b-b1ceb14d62bd.png\" alt=\"06-@toast-ui:doc-structure\"></p>\n<h2 id=\"benefits-of-using-toast-ui-doc\" style=\"position:relative;\"><a href=\"#benefits-of-using-toast-ui-doc\" aria-label=\"benefits of using toast ui doc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Benefits of Using TOAST UI Doc</h2>\n<p>TOAST UI Doc is an upgraded version of the JSDoc Template in terms of functionality and as well as design. TOAST UI Doc does not merely serve as a documentation for the JavaScript API, but is much more. Now, let's explore deeply into TOAST UI Doc, and allow me to introduce the benefits TOAST UI Doc offers!</p>\n<h3 id=\"awesome-design\" style=\"position:relative;\"><a href=\"#awesome-design\" aria-label=\"awesome design permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWESOME! Design</h3>\n<p>API Documentation must allow developers to easily access necessary API information at first glance. The readability issue is a lot more complicated than tinkering with font sizes and colors. The UI must be well designed to aptly display the information according to different types of the API. TOAST UI Doc carefully considered such issues so that the improved design may effectively display relevant API information. </p>\n<p>The following image is an actual screenshot of <a href=\"https://github.com/nhn/tui.grid\">TOAST UI Grid</a> API documentation generated using TOAST UI Doc. Compared to previous documentations with <a href=\"https://nhn.github.io/tui.grid/3.0.0/\">JSDoc Template</a> and <a href=\"https://documentation.js.org/html-example/\">documentation.js template</a>, the documentation generated using TOAST UI Doc is much easier on the eyes. </p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646182-2857b200-f970-11e9-82f1-a0afc642f816.png\" alt=\"07-example-grid-01\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646183-28f04880-f970-11e9-86da-aa4b38f6f263.png\" alt=\"08-example-grid-02\"></p>\n<p>The following features help TOAST UI Doc to be comparatively more readable. </p>\n<h4 id=\"segmented-lnb-menu-structure\" style=\"position:relative;\"><a href=\"#segmented-lnb-menu-structure\" aria-label=\"segmented lnb menu structure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Segmented LNB Menu Structure</h4>\n<p>TOAST UI Doc's LNB is one of its main features. While LNB menu allows users to navigate through the document's different pages, it serves a more important purpose. The LNB menu enables users to <em>grasp the general API information regarding different types and implementations used in the library</em>. TOAST UI Doc provides <strong>seven implementations</strong> and <strong>five API types</strong>, and the LNB is structured according to the JSDoc information defined in the code. </p>\n<ul>\n<li>\n<p>Seven Implementations (Main Menu)</p>\n<ul>\n<li>MODULES</li>\n<li>EXTERNALS</li>\n<li>CLASSES</li>\n<li>NAMESPACES</li>\n<li>MIXINS</li>\n<li>TYPEDEF</li>\n</ul>\n</li>\n<li>\n<p>Five API Types (Sub Menu)</p>\n<ul>\n<li>EXTENDS</li>\n<li>MIXES</li>\n<li>STATIC PROPERTIES</li>\n<li>STATIC METHODS</li>\n<li>INSTANCE METHODS</li>\n<li>EVENTS</li>\n</ul>\n</li>\n</ul>\n<br>\nIn the original JSDoc Template, users would have had to go dig around in the details page to view inherited class information or method types. However, now, TOAST UI Doc's newly implemented LNB allows users to view *Class/Module classification*, *Instance/Static method classification*, *Mixin/Inheritance information*, *Custom events information*, and much more easily. \n<h4 id=\"clear-parameter-exposure\" style=\"position:relative;\"><a href=\"#clear-parameter-exposure\" aria-label=\"clear parameter exposure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Clear Parameter Exposure</h4>\n<p>Information regarding parameters during instance creation or a method call is incredibly valuable. It is difficult to obtain necessary information if the parameter is an object that is buried deeply under multiple layers of lower properties. In order to solve this problem, TOAST UI Doc uses the multi table structure to display parameter information. Furthermore, although table's columns are used for optional and default values, declarative syntax like <code class=\"tui-language-text\">[foo]</code>, <code class=\"tui-language-text\">bar = 0</code> are accepted, and each type (<code class=\"tui-language-text\">number</code>, <code class=\"tui-language-text\">boolean</code>, <code class=\"tui-language-text\">string</code>, <code class=\"tui-language-text\">array</code>, <code class=\"tui-language-text\">object</code>, <code class=\"tui-language-text\">function</code>, and etc.) has different color as to be even more distinguishable.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646184-28f04880-f970-11e9-881f-4bcac2672495.png\" alt=\"09-design-params\"></p>\n<h4 id=\"numerous-emphasis-features\" style=\"position:relative;\"><a href=\"#numerous-emphasis-features\" aria-label=\"numerous emphasis features permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Numerous Emphasis Features</h4>\n<p>Furthermore, we carefully considered ways to put emphasis so that users can fully deliver any API information including LNB menu state, icon, and code highlights. Especially for code highlighting feature, because it is built using the TOAST UI's brand colors, it is much more readable than other code highlighting themes.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646185-28f04880-f970-11e9-8f6a-6c37a30f20fd.png\" alt=\"10-design-emphasis\"></p>\n<h3 id=\"using-examples-pages-to-introduce-libraries\" style=\"position:relative;\"><a href=\"#using-examples-pages-to-introduce-libraries\" aria-label=\"using examples pages to introduce libraries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Examples Pages to Introduce Libraries</h3>\n<p>When working with component level JavaScript libraries, it would be helpful if there were a way for users to experiment with the library themselves. TOAST UI Doc uses the <strong>Examples Pages</strong> to achieve such goal. Users can access variety of examples by clicking on the 'Examples' tab at the top of the LNB, and each page is complete with simple demos and necessary scripts and markups when using the library. With the help of TOAST UI Doc, you don't need to manage the API and Examples separately. You can easily view, find, and explore necessary information with a click of a button. </p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646186-2988df00-f970-11e9-9be4-6a45f74a78e2.png\" alt=\"11-examples-page\"></p>\n<h3 id=\"convenient-search\" style=\"position:relative;\"><a href=\"#convenient-search\" aria-label=\"convenient search permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Convenient Search</h3>\n<p>TOAST UI Doc provides a search feature for users to search through APIs within the document. The search bar is located at the top of the LNB, and can be used to search through the APIs and Examples pages. The search bar is complete with autocomplete feature that displays possible search targets, and can be used to access and search information quickly.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646187-2988df00-f970-11e9-9cef-bc8860fde127.gif\" alt=\"12-search\"></p>\n<h3 id=\"using-permalinks-to-inspect-code\" style=\"position:relative;\"><a href=\"#using-permalinks-to-inspect-code\" aria-label=\"using permalinks to inspect code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Permalinks to Inspect Code</h3>\n<p>Permalinks provide a permanant URL to a designated page. <a href=\"https://help.github.com/en/articles/getting-permanent-links-to-files\">Github also offers permalinks to source codes,</a> and TOAST UI Doc uses these permalinks to link the original source code to the API documentation. File name of the source code that prompted JSDoc and the line number are displayed at the right section of the API area as a link, and by clicking on the link, users are redirected to the actual Github repository. This feature is incredibly useful when studying the implementation detail of the API with JSDoc. </p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646188-2988df00-f970-11e9-8063-04d5c90d75d5.png\" alt=\"13-permalink\"></p>\n<h2 id=\"toast-ui-doc-users-manual\" style=\"position:relative;\"><a href=\"#toast-ui-doc-users-manual\" aria-label=\"toast ui doc users manual permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TOAST UI Doc User's Manual</h2>\n<p>Now that you know how the TOAST UI Doc came to be and its benefits, let's actually start using it. And it is easy as advertised. </p>\n<h3 id=\"install-and-environment-configuration\" style=\"position:relative;\"><a href=\"#install-and-environment-configuration\" aria-label=\"install and environment configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install and Environment Configuration</h3>\n<p>First, install the TOAST UI Doc globally from npm. </p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"tui-language-sh\"><code class=\"tui-language-sh\">$ npm install -g @toast-ui/doc</code></pre></div>\n<p>Next, navigate to the project folder for which to create the documentation, and create the configuration file (<code class=\"tui-language-text\">tuidoc.config.json</code>) at the root. Use this config file to customize necessary information when generating the documentation. Each option and respective values are explained in greater detail <a href=\"https://github.com/nhn/toast-ui.doc#setting-options-in-config-files\">here</a>. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">project/\n  ├─ ...\n  ├─ package.json\n  └─ tuidoc.config.json</code></pre></div>\n<h3 id=\"drafting-the-jsdoc\" style=\"position:relative;\"><a href=\"#drafting-the-jsdoc\" aria-label=\"drafting the jsdoc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Drafting the JSDoc</h3>\n<p>When the TOAST UI Doc is executed, documentation.js will parse the JSDoc from the JavaScript file and process it as a JSON file. Draft your <a href=\"https://jsdoc.app/index.html\">JSDoc</a> according to your API information. In the example below, information regarding <code class=\"tui-language-text\">MyDoc</code> class and its member <code class=\"tui-language-text\">getValue()</code> method. You can try it yourself using the <a href=\"https://github.com/nhn/toast-ui.doc/tree/master/demo/src\">demo code</a> and experiment with different ways to generate examples. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">/**\n * @class MyDoc\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyDoc</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @type {string}\n     * @private\n     */</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'Hello TOAST UI Doc!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Returns value of title.\n   * @returns {string} Title of MyDoc class\n   */</span>\n  <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"generating-the-documentation\" style=\"position:relative;\"><a href=\"#generating-the-documentation\" aria-label=\"generating the documentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generating the Documentation</h3>\n<p>TOAST UI Doc provides a CLI for users to be able to generate documentation conveniently. The <code class=\"tui-language-text\">tuidoc</code> command, when executed, generates the documentation, and <code class=\"tui-language-text\">--serve</code> option can be used to preview the generated product in local server. Then, add the script to the <code class=\"tui-language-text\">package.json</code> as shown in the example below. If the documentation has been created without any issues, you should be able to see that two new folders called <code class=\"tui-language-text\">_latest</code> and <code class=\"tui-language-text\">_[SemVer]</code> have been created under the root. Simply upload these folders to either Github pages or to the server, and you're done!</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"tui-language-sh\"><code class=\"tui-language-sh\">npx tuidoc</code></pre></div>\n<p>Now that wasn't so hard, was it? You have just created your first TOAST UI Doc documentation!</p>\n<h2 id=\"closing-remarks\" style=\"position:relative;\"><a href=\"#closing-remarks\" aria-label=\"closing remarks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Closing Remarks</h2>\n<p>TOAST UI Doc is a longterm project that took us over a year to build. We faced numerous challenges when Gatsby proceeded with a major update as we started developing with Gatsby v1.0, and when we were ready to publish, we had to apply it to all of TOAST UI products and had to make sure that we did not miss anything. Like any other project, we were bound to face difficulties. However, these hardships that we faced have become a <em>valuable chance for us to learn the alpha and the omega, ins and outs of the documentation generators</em>. Now that we have awesomified our TOAST UI documentation, it is your turn to awesomeify your JavaScript library API documentation!💪</p>\n<p>The TOAST UI Doc is available for download <a href=\"https://github.com/nhn/toast-ui.doc\">here</a>.</p>","frontmatter":{"id":"en_20191028","title":"TOAST UI Doc: A Tool That Will AWESOMEIFY Your JavaScript API Documentation","description":"If you are reading this, it may be safe to assume that you are a developer who has had an experience with writing an API documentation. Let's assume that someone told you to write API documentation for hundred functions. What kind of image comes to your mind?","date":"2019.10.28","author":"SeonIm Ryu","tags":["opensource","etc"],"thumbnail":"https://user-images.githubusercontent.com/18183560/69344163-c5ca9c80-0c23-11ea-903c-230402d19b9a.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"en_20191028","lang":"en"}},"staticQueryHashes":["2997033868","414700122","542722004"]}