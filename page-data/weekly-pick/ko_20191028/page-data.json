{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20191028","result":{"data":{"post":{"html":"<h1 id=\"당신의-자바스크립트-api-문서는-안녕하신가요\" style=\"position:relative;\"><a href=\"#%EB%8B%B9%EC%8B%A0%EC%9D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-api-%EB%AC%B8%EC%84%9C%EB%8A%94-%EC%95%88%EB%85%95%ED%95%98%EC%8B%A0%EA%B0%80%EC%9A%94\" aria-label=\"당신의 자바스크립트 api 문서는 안녕하신가요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>당신의 자바스크립트 API 문서는 안녕하신가요?</h1>\n<p>이 글을 읽고 있을 개발자라면 적어도 한 번쯤 API 문서를 작성해 본 경험이 있으리라 생각한다. \"오전까지 100개 함수에 대한 API 문서를 만들어주세요.\"라는 업무가 주어졌다고 가정해보자. 이때 어떤 그림이 그려지는가? 워드 또는 엑셀을 실행하고, 테이블을 추가하고, 소스 코드를 들여다보며 열심히 API 정보를 입력하고 있는 모습이 떠올랐는가? 문서화 도구를 사용해 보았고 문서화 도구가 주는 이점을 잘 알고 있는 이들이라면, 이런 상상은 절대 하고 싶지 않을 것이다.</p>\n<p>여기서 말하는 <strong>문서화 도구</strong>는 무엇일까? 문서화 도구(Documentation Generator)란, 소스 파일에 작성된 주석을 파싱하여 클래스, 메서드 등 API 정보를 HTML 문서로 생성해주는 도구를 지칭한다. 개발 중인 코드에 주석이 잘 작성되어 있다면, 문서화 도구가 제공하는 명령어 한 줄만으로 <em>불필요한 핸드메이드 작업</em> 을 피할 수 있다. 자바의 <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html\">Javadoc</a>, 파이썬의 <a href=\"http://www.sphinx-doc.org/en/master/\">Sphinx</a> 등이 문서화 도구에 해당한다. 당연히 자바스크립트를 위한 문서화 도구도 존재한다. 잘 알려진 자바스크립트 문서화 도구로는 <a href=\"https://github.com/jsdoc/jsdoc\">JSDoc</a>이 있다.</p>\n<p>NHN FE개발랩에서는 이러한 문서화 도구를 적극적으로 사용해 왔다. JSDoc 기본 템플릿을 커스터마이징 한 <a href=\"https://github.com/nhn/tui.jsdoc-template\">TOAST UI JSDoc Template</a>를 개발하기도 했으며, 이 모듈을 사용해 TOAST UI 제품의 API 문서를 만들었다. 그리고 최근에는 새 문서화 도구인 <a href=\"https://github.com/nhn/toast-ui.doc\">TOAST UI Doc</a>을 출시하게 되었다. TOAST UI Doc은 기존의 TOAST UI JSDoc Template와 닮은 듯 보이지만, <em>개발 및 관리 관점에서 더 나은</em> 자바스크립트 문서화 도구를 만들기 위한 목적으로 시작된 프로젝트다. 이 글에서는 개발부터 출시되기까지의 과정, 사용된 기술, 사용 이점 등 TOAST UI Doc에 대한 전반적인 이야기를 다뤄보려고 한다. TOAST UI Doc이 자바스크립트 문서화 도구의 하나로 잘 자리 잡길 바라는 마음과 함께 이 글을 시작해보겠다.</p>\n<h2 id=\"toast-ui-doc-출시-과정\" style=\"position:relative;\"><a href=\"#toast-ui-doc-%EC%B6%9C%EC%8B%9C-%EA%B3%BC%EC%A0%95\" aria-label=\"toast ui doc 출시 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TOAST UI Doc 출시 과정</h2>\n<p>TOAST UI Doc이 출시되기 전까지, TOAST UI의 제품들은 API 문서를 생성할 때 TOAST UI JSDoc Template(이하 JSDoc Template)를 사용했었다. 아래 이미지는 API 문서가 생성되는 과정을 그려본 것이다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646176-27bf1b80-f970-11e9-9154-44ce1cf61bbc.png\" alt=\"01-tui-jsdoc-template-structure\"></p>\n<p>JSDoc Template는 문서화 도구가 아니라 <em>JSDoc 문서 템플릿</em> 이다. JSDoc은 자바스크립트에서 주석을 파싱하고, 파싱된 데이터에 템플릿을 입혀 HTML 파일을 생성한다. <a href=\"https://jsdoc.app/about-configuring-default-template.html\">JSDoc 설정 파일에서 템플릿으로 <code class=\"tui-language-text\">tui-jsdoc-template</code>을 지정</a>하면, <a href=\"https://cancerberosgx.github.io/jsdoc-templates-demo/demo/default/Environment.html\">기본 템플릿</a> 대신 <a href=\"https://nhn.github.io/tui.jsdoc-template/latest/\">TOAST UI에서 개발한 템플릿</a>을 사용하게 된다. JSDoc Template 데모 페이지에서 본 LNB(탭, 검색, 토글 메뉴 등), Examples 페이지 등은 JSDoc을 확장해 만든 추가 기능들이다.</p>\n<p>JSDoc Template는 기본 템플릿보다 다양한 기능을 제공한다는 점에서 좋은 반응을 얻었지만(JSDoc 깃헙 리드미에 링크되기도 했다), <em>가독성이 떨어져서 API를 보기 힘들다</em> 는 의견이 종종 제보되었다. 우리는 이 문제를 해결하기 위해 JSDoc Template의 디자인을 개선하기로 했다.</p>\n<h3 id=\"이대로-사용해도-괜찮을까\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%8C%80%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%8F%84-%EA%B4%9C%EC%B0%AE%EC%9D%84%EA%B9%8C\" aria-label=\"이대로 사용해도 괜찮을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이대로 사용해도 괜찮을까?</h3>\n<p>디자인 개선 작업을 진행하기 전, JSDoc Template를 살펴보았고 몇 가지 문제점들이 보였다. JSDoc 기본 템플릿을 확장한 형태다 보니 JSDoc 모듈 의존 코드가 많고 복잡했다. 그래서 기능을 추가하거나 변경할 때 JSDoc 동작 원리와 구조를 이해하기 위한 학습 비용이 컸다. 또한 JSDoc에서 <a href=\"http://taffydb.com/working_with_data.html\">Taffy</a> 타입의 파싱 데이터 처리, 템플릿 파일(<code class=\"tui-language-text\">*.tmpl</code>)을 사용하는 구조는 JSDoc Template의 유지보수를 어렵게 만들었다.</p>\n<p>결국 디자인보다 관리 이슈부터 먼저 해결해야 했고, 이 시점에 JSDoc의 대안이 될 수 있는 다른 도구들도 찾아보게 되었다. 자바스크립트 문서화 도구의 종류는 생각보다 꽤 많았다. 아래 이미지는 <a href=\"https://www.slant.co/topics/5104/~javascript-documentation-tools\">자바스크립트 문서화 도구의 인기 순위를 비교</a>한 것이다. (2018년 7월 기준 비교)</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646177-27bf1b80-f970-11e9-860e-39606953230c.png\" alt=\"02-rank-favorite\"></p>\n<p>부동의 1위는 JSDoc이였다. 이 랭킹 목록에서 JSDoc을 제외한 다른 도구들을 검토해보았지만, 다음 3가지 조건을 모두 만족하는 도구는 거의 없었다.</p>\n<ol>\n<li><a href=\"https://jsdoc.app\">JSDoc 주석</a>을 파싱할 수 있어야 한다.</li>\n<li>템플릿을 제공하며 확장 가능해야 한다.</li>\n<li>6개월 이내 커밋 활동이 있어야 한다.</li>\n</ol>\n<p><a href=\"https://github.com/yui/yuidoc\">YUIDoc</a>, <a href=\"https://github.com/esdoc/esdoc\">ESDoc</a> 정도였지만 이 도구들마저도 JSDoc 등장과 함께 유명세를 잃어버린 것들이었다. 이때 새로운 도구가 눈에 들어왔다. <a href=\"https://www.npmtrends.com/documentation-vs-esdoc-vs-jsdoc-vs-yuidocjs\">npm 다운로드 수치를 비교한 지표</a>를 살펴보던 중, <a href=\"https://github.com/documentationjs/documentation\">documentation.js</a>를 발견하게 되었다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646178-27bf1b80-f970-11e9-8dd5-e8b291a5cc35.png\" alt=\"03-rank-npm\"></p>\n<h3 id=\"documentationjs의-발견\" style=\"position:relative;\"><a href=\"#documentationjs%EC%9D%98-%EB%B0%9C%EA%B2%AC\" aria-label=\"documentationjs의 발견 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>documentation.js의 발견</h3>\n<p>documentation.js는 우리가 찾고 있는 모든 조건을 만족했다. documentation.js에서 눈에 띄는 기능들은 다음과 같았다.</p>\n<ul>\n<li>ES5, ES2017, JSX, Vue, Flow 타입을 지원한다.</li>\n<li>JSDoc 파싱 데이터를 마크다운, JSON으로 제공한다.</li>\n<li>노드 환경에서 사용할 수 있는 사용자 API를 제공한다.</li>\n</ul>\n<p>기능 면에서 충분히 사용해 볼 가치가 있었다. 마지막 검토 사항으로, 템플릿을 어떤 방식으로 확장할지 테스트해 보았다. documentation.js의 <a href=\"http://documentation.js.org/html-example\">기본 템플릿</a>은 UI가 JSDoc Template와 유사한 형태로 구성되어 있어, 변경된 디자인을 적용하기에 쉬워 보였다. 하지만 검색, Examples 페이지 같은 추가 기능들은 documentation.js 템플릿에 맞춰 다시 개발을 해야 했다. 결국 JSDoc Template를 처음 만들 때와 같은 작업을 하는 셈이었다. 선택의 갈림길에 섰다. 이미 다 만들어져 있는 기능들이니 JSDoc Template를 디자인만 업데이트해서 쓸 것인가 아니면 공수가 들더라도 documentation.js를 사용해 다시 잘 만들어볼 것인가?</p>\n<h3 id=\"랩퍼를-만들어보는건-어떨까\" style=\"position:relative;\"><a href=\"#%EB%9E%A9%ED%8D%BC%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EB%8A%94%EA%B1%B4-%EC%96%B4%EB%96%A8%EA%B9%8C\" aria-label=\"랩퍼를 만들어보는건 어떨까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>랩퍼를 만들어보는건 어떨까?</h3>\n<p>후자로 의견이 기울었지만 단순히 템플릿에 기능만 추가한다고 해서 기존에 JSDoc Template가 가지고 있던 문제가 해결될 것 같지는 않았다. documentation.js에서는 템플릿으로 핸들바를 사용하는데 템플릿을 확장한다고 할 때 JSDoc Template 처럼 코드도 복잡해지고 필요한 데이터를 가공하는 방법에도 제약이 많았다. 대신 우리는 위에서 소개한 documentation.js의 기능 중, JSDoc 파싱 데이터를 JSON으로 제공한다는 점에 주목했다. 파싱 데이터만 있다면, 다른 도구의 템플릿을 확장하는 방식을 사용하는 대신 독자적인 문서화 도구를 만들 수 있기 때문이다.</p>\n<p>직접 템플릿을 만들고 문서를 생성할 수 있는 방법을 찾았다. 이때 <strong>정적 사이트 생성기(Static Site Generator)</strong> 가 떠올랐다. 정적 사이트는 정적 웹 페이지(Static Web Page)로 구성된 사이트 즉, HTML, CSS, JavaScript로만 만들어진 사이트를 말한다. 이 정적 사이트를 생성하는 도구가 정적 사이트 생성기다. 정적 사이트 생성기를 사용하면 문서화 도구처럼 HTML로 결과물을 얻을 수 있고 템플릿도 직접 개발할 수 있다. <a href=\"https://pages.github.com/\">깃헙 페이지(GitHub Pages)</a>에 익숙한 사람들이라면, 정적 사이트 생성기로 <a href=\"https://jekyllrb.com/\">Jekyll</a>을 많이 사용해보았을 것이다. 최근에는 다양한 정적 사이트 생성기가 오픈 소스로 제공되고 있다.</p>\n<p>우리는 정적 사이트 생성기를 내장해 자바스크립트 API 문서를 생성할 수 있는 랩퍼(Wrapper)를 만들기로 했다. 랩퍼의 구조를 정리해보면 다음과 같다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646179-2857b200-f970-11e9-915f-5f5b4bee6e44.png\" alt=\"04-wrapper-structure\"></p>\n<h3 id=\"gatsby의-선택\" style=\"position:relative;\"><a href=\"#gatsby%EC%9D%98-%EC%84%A0%ED%83%9D\" aria-label=\"gatsby의 선택 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby의 선택</h3>\n<p>남은 일은 어떤 정적 사이트 생성기를 사용할지 결정하는 것이다. <a href=\"https://www.gatsbyjs.org/\">Gatsby</a>와 <a href=\"https://docusaurus.io\">Docusaurus</a>가 후보에 올랐다. 둘 다 컨트리뷰션이 굉장히 활발한 오픈 소스로, 템플릿을 만들 때 React를 사용하여 컴포넌트 개발이 가능하다. 또한 CLI 및 옵션 설정으로 페이지 생성과 배포가 쉬운 점이 공통된 장점으로 꼽힌다.</p>\n<p>Docusaurus가 Gatsby 보다 문서 버전 관리 및 CI 설정이 용이해서 문서화 도구로 더 적합해 보였지만 UI 확장에 제한이 많았다. 예를 들어 LNB, 헤더는 리액트 컴포넌트로 개발하는 대신 옵션으로 설정해야 했다(여전히 <em>템플릿의 장벽이 존재</em> 했다). 그리고 가장 큰 문제로, 문서 내에서 사용되는 데이터가 마크다운만 가능하기 때문에 원하는 디자인으로 문서를 만들기 어려웠다.</p>\n<p>이에 반해 Gatsby는 우리가 구현하려는 기능들을 모두 가능하게 만들었다. 아래 이미지는 Gatsby의 워크플로우를 보여주는데, 전체적인 흐름은 다른 정적 사이트 생성기와 차이가 없어 보이지만 사용된 기술 스택만큼은 그 어느 도구보다도 강력하다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646180-2857b200-f970-11e9-80c6-b64cc17d1120.png\" alt=\"05-gatsby\"></p>\n<p>(출처 : <a href=\"https://www.gatsbyjs.org/\">https://www.gatsbyjs.org/</a>)</p>\n<p>Gatsby의 주요 기능들을 정리해보면 다음과 같다.</p>\n<h4 id=\"spa-개발\" style=\"position:relative;\"><a href=\"#spa-%EA%B0%9C%EB%B0%9C\" aria-label=\"spa 개발 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SPA 개발</h4>\n<p>Gatsby를 사용하면 <a href=\"https://graphql.org/\">GraphQL</a>과 <a href=\"https://reactjs.org/\">React</a>로 SPA(Single Page Application) 개발이 가능하다. GraphQL은 데이터 소스로부터 데이터를 가져오는 역할을 하며, Gatsby에서 <a href=\"https://www.gatsbyjs.org/docs/static-query/\">GraphQL을 쉽게 사용할 수 있는 방법을 제공</a>한다. 또한 React를 내장하고 있어 컴포넌트 개발이 가능하다. 일반적인 React 앱을 만들 때와 동일한 환경으로 개발할 수 있다.</p>\n<h4 id=\"다양한-플러그인-지원\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%96%91%ED%95%9C-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%A7%80%EC%9B%90\" aria-label=\"다양한 플러그인 지원 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다양한 플러그인 지원</h4>\n<p><a href=\"https://www.gatsbyjs.org/plugins/\">Gatsby 플러그인</a>을 사용하여 개발에 들어가는 공수를 줄여준다. 예를 들어, 코드 하이라이팅에 필요한 설정을 직접 하는 것이 아니라 <a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-prismjs/\"><code class=\"tui-language-text\">gatsby-remark-prismjs</code></a> 플러그인을 설치하고 코드에서 바로 사용하기만 하면 된다.</p>\n<h4 id=\"편리한-빌드-과정\" style=\"position:relative;\"><a href=\"#%ED%8E%B8%EB%A6%AC%ED%95%9C-%EB%B9%8C%EB%93%9C-%EA%B3%BC%EC%A0%95\" aria-label=\"편리한 빌드 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>편리한 빌드 과정</h4>\n<p><a href=\"https://www.gatsbyjs.org/docs/gatsby-cli/\">Gatsby는 CLI</a>를 제공하여 개발 및 빌드를 쉽게 할 수 있도록 도와준다. Gatsby는 Webpack을 사용해 정적 사이트를 생성하며, Webpack 설정 옵션이 내장되어 있어 사용하는 입장에서는 Gatsby 명령어만 실행하면 된다. 만약 세부 설정이 필요하다면 Gatsby에서 제공하는 설정 파일로 확장해서 사용할 수 있다. 데브 서버도 제공하여 로컬에서 실시간으로 사이트를 확인하며 개발할 수도 있다.</p>\n<h4 id=\"정적-사이트로-배포\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%A0%81-%EC%82%AC%EC%9D%B4%ED%8A%B8%EB%A1%9C-%EB%B0%B0%ED%8F%AC\" aria-label=\"정적 사이트로 배포 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정적 사이트로 배포</h4>\n<p>SPA로 개발된 사이트는 빌드되는 동안 접근할 수 있는 경로에 대해 서버 렌더링 된 페이지를 만들어낸다. 이런 과정으로 정적 사이트가 만들어지고, SPA를 지원하지 않는 깃헙 페이지에도 사용이 가능하다.</p>\n<p>Gatsby를 새 문서화 도구에서 사용했을 때 이점을 정리해보면 다음과 같았다.</p>\n<ol>\n<li>GraphQL과 플러그인을 사용해 데이터를 JSON으로 처리할 수 있다. 즉, documentation.js에서 파싱한 데이터를 사용할 수 있다.</li>\n<li>React 컴포넌트로 템플릿을 만들어 하나의 앱으로 깔끔하게 관리할 수 있다.</li>\n<li>생성된 문서는 SPA이기 때문에 전체 페이지를 리프레쉬해야 하는 다른 도구로 만든 문서에 비해 빠르고 사용자 경험이 더 좋다.</li>\n</ol>\n<p>Gatsby는 새 문서화 도구에서 요구하는 기능들을 처리하는 데 적합했다.</p>\n<h3 id=\"toast-ui-doc의-탄생\" style=\"position:relative;\"><a href=\"#toast-ui-doc%EC%9D%98-%ED%83%84%EC%83%9D\" aria-label=\"toast ui doc의 탄생 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TOAST UI Doc의 탄생</h3>\n<p>이로써 JSDoc Template을 대체하기 위한 그림이 그려졌다. documentation.js와 Gatsby의 조합과 함께 <strong>TOAST UI Doc(패키지명: <code class=\"tui-language-text\">@toast-ui/doc</code>)</strong> 이라는 이름으로 새 문서화 도구를 만들 수 있게 되었다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646181-2857b200-f970-11e9-940b-b1ceb14d62bd.png\" alt=\"06-@toast-ui:doc-structure\"></p>\n<h2 id=\"toast-ui-doc을-사용하면-좋은-몇-가지-이유\" style=\"position:relative;\"><a href=\"#toast-ui-doc%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%80-%EB%AA%87-%EA%B0%80%EC%A7%80-%EC%9D%B4%EC%9C%A0\" aria-label=\"toast ui doc을 사용하면 좋은 몇 가지 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TOAST UI Doc을 사용하면 좋은 몇 가지 이유</h2>\n<p>TOAST UI Doc은 JSDoc Template의 기능적인 장점을 살리면서 한층 업그레이드된 디자인이 더해진 문서화 도구이다. TOAST UI Doc은 단순히 자바스크립트 API 문서의 역할만 하지 않는다. 지금부터는 TOAST UI Doc을 자세히 들여다보면서, TOAST UI Doc이 제공하는 멋진 기능들을 소개하겠다.</p>\n<h3 id=\"어썸awesome-디자인\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EC%8D%B8awesome-%EB%94%94%EC%9E%90%EC%9D%B8\" aria-label=\"어썸awesome 디자인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어썸(Awesome)! 디자인</h3>\n<p>API 문서의 역할은 문서를 통해 개발자가 얻고자 하는 API 정보를 쉽게 파악할 수 있어야 한다. 단순히 폰트 크기나 색상 변경만으로는 가독성 문제를 해결하지 못한다. API 종류에 따라 어떻게 효과적으로 보여줄지 UI도 잘 설계되어 있어야 한다. TOAST UI Doc은 이러한 사항들을 고려하여 효과적으로 API를 보여줄 수 있도록 디자인 개선에 신경 썼다.</p>\n<p>다음은 실제로 <a href=\"https://github.com/nhn/tui.grid\">TOAST UI Grid</a>의 API 문서에 TOAST UI Doc을 적용한 모습이다. 이전에 사용했던 <a href=\"https://nhn.github.io/tui.grid/3.0.0/\">JSDoc Template</a>나 <a href=\"http://documentation.js.org/html-example/\">documentation.js 템플릿</a>과 비교했을 때, TOAST UI Doc으로 만들어진 문서에서 API 정보가 훨씬 더 눈에 잘 들어올 것이다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646182-2857b200-f970-11e9-82f1-a0afc642f816.png\" alt=\"07-example-grid-01\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646183-28f04880-f970-11e9-86da-aa4b38f6f263.png\" alt=\"08-example-grid-02\"></p>\n<p>TOAST UI Doc에서는 다음과 같은 요소들이 가독성을 높여준다.</p>\n<h4 id=\"세분화-된-lnb-메뉴-구성\" style=\"position:relative;\"><a href=\"#%EC%84%B8%EB%B6%84%ED%99%94-%EB%90%9C-lnb-%EB%A9%94%EB%89%B4-%EA%B5%AC%EC%84%B1\" aria-label=\"세분화 된 lnb 메뉴 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세분화 된 LNB 메뉴 구성</h4>\n<p>TOAST UI Doc의 LNB는 중추 역할을 한다. LNB 메뉴를 통해서 문서 내 각 페이지로 이동하는 것이 주요 기능이지만 이보다 더 중요한 기능이 있다. LNB 메뉴를 통해서 현재 <em>라이브러리에서 사용하고 있는 구현체의 종류와 각 구현체의 API 정보를 파악</em> 할 수 있다. TOAST UI Doc은 <strong>7가지 구현체</strong> 와 <strong>5가지 API 타입</strong> 을 제공하며, 코드에 정의된 JSDoc 정보에 따라 LNB 메뉴가 구성된다.</p>\n<ul>\n<li>\n<p>7가지 구현체 (메인 메뉴)</p>\n<ul>\n<li>MODULES</li>\n<li>EXTERNALS</li>\n<li>CLASSES</li>\n<li>NAMESPACES</li>\n<li>MIXINS</li>\n<li>TYPEDEF</li>\n</ul>\n</li>\n<li>\n<p>5가지 API 타입 (서브 메뉴)</p>\n<ul>\n<li>EXTENDS</li>\n<li>MIXES</li>\n<li>STATIC PROPERTIES</li>\n<li>STATIC METHODS</li>\n<li>INSTANCE METHODS</li>\n<li>EVENTS</li>\n</ul>\n</li>\n</ul>\n<br>\n기존 JSDoc Template에서는 상속된 클래스 정보나 메서드 종류를 파악하기 위해 상세 페이지까지 들어가서 확인해야 했다. 하지만 이제 TOAST UI Doc의 새롭게 구성된 LNB를 통해 *클래스/모듈 구분*, *인스턴스/스태틱 메서드 구분*, *믹스인/상속 정보*, *커스텀 이벤트 정보* 등을 바로 확인할 수 있다.\n<h4 id=\"깔끔한-파라미터-노출-방식\" style=\"position:relative;\"><a href=\"#%EA%B9%94%EB%81%94%ED%95%9C-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EB%85%B8%EC%B6%9C-%EB%B0%A9%EC%8B%9D\" aria-label=\"깔끔한 파라미터 노출 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>깔끔한 파라미터 노출 방식</h4>\n<p>인스턴스를 생성하거나 메서드를 호출할 때 사용되는 파라미터는 가장 중요한 API 정보다. 파라미터가 객체 타입이면서 하위 프로퍼티의 뎁스가 깊은 경우에는 문서 안에서 정보를 한 눈에 알아보기 어렵다. 이러한 문제를 해결하기 위해 TOAST UI Doc에서는 다중 테이블을 사용하여 파라미터 정보를 보여준다. 또한 옵셔널(optional) 및 기본값은 테이블 컬럼을 사용하는 대신 <code class=\"tui-language-text\">[foo]</code>, <code class=\"tui-language-text\">bar = 0</code>과 같이 구문을 사용하고, 타입(<code class=\"tui-language-text\">number</code>, <code class=\"tui-language-text\">boolean</code>, <code class=\"tui-language-text\">string</code>, <code class=\"tui-language-text\">array</code>, <code class=\"tui-language-text\">object</code>, <code class=\"tui-language-text\">function</code>, 그 외 참조 타입)마다 다른 색상을 사용하여 파라미터를 쉽게 구분할 수 있도록 도와준다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646184-28f04880-f970-11e9-881f-4bcac2672495.png\" alt=\"09-design-params\"></p>\n<h4 id=\"다양한-강조-기능\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%96%91%ED%95%9C-%EA%B0%95%EC%A1%B0-%EA%B8%B0%EB%8A%A5\" aria-label=\"다양한 강조 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다양한 강조 기능</h4>\n<p>이 외에도 LNB 메뉴 상태 표시, 아이콘, 코드 하이라이트 등 어떤 API 정보도 놓치지 않고 전달할 수 있도록 요소 강조 방법도 고려했다. 특히 코드 하이라이팅은 TOAST UI 브랜드 컬러 조합을 통해 만들어진 것으로 다른 코드 하이라이트 테마보다 가독성이 뛰어나다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646185-28f04880-f970-11e9-8f6a-6c37a30f20fd.png\" alt=\"10-design-emphasis\"></p>\n<h3 id=\"examples-페이지로-라이브러리-맛보기\" style=\"position:relative;\"><a href=\"#examples-%ED%8E%98%EC%9D%B4%EC%A7%80%EB%A1%9C-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%9B%EB%B3%B4%EA%B8%B0\" aria-label=\"examples 페이지로 라이브러리 맛보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Examples 페이지로 라이브러리 맛보기</h3>\n<p>컴포넌트 단위의 자바스크립트 라이브러리의 경우, 직접 사용해보고 사용 방법도 확인할 수 있는 페이지가 있으면 좋을 것이다. TOAST UI Doc에서는 <strong>Examples 페이지</strong> 를 통해 이러한 기능들을 제공한다. LNB 상단에 위치한 'Examples' 탭 메뉴를 통해 다양한 예제 페이지에 접근할 수 있으며, 각 페이지는 간단한 데모뿐만 아니라 자바스크립트 라이브러리를 사용할 때 필요한 스크립트 및 마크업 코드를 확인해볼 수 있도록 구성되어 있다. TOAST UI Doc을 사용하면 API와 Examples 페이지를 따로 관리할 필요가 없다. LNB 탭 메뉴 이동만으로 원하는 정보를 보고, 찾고, 체험해볼 수 있다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646186-2988df00-f970-11e9-9be4-6a45f74a78e2.png\" alt=\"11-examples-page\"></p>\n<h3 id=\"편리하게-검색하기\" style=\"position:relative;\"><a href=\"#%ED%8E%B8%EB%A6%AC%ED%95%98%EA%B2%8C-%EA%B2%80%EC%83%89%ED%95%98%EA%B8%B0\" aria-label=\"편리하게 검색하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>편리하게 검색하기</h3>\n<p>TOAST UI Doc은 문서 내에 있는 API를 검색할 수 있도록 검색 기능을 제공한다. LNB 상단에 위치한 검색 바(bar)를 통해서 문서 내에 있는 모든 API와 Examples 페이지 목록 검색이 가능하다. 검색 바에 키워드를 입력하면 검색 목록이 노출되며, 검색어 자동 완성 기능을 통해 사용자는 문서에 있는 정보를 빠르고 편리하게 검색할 수 있다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646187-2988df00-f970-11e9-9cef-bc8860fde127.gif\" alt=\"12-search\"></p>\n<h3 id=\"퍼머링크로-코드-자세히-보기\" style=\"position:relative;\"><a href=\"#%ED%8D%BC%EB%A8%B8%EB%A7%81%ED%81%AC%EB%A1%9C-%EC%BD%94%EB%93%9C-%EC%9E%90%EC%84%B8%ED%9E%88-%EB%B3%B4%EA%B8%B0\" aria-label=\"퍼머링크로 코드 자세히 보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>퍼머링크로 코드 자세히 보기</h3>\n<p>퍼머링크(Permalink)는 고유 주소(Permanent Link)의 약자로, 특정 페이지에 영구적으로 할당된 URL을 의미한다. <a href=\"https://help.github.com/en/articles/getting-permanent-links-to-files\">깃헙에서는 소스 코드에 대한 퍼머링크를 제공</a>하며, TOAST UI Doc에서는 이 퍼머링크를 통해 API 문서에서 원본 소스 코드로 연결해주는 기능을 제공한다. 각 API 영역의 오른쪽 상단에 JSDoc이 작성된 소스 코드의 파일명 및 라인 정보가 링크 형태로 표시된다. 이 링크를 클릭하면 실제 코드가 위치한 깃헙 리포지터리로 이동한다. JSDoc이 작성된 API의 세부 구현 내용을 확인할 때 유용하다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/4476469/67646188-2988df00-f970-11e9-8063-04d5c90d75d5.png\" alt=\"13-permalink\"></p>\n<h2 id=\"toast-ui-doc-사용-방법\" style=\"position:relative;\"><a href=\"#toast-ui-doc-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-label=\"toast ui doc 사용 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TOAST UI Doc 사용 방법</h2>\n<p>TOAST UI Doc이 만들어진 배경, 장점 등을 알아보았으니 이제는 직접 사용해보자. TOAST UI Doc 사용 방법은 간단하다.</p>\n<h3 id=\"설치-및-환경-설정\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98-%EB%B0%8F-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95\" aria-label=\"설치 및 환경 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치 및 환경 설정</h3>\n<p>먼저, TOAST UI Doc을 npm 글로벌로 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"tui-language-sh\"><code class=\"tui-language-sh\">$ npm install -g @toast-ui/doc</code></pre></div>\n<p>다음은 문서를 생성할 프로젝트 폴더로 이동해, 루트에 환경 설정 파일(<code class=\"tui-language-text\">tuidoc.config.json</code>)을 생성한다. 이 환경 설정 파일에 문서를 생성할 때 필요한 정보를 설정한다. 각 옵션에 대한 설명과 값 정보는 <a href=\"https://github.com/nhn/toast-ui.doc#setting-options-in-config-files\">링크</a>를 참조한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">project/\n  ├─ ...\n  ├─ package.json\n  └─ tuidoc.config.json</code></pre></div>\n<h3 id=\"jsdoc-작성\" style=\"position:relative;\"><a href=\"#jsdoc-%EC%9E%91%EC%84%B1\" aria-label=\"jsdoc 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSDoc 작성</h3>\n<p>TOAST UI Doc이 실행되면 documentation.js는 자바스크립트 파일에서 JSDoc을 파싱하여 JSON 데이터로 가공한다. API 정보에 맞게 <a href=\"https://jsdoc.app/index.html\">JSDoc</a>을 작성한다. 아래 예제에서는 <code class=\"tui-language-text\">MyDoc</code> 클래스와 멤버인 <code class=\"tui-language-text\">getValue()</code> 메서드 정보가 생성될 것이다. <a href=\"https://github.com/nhn/toast-ui.doc/tree/master/demo/src\">데모 코드</a>를 확인하면 다양한 방식으로 예제를 작성해볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">/**\n * @class MyDoc\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyDoc</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @type {string}\n     * @private\n     */</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'Hello TOAST UI Doc!'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Returns value of title.\n   * @returns {string} Title of MyDoc class\n   */</span>\n  <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"문서-생성\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%84%9C-%EC%83%9D%EC%84%B1\" aria-label=\"문서 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문서 생성</h3>\n<p>TOAST UI Doc은 문서를 편리하게 생성할 수 있도록 CLI를 제공한다. <code class=\"tui-language-text\">tuidoc</code> 명령어를 실행하면 문서를 생성하고, <code class=\"tui-language-text\">--serve</code> 옵션을 사용하면 생성된 문서를 로컬 서버에서 확인할 수 있다. <code class=\"tui-language-text\">package.json</code>에 다음과 같이 스크립트를 추가한다. 정상적으로 문서 생성이 완료되었다면, 루트 아래에 <code class=\"tui-language-text\">_latest</code>, <code class=\"tui-language-text\">_[SemVer]</code> 2가지 이름으로 폴더가 생성된 것을 확인할 수 있다. 이렇게 생성된 폴더를 깃헙 페이지 또는 서버에 업로드하면 모든 과정이 끝난다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"tui-language-sh\"><code class=\"tui-language-sh\">npx tuidoc</code></pre></div>\n<p>어떤가? 정말 간단하지 않은가? 당신의 첫 번째 TOAST UI Doc 문서가 만들어졌다!</p>\n<h2 id=\"맺음말\" style=\"position:relative;\"><a href=\"#%EB%A7%BA%EC%9D%8C%EB%A7%90\" aria-label=\"맺음말 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>맺음말</h2>\n<p>TOAST UI Doc은 1년이라는 시간에 걸쳐 장기간으로 진행된 프로젝트였다. Gatsby v1.0으로 시작해 개발을 진행하다 메이저 버전으로 업데이트 하면서 난항을 겪기도 했었고, 개발 완료 시점에는 TOAST UI의 전 제품에 적용하면서 누락된 부분들은 없는지 체크하는 과정이 출시일을 더디게 만들었다. 늘 그렇듯이 어려움은 있고 고비도 찾아온다. 그럼에도 불구하고 TOAST UI Doc을 개발하며 거쳐온 모든 과정은 <em>문서화 도구의 A부터 Z를 알게 만들어 준 아주 값진 경험</em> 이 되었다. TOAST UI Doc으로 TOAST UI 문서를 안녕하게 만들었으니, 이제 당신이 만든 자바스크립트 라이브러리의 API 문서도 안녕하게 만들어보길 바란다. 💪</p>\n<p>다운로드는 <a href=\"https://github.com/nhn/toast-ui.doc\">여기</a>에서 할 수 있다.</p>","frontmatter":{"id":"ko_20191028","title":"당신의 자바스크립트 API 문서는 안녕하신가요?","description":"이 글을 읽고 있을 개발자라면 적어도 한 번쯤 API 문서를 작성해 본 경험이 있으리라 생각한다. \"오전까지 100개 함수에 대한 API 문서를 만들어주세요.\"라는 업무가 주어졌다고 가정해보자. 이때 어떤 그림이 그려지는가?","date":"2019.10.28","author":"류선임","tags":["opensource","etc"],"thumbnail":"https://user-images.githubusercontent.com/18183560/69344163-c5ca9c80-0c23-11ea-903c-230402d19b9a.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20191028","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}