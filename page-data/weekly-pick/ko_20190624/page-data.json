{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20190624","result":{"data":{"post":{"html":"<h1 id=\"expo-webreact-native-for-web-튜토리얼\" style=\"position:relative;\"><a href=\"#expo-webreact-native-for-web-%ED%8A%9C%ED%86%A0%EB%A6%AC%EC%96%BC\" aria-label=\"expo webreact native for web 튜토리얼 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Expo Web(React Native for web) 튜토리얼</h1>\n<p><a href=\"https://facebook.github.io/react-native/\">React Native</a>는 자바스크립트 프레임워크인 <a href=\"https://reactjs.org/\">React</a>로 개발하며 네이티브 앱(iOS와 안드로이드)을 만들어주는 프레임워크이다.  React Native는 iOS와 안드로이드의 개발 언어로도 네이티브 개발을 할 수 있는 특징이 있는 반면, Expo는 순수하게 자바스크립트와 React로만 개발하고 네이티브 개발은 미리 제공된 모듈만 사용하도록 SDK와 빌드 환경을 제공해주는 형태이다. Expo가 자유도와 기능 지원율은 낮지만 자바스크립트로만 빠르게 앱을 만들 수 있고 별도의 네이티브 구동 환경을 내 PC에 설치하지 않아도 되는 장점이 있다.</p>\n<p>최근 React Native는 React Native for web을 발표하면서 또 하나의 플랫폼을 추가했다. Expo도 이에 발 맞추어 6월이 릴리즈된 <a href=\"https://blog.expo.io/expo-sdk-v33-0-0-is-now-available-52d1c99dfe4c\">SDK 33버전</a>에서 Expo Web 베타 버전을 지원하기 시작했다. Expo Web은 모바일 웹을 구현할 수 있도록 해주고 PWA를 지원한다. React Native와 Expo가 제공하는 컴포넌트로 네이티브 앱을 개발할 수 있지만 웹에서도 같은 컴포넌트로 돌아갈 수 있게 만든 것이다. React가 그런 것처럼 웹에서는 당연히 React DOM이 렌더링에 사용된다. 이 글에서는 \"React Native for web\"보다는 Expo Web을 중점적으로 살펴볼 것이다.</p>\n<p>이 글을 읽기 전에 먼저 말하고 싶은 것은 \"<em>Write once, run everywhere</em>\"는 항상 희망을 주지만 아무 노력을 하지 않아도 된다는 것을 뜻하지는 않는다. iOS, 안드로이드, 웹 브라우저 고유의 플랫폼을 모두 똑같이 맞출 수는 없기 때문에 Expo가 세 가지 플랫폼을 지원하더라도 기능 탐지 등의 방법을 통해 신경써서 앱을 만들어야 하는 모습은 분명히 인정하고 넘어가야 할 것이다. 그럼에도 불구하고 Expo Web에 기대를 거는 것은 프론트 엔드 기술의 가능성에 대한 도전이기 때문이다.</p>\n<p>한 가지 더 기대되는 점은 보다 빠른 피드백으로 개발 주기가 빨라질 것이다. 시뮬레이터에서 네이티브 앱으로 통신하는 과정이 아직까지는 느리기 때문에 브라우저에 바로 실행하는 Web 버전을 사용할 경우 빌드 시간, HMR이 빠르고 크롬 개발자 도구를 충분히 사용할 수 있기 때문에 앱의 기본 틀을 만들 때까지 속도가 올라갈 것이다.</p>\n<p>이 글에서는 Expo Web 베타 버전을 사용하여 설치와 실행, 구동, 배포, 테스트 방법 등을 알아본다.</p>\n<h2 id=\"특징장점-단점\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95%EC%9E%A5%EC%A0%90-%EB%8B%A8%EC%A0%90\" aria-label=\"특징장점 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징(장점, 단점)</h2>\n<p>React Native는 자바스크립트와 React 프레임워크로 작성하여 멀티 플랫폼에서 동작하는 것이 특징이다. 공식적으로 지원하는 플랫폼이 iOS와 안드로이드이다. Windows는 과거에 마이크로소프트에서 직접 지원하였으나 현재는 Windows 10으로 OS가 통합되면서 <a href=\"https://github.com/microsoft/react-native-windows\">Windows 10기반으로 다시 작성</a>하고 있다. 이제는 웹이 플랫폼으로 추가되면서 프론트 엔드 개발자의 마음을 더욱 설레게 한다.</p>\n<p><a href=\"https://github.com/necolas/react-native-web#react-native-for-web\">브라우저 지원 범위</a>는 Chrome, Firefox, Edge, Safari 7+, IE 10+이다. Internet Explorer 10이상 지원이라고 하니 아직 Internet Explorer 점유율이 높은 편인 국내 환경에서 다행이라는 생각이 든다.</p>\n<p>React는 가상돔 기반으로 실제로 렌더링은 React DOM과 같은 레이어가 처리하는 구조이다. 가상돔과 렌더링 레이어를 분리했기 때문에 렌더링 레이어를 여러 플랫폼에 맞게 구현할 수 있는 구조이기 때문에 \"<em>Write once, run everywhere</em>\"의 목표에 딱 맞는 형태이다. 즉 React Native에서 지원하는 컴포넌트를 사용하여 앱을 작성하면 플랫폼에 맞게 렌더링이 되는 것이다. 다음 예제 코드는 <code class=\"tui-language-text\">expo init</code>의 기본 설정으로 자동 생성된 코드이다. <code class=\"tui-language-text\">Text</code>, <code class=\"tui-language-text\">View</code>와 같은 React Native의 컴포넌트는 플랫폼 독립적인 컴포넌트이지만, 런타임에서는 각 플랫폼에 맞는 렌더링이 실행된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StyleSheet<span class=\"token punctuation\">,</span> Text<span class=\"token punctuation\">,</span> View <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>Open up App<span class=\"token punctuation\">.</span>tsx to start working on your app<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  container<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    flex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#fff\"</span><span class=\"token punctuation\">,</span>\n    alignItems<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n    justifyContent<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"모든-기능이-동일하지는-않다\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%A0-%EA%B8%B0%EB%8A%A5%EC%9D%B4-%EB%8F%99%EC%9D%BC%ED%95%98%EC%A7%80%EB%8A%94-%EC%95%8A%EB%8B%A4\" aria-label=\"모든 기능이 동일하지는 않다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모든 기능이 동일하지는 않다</h3>\n<p>iOS와 안드로이드 간에도 어쩔 수 없이 네이티브 기능을 통합하지 못하는 컴포넌트나 기능이 있다. 각자 OS의 네이티브 기능이 다르고 스토어 정책에 따라서 특정 플랫폼에서만 동작하는 컴포넌트나 기능인데, 추가된 웹의 경우도 네이티브 지원 유무에 따라서 기능이 다르다. Expo로 소스 코드를 작성하다 보면 플랫폼에 따라서 분기를 타야하는 때가 있는데 마찬가지로 웹의 지원 범위도 다르다. 예를 들면 연락처(Contacts) 기능은 iOS와 Android에는 있지만, 웹에서는 없는 것이 어떻게 보면 당연하다. Expo Web의 기능 목록은 <a href=\"https://github.com/expo/web-examples/blob/master/docs/FEATURES.md\">여기</a>에서 확인할 수 있다.</p>\n<h2 id=\"설치-및-실행\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%8B%A4%ED%96%89\" aria-label=\"설치 및 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치 및 실행</h2>\n<p><a href=\"https://blog.expo.io/expo-sdk-v33-0-0-is-now-available-52d1c99dfe4c\">SDK 33의 릴리즈 노트</a>에 나온 대로 매우 간단하게 설치 및 실행할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm install -g expo-cli\nexpo init awesome-expo-web-example</code></pre></div>\n<p><code class=\"tui-language-text\">expo init</code>할 때 여러 가지 옵션을 설정할 수 있는데, <code class=\"tui-language-text\">tabs</code>를 선택하면 react-navigation을 사용하여 탭 기반의 여러 화면을 설정한 예제를 사용할 수 있다. 이 예제로 웹과 iOS, 안드로이드 모두 실행해볼 것이다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/59973268-9530f900-95d8-11e9-935e-7584d7490535.png\" alt=\"image\"></p>\n<p>설치가 된 후 app.json 파일을 열어 보면 플랫폼에 <code class=\"tui-language-text\">web</code>이 추가된 것을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"expo\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"awesome-expo-web-example\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"slug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"awesome-expo-web-example\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"privacy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"public\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"sdkVersion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"33.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"platforms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"ios\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"android\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"web\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그럼 이제 Expo Web을 실행해 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">cd awesome-expo-web-example\nexpo start -w</code></pre></div>\n<p>하지만 웹 버전이 에러를 출력하며 실행이 되지 않을 것이다. <a href=\"https://github.com/expo/expo/issues/4330\">깃헙 이슈</a>에 올라 와 있는데 웹 실행에서만 발생하는 문제로 패치가 되기를 기다려야 한다. 웹 버전의 테스트를 하기 위해서 아래 경로의 소스에서 이미지 파일의 이름을 변경하면 실행이 되고, iOS와 안드로이드는 고친 소스를 다시 원래대로 돌려놓아야 한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/59973464-3faa1b80-95db-11e9-9587-e6c6b3f112f0.png\" alt=\"image\"></p>\n<p><code class=\"tui-language-text\">node_modules/@expo/samples/ExpoLinksView.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token operator\">&lt;</span>Image\n  source<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./assets/images/expo-icon@2x.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<ul>\n<li><code class=\"tui-language-text\">-w</code> 옵션은 웹 버전을 브라우저에서 실행시키는 옵션이다.</li>\n<li><code class=\"tui-language-text\">-i</code> 옵션은 iOS 버전을 실행시키는 옵션이다.</li>\n<li><code class=\"tui-language-text\">-a</code> 옵션은 안드로이드 버전을 실행시키는 옵션이다.</li>\n</ul>\n<p>웹, iOS, 안드로이드 세 플랫폼 모두 하나의 소스로 각자 플랫폼에 맞게 구동되는 것을 확인할 수 있다. 왼쪽부터 웹, iOS, 안드로이드 실행 화면이다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/59973751-c6142c80-95de-11e9-805c-977f35da406e.png\" alt=\"image\"></p>\n<h2 id=\"expo-web-빌드\" style=\"position:relative;\"><a href=\"#expo-web-%EB%B9%8C%EB%93%9C\" aria-label=\"expo web 빌드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Expo Web 빌드</h2>\n<p>배포를 위한 빌드도 매우 쉽다. <code class=\"tui-language-text\">build:ios</code>, <code class=\"tui-language-text\">build:android</code>와 더불어 <code class=\"tui-language-text\">build:web</code>이 추가되었다. 하지만 아직까지 베타라 <a href=\"https://github.com/expo/expo/issues/4545\">production 빌드를 하고 실행을 하면 오류가 발생</a>한다. 아쉽지만 아직까지는 테스트를 위해서 development 모드로 빌드를 해야 한다.</p>\n<h3 id=\"웹팩-설정-확장\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%ED%8C%A9-%EC%84%A4%EC%A0%95-%ED%99%95%EC%9E%A5\" aria-label=\"웹팩 설정 확장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹팩 설정 확장</h3>\n<p>웹팩 설정을 확장하여 development 모드로 빌드한다. <code class=\"tui-language-text\">@expo/webpack-config</code>를 설치하고 webpack.config.js 파일을 작성하여 설정을 확장할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">yarn add -D @expo/webpack-config</code></pre></div>\n<p><strong>webpack.config.js 파일 생성</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> createExpoWebpackConfig <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@expo/webpack-config\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">env<span class=\"token punctuation\">,</span> argv</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  env<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">createExpoWebpackConfig</span><span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"웹-빌드\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%EB%B9%8C%EB%93%9C\" aria-label=\"웹 빌드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 빌드</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">expo build:web</code></pre></div>\n<p>빌드는 웹팩을 사용하여 자바스크립트와 리소스가 빌드되고 빌드 결과물은 <code class=\"tui-language-text\">web-build</code> 폴더에 생성된다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/59973993-a29eb100-95e1-11e9-889e-20527311d4de.png\" alt=\"image\"></p>\n<h2 id=\"pwa-지원\" style=\"position:relative;\"><a href=\"#pwa-%EC%A7%80%EC%9B%90\" aria-label=\"pwa 지원 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PWA 지원</h2>\n<p>Expo 웹은 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps\">PWA(Progressive Web App)</a>를 지원한다. Expo의 app.json 파일의 정보를 바탕으로 PWA의 설정 파일인 manifest.json 파일을 만들어 낸다. 빌드된 index.html을 보면 <code class=\"tui-language-text\">service-worker</code>또한 사용하고 있음을 볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"serviceWorker\"</span> <span class=\"token keyword\">in</span> navigator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      navigator<span class=\"token punctuation\">.</span>serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/service-worker.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>크롬 개발자 도구의 Audits(lighthouse)로 확인해보니 PWA 지원에 대한 평가가 나타난다.\n<img src=\"https://user-images.githubusercontent.com/26706716/59975048-a422a600-95ee-11e9-95d4-992449748526.png\" alt=\"image\"></p>\n<h2 id=\"정적-파일-추가\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%A0%81-%ED%8C%8C%EC%9D%BC-%EC%B6%94%EA%B0%80\" aria-label=\"정적 파일 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정적 파일 추가</h2>\n<p>Expo로 개발한 자바스크립트 소스나 import되는 파일들 외에도 웹 앱에서 서비스할 정적 파일을 추가할 수 있다. 소스의 루트 폴더에 <code class=\"tui-language-text\">web</code>이라는 폴더를 추가하고 하위에 필요한 정적 파일을 추가할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">/web\n   ㄴTOAST UI Grid v4.0.png\n   ㄴother resources.file</code></pre></div>\n<p>파일을 추가한 후 다시 <code class=\"tui-language-text\">expo build:web</code>으로 빌드하면 <code class=\"tui-language-text\">web-build/TOAST UI Grid v4.0.png</code>파일이 추가되고 서버에서도 잘 내려오는 것을 확인할 수 있다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/59986456-e0e3b100-9671-11e9-8fa5-81ea0bec9da2.png\" alt=\"image\"></p>\n<h2 id=\"깃헙을-이용한-웹-배포\" style=\"position:relative;\"><a href=\"#%EA%B9%83%ED%97%99%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%9B%B9-%EB%B0%B0%ED%8F%AC\" aria-label=\"깃헙을 이용한 웹 배포 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>깃헙을 이용한 웹 배포</h2>\n<p>Expo Web이 베타버전이라 production 빌드가 잘 되지 않는 상태이지만, 추후 패치가 되었을 때 빌드된 웹 앱을 간단하게 배포할 수 있는 팁을 공유한다.</p>\n<p>Expo Web으로 빌드된 웹앱은 어느 서버든 배포하면 바로 서비스를 할 수 있는데, 간단하게 깃헙 페이지를 사용하여 배포할 수도 있다. <a href=\"/test123/\">FE개발랩의 오픈소스</a>의 API 페이지도 깃헙 페이지를 사용하고 있으며 <code class=\"tui-language-text\">gh-pages</code>를 사용하여 빠르고 편리하게 배포하고 있다. Expo Web을 깃헙 페이지에 배포해 보자.</p>\n<p>깃헙 저장소는 새로 만들어야 하고 다음과 같은 과정으로 간단하게 깃헙 페이지에 배포할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">git remote add origin https://github.com/dongsik-yoo/awesome-expo-web-example.git\n\nnpm i --save-dev gh-pages\n\nnpx gh-pages -d web-build</code></pre></div>\n<h2 id=\"세-플랫폼에서-스토리북-테스트\" style=\"position:relative;\"><a href=\"#%EC%84%B8-%ED%94%8C%EB%9E%AB%ED%8F%BC%EC%97%90%EC%84%9C-%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B6%81-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"세 플랫폼에서 스토리북 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세 플랫폼에서 스토리북 테스트</h2>\n<p><a href=\"https://storybook.js.org/\">스토리북</a>은 컴포넌트 단위의 UI를 개발하고 테스트하는데 유용한 E2E 도구이다. Expo를 development 모드로 iOS와 안드로이드에서 개발하다보면 다소 느린 속도 때문에 답답할 때가 있다. 그리고 스토리북으로 UI를 만들 때 그 쾌적함과 즉각적인 반응은 개발 속도를 높이는데 큰 도움을 주었기 때문에 Expo 개발 시 스토리북을 사용할 수 있다는 것은 큰 장점이라고 생각한다. 스토리북에서 React Native도 지원하고 있는데, 테스트를 해보니 Expo Web 버전 또한 지원함을 알 수 있다.</p>\n<h3 id=\"스토리북-react-native-환경-만들기\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B6%81-react-native-%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"스토리북 react native 환경 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스토리북 React Native 환경 만들기</h3>\n<p><a href=\"https://storybook.js.org/docs/guides/guide-react-native/\">스토리북 React Native 설치 가이드</a>를 참고하여 간편하게 자동 설치 및 환경 설정을 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npx -p @storybook/cli sb init --type react_native</code></pre></div>\n<p>react 스토리북 설치와는 다르게 <code class=\"tui-language-text\">.storybook</code> 폴더가 아니라 <code class=\"tui-language-text\">storybook</code> 폴더가 만들어 진다. 설치 후에는 엔트리 파일을 스토리북 UI로 변경해야 한다. 테스트를 위해 소스 코드를 바꾸어야 한다는 단점은 있지만 시뮬레이터보다 브라우저에서 더 빠른 주기로 개발할 수 있는 장점이 있다.</p>\n<p><strong>App.js 파일 수정</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">/*\n 스토리북을 위해 다른 부분은 모두 주석 처리한다.\n*/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./storybook\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>index.web.js 파일 추가</strong>\n스토리북의 React Native 버전에서는 플랫폼별로 다른 컴포넌트를 사용해서 테스트해야 하는 경우 테스트 파일 이름의 형식이 <code class=\"tui-language-text\">index.{platform}.js</code> 파일이다. 생성된 <code class=\"tui-language-text\">storybook/stories/Button</code> 폴더를 보면 다음과 같이 두 플랫폼을 위한 파일이 미리 생성되어 있는 것을 볼 수 있다.</p>\n<ul>\n<li>index.ios.js</li>\n<li>index.android.js</li>\n</ul>\n<p>여기에 <code class=\"tui-language-text\">index.web.js</code> 파일을 추가하면 Expo Web을 스토리북으로 테스트할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TouchableHighlight <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> onPress<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>TouchableHighlight onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onPress<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TouchableHighlight<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"react-native-web-테스트\" style=\"position:relative;\"><a href=\"#react-native-web-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"react native web 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Native Web 테스트</h3>\n<p>그리고 다시 \"<code class=\"tui-language-text\">expo start -w</code>\"로 Expo Web을 실행하면 브라우저에서 스토리북 UI가 나타나고 <code class=\"tui-language-text\">react-native</code>의 컴포넌트를 사용할 수 있다. 스토리북 서버가 뜬 것이 아니라서 약간 반쪽 짜리 느낌이지만 HMR 등 UI 개발에는 문제가 없어 보이고 iOS와 안드로이드 단말에서도 마찬가지 방식으로 동작하고 있다. 실행 후 개발자 도구로 살펴보니 <code class=\"tui-language-text\">&lt;TouchableHighlight&gt;</code> 컴포넌트가 div로 렌더링 된 것을 확인할 수 있다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/59985529-2c479080-966d-11e9-9ec8-28a76aa3baad.png\" alt=\"image\"></p>\n<h3 id=\"세-플랫폼에서-스토리북-실행하기\" style=\"position:relative;\"><a href=\"#%EC%84%B8-%ED%94%8C%EB%9E%AB%ED%8F%BC%EC%97%90%EC%84%9C-%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B6%81-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"세 플랫폼에서 스토리북 실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세 플랫폼에서 스토리북 실행하기</h3>\n<p>왼쪽부터 웹, iOS, 안드로이드의 스토리북 테스트 실행 화면이다.\n<img src=\"https://user-images.githubusercontent.com/26706716/59978534-2ecbcb00-9618-11e9-97a1-a7d4fa2de0b6.png\" alt=\"image\"></p>\n<h2 id=\"정식-릴리즈를-기다리며\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%8B%9D-%EB%A6%B4%EB%A6%AC%EC%A6%88%EB%A5%BC-%EA%B8%B0%EB%8B%A4%EB%A6%AC%EB%A9%B0\" aria-label=\"정식 릴리즈를 기다리며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정식 릴리즈를 기다리며</h2>\n<p>\"React Native for web\" 기반의 Expo Web은 아직 베타 단계라서 앞서 살펴본 것처럼 production 빌드에 오류나 깃헙 페이지에서 동작이 되지 않는 문제가 있다. 그러나 Expo 팀은 사용자들에게 지속적인 피드백을 주면서 안정화를 위한 노력을 계속 진행 중이다. <a href=\"https://blog.expo.io/the-roadmap-for-expo-sdk-34-b2e379ab9fff\">SDK 34에서는 베타를 졸업하고 RC(Release Candidate) 버전을 릴리즈 할 예정이고 SDK 35에서 정식 릴리즈를 계획</a>하고 있다.</p>\n<p>React Native가 프론트 엔드 기술을 통해 모바일 네이티브 앱을 만들 수 있는 가능성을 열었고 이제는 다시 웹을 지원하는 것으로 가능성을 열고 있다. 가능성에 대한 도전이 큰 결실을 맺기를 기대하면서 React Native와 Expo팀을 응원한다.</p>","frontmatter":{"id":"ko_20190624","title":"Expo Web(React Native for web) 튜토리얼","description":"최근 React Native는 React Native for web을 발표하면서 또 하나의 플랫폼을 추가했다. Expo도 이에 발 맞추어 6월이 릴리즈된 SDK 33버전에서 Expo Web 베타 버전을 지원하기 시작했다. Expo Web은 모바일 웹을 구현할 수 있도록 해주고 PWA를 지원한다. React Native와 Expo가 제공하는 컴포넌트로 네이티브 앱을 개발할 수 있지만 웹에서도 같은 컴포넌트로 돌아갈 수 있게 만든 것이다.","date":"2019.06.24","author":"유동식","tags":["React-Native","React","framework"],"thumbnail":"https://user-images.githubusercontent.com/26706716/59973751-c6142c80-95de-11e9-805c-977f35da406e.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20190624","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}