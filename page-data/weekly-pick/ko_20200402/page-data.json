{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20200402","result":{"data":{"post":{"html":"<h1 id=\"타입스크립트---제네릭을-사용하여-타입-추출하기\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8---%EC%A0%9C%EB%84%A4%EB%A6%AD%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%ED%83%80%EC%9E%85-%EC%B6%94%EC%B6%9C%ED%95%98%EA%B8%B0\" aria-label=\"타입스크립트   제네릭을 사용하여 타입 추출하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 - 제네릭을 사용하여 타입 추출하기</h1>\n<blockquote>\n<p>원문 : <a href=\"https://itnext.io/typescript-extract-unpack-a-type-from-a-generic-baca7af14e51\">https://itnext.io/typescript-extract-unpack-a-type-from-a-generic-baca7af14e51</a></p>\n</blockquote>\n<p>합성 타입(<em>composite type</em>)에서 한 타입을 가져오기 위한 방법을 생각해본적이 있는가?</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"tui-language-ts\"><code class=\"tui-language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Puppy</span> <span class=\"token operator\">=</span> Animal<span class=\"token operator\">&lt;</span>BigEyes<span class=\"token punctuation\">,</span> SmallNose<span class=\"token punctuation\">,</span> SmallEars<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">PuppyEyes</span> <span class=\"token operator\">=</span> ExtractEyes<span class=\"token operator\">&lt;</span>Puppy<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"tui-language-text\">ExtractEyes</code>는 무엇이고, 어떻게 동작할까?</p>\n<p>이를 설명하기 전에 먼저 알아야할 것이 있다.</p>\n<h2 id=\"조건부-타입\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%B6%80-%ED%83%80%EC%9E%85\" aria-label=\"조건부 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건부 타입</h2>\n<p>타입스크립트 2.8에서 소개된 기능으로 <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html\">조건부 타입</a>이 있다. 조건부 타입을 사용하면 타입을 더 유동적으로 제어할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"tui-language-ts\"><code class=\"tui-language-ts\"><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\"><span class=\"token constant\">U</span></span> <span class=\"token operator\">?</span> <span class=\"token constant\">X</span> <span class=\"token operator\">:</span> <span class=\"token constant\">Y</span></code></pre></div>\n<p>조건부 타입이 무엇이고, 어떻게 적용되는지 이 글에서 설명하지 않겠다. 공식 문서보다 이 개념을 더 잘 설명해주는 자료들이 많이 나와있다.</p>\n<p>필자가 찾은 <a href=\"https://artsy.github.io/blog/2018/11/21/conditional-types-in-typescript/\"><em>David Sheldrick</em>가 작성한 글</a>에 조건부 타입에 대해 잘 정리되어 있다.</p>\n<p>계속 진행하기 전에 조건부 타입에 대한 글을 읽고 개념을 정리하기를 바란다. 이 글에서 만들어 볼 예제를 이해하는데 도움이 될 것이다.</p>\n<h2 id=\"피자를-만들어보자\" style=\"position:relative;\"><a href=\"#%ED%94%BC%EC%9E%90%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\" aria-label=\"피자를 만들어보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>피자를 만들어보자!</h2>\n<p>예제는 Puppy말고 Pizza로 작성하였다.\n배고픈 상태로 이 글을 썼다고 생각해주길 바란다.</p>\n<p>토핑을 추가할 수 있는 피자를 정의해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"tui-language-ts\"><code class=\"tui-language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">MargheritaToppings</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mushrooms<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  olives<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  onion<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  basil<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">HawaiianToppings</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  pineapple<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Pizza<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">addToppings</span><span class=\"token punctuation\">(</span>toppings<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PizzaMargherita</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Pizza<span class=\"token operator\">&lt;</span>MargheritaToppings<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>제네릭 피자( <code class=\"tui-language-text\">Pizza</code>) 클래스, 두 개의 토핑 옵션, 마르게리타 피자(<code class=\"tui-language-text\">PizzaMargherita</code>)를 미리 정의해놓았다.</p>\n<p>다음은, 토핑 타입을 받는 함수를 생성하고, 토핑을 구매하는 함수를 공개 함수로 작성하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"tui-language-ts\"><code class=\"tui-language-ts\"><span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">purchasePizzaIngredients</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">T</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">purchaseToppings</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>toppings<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 마르게리타 피자의 토핑을 구매하려고 하면 타입 완성 기능이 동작하는 것을 확인할 수 있다.</p>\n<p><img src=\"https://miro.medium.com/max/2000/1*cyDC_fObQDoZXpZ3StH0jg.png\" alt=\"image\"></p>\n<p>잘 동작한다!</p>\n<p>그러나 <code class=\"tui-language-text\">PizzaMargherita</code>가 이미 토핑 타입 정보를 포함하는데 <code class=\"tui-language-text\">purchasePizzaIngredients</code>에서 토핑 타입을 또 넘겨주는 것은 중복이라고 생각되지 않는가?</p>\n<p>이미 포함된 토핑 타입을 사용할 수는 없을까?</p>\n<h3 id=\"토핑-추출하기\" style=\"position:relative;\"><a href=\"#%ED%86%A0%ED%95%91-%EC%B6%94%EC%B6%9C%ED%95%98%EA%B8%B0\" aria-label=\"토핑 추출하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>토핑 추출하기</h3>\n<p>피자에서 토핑 타입을 \"추출(<em>extract</em>)\"할 것이므로 <a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html\">조건부 타입</a>에 대해 알아야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"tui-language-ts\"><code class=\"tui-language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">ExtractToppings<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token constant\">P</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Pizza<span class=\"token operator\">&lt;</span>infer <span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token operator\">?</span> <span class=\"token constant\">T</span> <span class=\"token operator\">:</span> <span class=\"token builtin\">never</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의 코드는 <code class=\"tui-language-text\">P</code>가 <code class=\"tui-language-text\">Pizza</code> 타입일 때 토핑 타입을 '잡아' 반환한다.</p>\n<p>그럼 이제 불필요하게 작성한 토핑 타입을 지우고 타입을 확인해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"tui-language-ts\"><code class=\"tui-language-ts\"><span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">purchasePizzaIngredients</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">purchaseToppings</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>toppings<span class=\"token operator\">:</span> ExtractToppings<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://miro.medium.com/max/2000/1*CFkiPGtHet1a9YVpafzvqQ.png\" alt=\"image\"></p>\n<p>놀랍다!</p>\n<h2 id=\"함정\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%A0%95\" aria-label=\"함정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함정</h2>\n<p>사실 이 글을 작성한 이유는 내가 해결한 문제를 공유하기 위해서였다.</p>\n<p>피자에 치즈 타입을 추가해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"tui-language-ts\"><code class=\"tui-language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">MargheritaToppings</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    mushrooms<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n    olives<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n    onion<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n    basil<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">MargheritaCheeses</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    mozzarella<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n    parmesan<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">BasePizzaCheeses</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    feta<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Pizza<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">C</span> <span class=\"token operator\">=</span> BasePizzaCheeses<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">addToppings</span><span class=\"token punctuation\">(</span>toppings<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token function\">addCheeses</span><span class=\"token punctuation\">(</span>cheeses<span class=\"token operator\">:</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PizzaMargherita</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Pizza<span class=\"token operator\">&lt;</span>MargheritaToppings<span class=\"token punctuation\">,</span> MargheritaCheeses<span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>치즈는 선택적(<em>optional</em>) 타입이며 기본 타입을 가지고 있다.</p>\n<p><img src=\"https://miro.medium.com/max/1400/1*1w69M6NS-elRAYmwANAidg.jpeg\" alt=\"image\"></p>\n<p>어라? <code class=\"tui-language-text\">toppings</code>가 <code class=\"tui-language-text\">never</code> 타입이 됐다!</p>\n<p>문제는 <code class=\"tui-language-text\">ExtractToppings</code>타입에 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"tui-language-ts\"><code class=\"tui-language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">ExtractToppings<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token constant\">P</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Pizza<span class=\"token operator\">&lt;</span>infer <span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token operator\">?</span> <span class=\"token constant\">T</span> <span class=\"token operator\">:</span> <span class=\"token builtin\">never</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>코드에 사용된 <code class=\"tui-language-text\">Pizza&lt;infer T&gt;</code>는 치즈의 타입이 기본값인 <code class=\"tui-language-text\">BaseCheeses</code>가 된다는 것을 의미한다.</p>\n<p>그리고 <code class=\"tui-language-text\">MargheritaCheeses</code>에서는 <code class=\"tui-language-text\">BaseCheeses</code>에 있는 <code class=\"tui-language-text\">feta</code>를 이용할 수 없다.\n→ <code class=\"tui-language-text\">MargheritaCheeses</code>는 <code class=\"tui-language-text\">BaseCheeses</code>를 확장하지 않았다.</p>\n<hr>\n<p><strong><code class=\"tui-language-text\">PizzaMargherita</code>는 <code class=\"tui-language-text\">Pizza&lt;infer T, BaseCheeses&gt;</code>를 확장하지 않는다!</strong></p>\n<p>그래서 원하지 않는 <code class=\"tui-language-text\">never</code>타입이 된다..</p>\n<h3 id=\"수정하기\" style=\"position:relative;\"><a href=\"#%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"수정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수정하기</h3>\n<p>문제가 무엇인지 알았으니 간단히 수정해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"tui-language-ts\"><code class=\"tui-language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">ExtractToppings<span class=\"token operator\">&lt;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> <span class=\"token constant\">P</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Pizza<span class=\"token operator\">&lt;</span>infer <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span></span> <span class=\"token operator\">?</span> <span class=\"token constant\">T</span> <span class=\"token operator\">:</span> <span class=\"token builtin\">never</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"tui-language-text\">any</code>타입을 주어 받을 수 있는 타입을 더 늘려 주었다. 이렇게 하면, 피자에 어떤 종류의 치즈가 들어있는지 신경 쓰지 않고, 토핑 타입에 대해서만 신경쓰겠다는 의미가 된다.</p>\n<p>이제 타입 완성 기능이 이전처럼 잘 동작한다 :)</p>\n<p><img src=\"https://miro.medium.com/max/2000/1*CFkiPGtHet1a9YVpafzvqQ.png\" alt=\"image\"></p>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>보통 타입스크립트의 이런 고급 기능은 프레임워크나 그 비슷한 것을 만드는 경우에나 사용하게 될 것이다.</p>\n<p>실제로 이러한 기능을 사용해야 할 경우를 대비하여 타입스크립트가 어떤 기능을 할 수 있는지 미리 알아놓는다면 도움이 될 것이다.</p>","frontmatter":{"id":"ko_20200402","title":"타입스크립트 - 제네릭을 사용하여 타입을 추출하기","description":"타입스크립트에서 제네릭을 사용하여 타입을 추출하는 방법을 예시를 통해 알아본다.","date":"2020.04.02","author":"조정은","tags":["typescript"],"thumbnail":"https://miro.medium.com/max/1400/0*rIXCN1SdFjAmK3Iw"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20200402","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}