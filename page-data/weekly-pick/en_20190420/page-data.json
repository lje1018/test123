{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/en_20190420","result":{"data":{"post":{"html":"<h1 id=\"what-i-learned-from-migrating-from-angularjs-to-vue\" style=\"position:relative;\"><a href=\"#what-i-learned-from-migrating-from-angularjs-to-vue\" aria-label=\"what i learned from migrating from angularjs to vue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What I Learned from Migrating from AngularJS to Vue</h1>\n<h2 id=\"prologue\" style=\"position:relative;\"><a href=\"#prologue\" aria-label=\"prologue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prologue</h2>\n<p>I am currently working for <strong>NHN</strong> building <a href=\"https://dooray.com\">Dooray!</a>, a collaboration tool for companies. It is a 5 year old project that entails a wide range of features including Project, Mail, Messenger, Calendar, Drive, Wiki, Contacts, Kanban and etc., and is still maintained by a group of developers working arduously to provide best quality services. As for the framework, we decided to use AngularJS, the hottest framework during the initial stages of development, and to this day, most of the front-end is built using AngularJS. However, since AngularJS ended its glorious career with the release of v1.7x, with only minimum maintenance released now, our team was nervous with discussions on whether we could continue with AngularJS. Amid the anxiety, the Dooray! team decided on the VueJS as the next front-end framework.\nThe topic of the best framework is basically a technical hot potato, and is also never ending. Therefore, instead of discussing why we picked Vue, I would like to share what I learned from migrating from one framework to another. While AngularJS still has high retention rate, I assume that there are more groups in a similar predicament as we were. Although some of the content may be obvious, I hope that this article can be of help to others when migrating between frameworks.</p>\n<h2 id=\"things-to-keep-in-mind-before-framework-migration\" style=\"position:relative;\"><a href=\"#things-to-keep-in-mind-before-framework-migration\" aria-label=\"things to keep in mind before framework migration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Things to Keep in Mind Before Framework Migration</h2>\n<p>Since framework migration is not a process of adding new features or updating bug fixes, the program must operate identically before and after the migration. One of the best way to make certain is the regression test, and it is often a good idea to come up with the tests ensuring the original functionalities before the actual migration.</p>\n<h3 id=\"get-your-hands-on-the-service-document\" style=\"position:relative;\"><a href=\"#get-your-hands-on-the-service-document\" aria-label=\"get your hands on the service document permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get Your Hands on the Service Document</h3>\n<p>The first thing I looked for was the service document. I would say it is incredibly lucky if the original project designers and developers are still working for the same company because, then, you would easily be able to obtain the product history and functionality documentations. Also, if you run into a problem along the migration, you would be able to ask for feedback, and it is very likely that the project founders kept the original project document.</p>\n<p>The service document is important for couple of reasons. For one, the service document includes specs for most of the features. By understanding the specs, you can determine the order, method, and duration of the implementation. Because the interface flow can lead to the dependency of the implementation order, I want to further emphasize the importance of understanding the specs. Just the mere thought of having to squeeze in a functionality because I did not have a full understanding of the specs when I began migration gives me chills.</p>\n<p>My personal experience with this has to do with a search functionality. Because the search UI was marked as AngularJS on screen, I was not aware that I had to recreate the functionality in Vue. After already having spent many hours in development, I realized that I had overlooked a feature in which you type to AngularJS and Vue would display the search results, and the late realization thereby affected the entire development schedule. I managed to implement the correct feature with a crazed frenzy of code typing to make up for lost time, and I am willing to bet this is why one of the keys stopped working.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/56415490-d3542880-62c8-11e9-968e-1c11e8759aa7.png\" alt=\"1\">\n<em>A screenshot of Dooray! Contacts section showing the Vue section. The Search UI implemented with AngularJS is shown in green.</em></p>\n<p>If you are, like myself, in a situation where you do not have access to the service document, you would have to try and understand each and every functionality of the product like the back of your hand. So, hooray, me!</p>\n<h3 id=\"get-your-hands-on-the-qa-test-case-sheet\" style=\"position:relative;\"><a href=\"#get-your-hands-on-the-qa-test-case-sheet\" aria-label=\"get your hands on the qa test case sheet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get Your Hands on the QA Test Case Sheet</h3>\n<p>Quality Assurance test cases is yet another crucial document for a successful framework migration. While for many of you, the service document will be incredibly detailed and sufficient, QA team’s (at least the Dooray! team’s QA) test cases thoroughly validate the functionalities and the interface flow from the user’s perspective. Therefore, it provides an excellent opportunity to check for features that are not mentioned in the service document.</p>\n<p>In my case, the QA test cases were much more precious to me because of my lack of proper service document. There were multiple times in which I learned hidden features of the project while inspecting the QA test cases. There were around 300 test cases for the Dooray! Contacts service, and the detailed test cases regarding screen-based, feature-based, and section-based documentations were of great help. So, make sure that you read the test cases while trying them out for yourself. This process can help you prevent yet another key-break scenario.</p>\n<h3 id=\"understand-the-features-from-the-code\" style=\"position:relative;\"><a href=\"#understand-the-features-from-the-code\" aria-label=\"understand the features from the code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Understand the Features from the Code</h3>\n<p>Even if you have access to both the service document and the QA test cases, you still need to understand the features from the code. As for me, I was migrating from Angular to Vue, so aside from codes native to the framework, I had to reimplement from scratch (or delicately reprogram each functional units.) The main idea I want to emphasize for this process is the case of changing UI library. You first need to consider whether the library you used for Angular also exists for Vue. Some of the active components may have been custom implemented using inheritance or forking.</p>\n<p>The Dooray! Contacts page used Bootstrap, and as we migrated to Vue, we decided to use <strong>element-ui</strong>. Because we chose a different UI library, everything including the components’ functionality, design, and detailed orientation (transitions etc.) are subjected to change. Therefore, we had to further develop the common styling throughout the service (including the CSS override,) components that we developed in AngularJS by either forking or custom implementing, and components that did not completely suit the element-ui.</p>\n<p>The one thing I regret the most is not having a better idea of the features prior to migration. Therefore, I reiterate the importance of service document, QA test cases, and the original code. The planning of the migration comes after it.</p>\n<h3 id=\"planning-the-development-writing-the-work-breakdown-structure\" style=\"position:relative;\"><a href=\"#planning-the-development-writing-the-work-breakdown-structure\" aria-label=\"planning the development writing the work breakdown structure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Planning the Development (Writing the Work Breakdown Structure)</h3>\n<p>Because everyone has different development methodology, management system, and personal preference, I do not plan on providing a concrete “one way” to create a plan. However, I would like to comment on the idea of planning in general, and that is, as I said before, understand the original features as much as possible.</p>\n<ul>\n<li>Try the service yourself to fully understand the features.</li>\n<li>Get your hands on the service document.</li>\n<li>Get your hands on the QA sheets.</li>\n<li>Inspect the codes for further analysis.</li>\n</ul>\n<p>These steps should help in narrowing the difference between expectation and the result.</p>\n<h2 id=\"regression-testing-after-framework-migration\" style=\"position:relative;\"><a href=\"#regression-testing-after-framework-migration\" aria-label=\"regression testing after framework migration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Regression Testing after Framework Migration</h2>\n<p>Near the end of the sprint, our team started the regression tests on our own before the QA. While we already requested the QA team for a full QA, so that we would have access to wider test coverage, we believed that independently testing with inside knowledge would help us cover more edge cases. We initially aimed for 95% success rate, but the actual result turned out to be 85%.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/56415568-0696b780-62c9-11e9-830a-b7881a8c1f01.png\" alt=\"2222\"></p>\n<p>Then, after four days of QA, the QA found more than 70 issues. Upon carefully contemplating the issues, 30% of the issues were because we did not sufficiently understand the original features. These were unnecessary issues that discouraged the entire team. The entire team seemed to agree at the end of the sprint meeting.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/58688907-abc0a780-83c0-11e9-8d41-ec214904370f.png\" alt=\"image\"></p>\n<p><em>Causes for Issues</em></p>\n<p>Now that I think about it, had we spent more time trying to understand the features more thoroughly, we could have mitigated the QA disaster. However, when all things are said and done, I am content that with everyone’s arduous efforts, the Dooray! Contacts Vue migration has successfully finished.</p>\n<h2 id=\"performance-testing-after-framework-migration\" style=\"position:relative;\"><a href=\"#performance-testing-after-framework-migration\" aria-label=\"performance testing after framework migration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Performance Testing After Framework Migration</h2>\n<p>During the planing phase, we were most worried about the resulting performance of the product. The Dooray! has been developed as an SPA, and each service was formatted in tabs as in the image below. Given that migrating the entire service to Vue at once seemed difficult in terms of difficulty, schedule, and maintenance, we decided to start with one tab at a time.\n<img src=\"https://user-images.githubusercontent.com/26706716/56415612-275f0d00-62c9-11e9-820f-ce5bbf0989bc.png\" alt=\"44\"></p>\n<h3 id=\"deciding-on-the-structure-of-the-web-page\" style=\"position:relative;\"><a href=\"#deciding-on-the-structure-of-the-web-page\" aria-label=\"deciding on the structure of the web page permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deciding on the Structure of the Web Page</h3>\n<p>We mainly discussed three different structural designs, and each has different pros and cons. The structural design is closely related to performance. The following contents should be useful for those in similar predicaments.</p>\n<p>The first design was to <strong>give up on the SPA, and create separate pages</strong>. Since we could simply use Vue to develop separate pages, this seemed to be relatively easy. We believed that the CSS for new implementation would be distinguished well from the original, and we could use webpack to select the ones we need. The downside is that during the page transition, the “blink” compromises the sense of one application, the benefit of having an SPA. Also, since the resources have to be loaded again, the performance would drop ostensibly. Such is not a trade we were willing to make.</p>\n<p>The second design was to <strong>maintain the SPA, and deal with the Vue sections using iframe.</strong> This method includes all of the pros of the first method, and upon prototyping, there was no problem passing data between the main frame and the child frame. The greatest benefit of this design is that we could separate the CSS like when working with Shadow DOM. By doing so, we would have been able to eliminate unpredictable CSS collisions in the vast sea of sources. The only downside was the emotional one. We could not let ourselves work with iframes in today’s day and age, and after prototyping the last design, we gladly gave up on the idea.</p>\n<p>The last design was to <strong>maintain the SPA, but directly inject the Vue component inside of the AngularJS.</strong> Upon research, we found ng-vue libraries, but it had restrictive usages, and we believed that we could implement it ourselves. The AngularJS has a <a href=\"https://docs.angularjs.org/api/np/directive/ngNonBindable\">ng-non-bindable</a> that enables certain codes to remain in pure DOM structure if below a certain threshold. By using the directive, we can easily inject Vue into Angular as in the example below.</p>\n<p><strong>The ng-non-bindable in AngularJS template</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>contact-vue-component<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ng-non-bindable</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vue-wrapper-element<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>Directly creating Vue within the AngularJS component controller</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$onInit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>component <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    el<span class=\"token operator\">:</span> $element<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".vue-wrapper-element\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    store<span class=\"token punctuation\">,</span>\n    router<span class=\"token punctuation\">,</span>\n    components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      ServiceMain\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        state<span class=\"token operator\">:</span> <span class=\"token string\">\"nice state\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n&lt;service-main component-name=\"ContactBodyContainer\" :state=\"state\">&lt;/service-main></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Finally, we decided to go with the third design. As more and more areas are controlled by Vue, the AngularJS will slowly fade out, and the entire app will become a Vue application.</p>\n<h3 id=\"what-about-the-performance\" style=\"position:relative;\"><a href=\"#what-about-the-performance\" aria-label=\"what about the performance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What about the performance?</h3>\n<p>I decided to include the section about the structure to discuss the performance after framework migration more clearly. Unlike the first and second methods, the third method does not use a separate page, we added the new Vue resources to the existing AngularJS resources. Therefore, we were worried about the performance. To spoil the results first, luckily, it did not damage the performance.</p>\n<p>Using the Chrome devtools’ Network, Performance, and Audits, we compared the before and after the migration.</p>\n<h3 id=\"loading-performance\" style=\"position:relative;\"><a href=\"#loading-performance\" aria-label=\"loading performance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Loading Performance</h3>\n<p>Following are our measurements of the loading performance.</p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>AngularJS</th>\n<th>AngularJS + Vue</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DCL(DOMContentLoaded)</td>\n<td>1900 ms</td>\n<td>1922 ms</td>\n</tr>\n<tr>\n<td>Loaded(L)</td>\n<td>3856 ms</td>\n<td>3666 ms</td>\n</tr>\n<tr>\n<td><strong>FMP(First Meaningful Paint)</strong></td>\n<td><strong>5896 ms</strong></td>\n<td><strong>3722 ms</strong></td>\n</tr>\n</tbody>\n</table>\n<p>The <strong>DCL</strong> is a value that is affected by the size of the HTML file and the number of JavaScript and CSS files included. Since the project does not require a server-side rendering due to the SPA nature, there was no change in the size of HTML, and the changes made to the JavaScript and CSS resources did not affect the performance. The <strong>Loaded Event</strong>, despite the new resource structure, had no effect on the performance. However, the <strong>FMP</strong>, one of the main indexes used to discuss loading speed, actually had a decrease of 2 seconds. Upon careful inspection of the data, we found that the 2 seconds were reduced by eliminating the function call to Bootstrap from AngularJS. Without AngularJS’s Bootstrap call, the Vue initialization speed can be considered to be extraordinarily fast.</p>\n<p>From the perspective of the general loading speed, there was no significant decrease in performance, and by reducing the time it takes AngularJS to call Bootstrap by 2 seconds, we can conclude that the performance is better than before.</p>\n<p><strong>Measuring the Performance of AngularJS version</strong>\n<img src=\"https://user-images.githubusercontent.com/26706716/56415636-3a71dd00-62c9-11e9-8fd6-ad6f9c5d3d1a.png\" alt=\"55\"></p>\n<p><strong>Measuring the Performance of AngularJS + Vue version</strong>\n<img src=\"https://user-images.githubusercontent.com/26706716/56415650-4362ae80-62c9-11e9-9827-8b51de7dc195.png\" alt=\"66\"></p>\n<h3 id=\"comparing-the-resource-requests\" style=\"position:relative;\"><a href=\"#comparing-the-resource-requests\" aria-label=\"comparing the resource requests permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comparing the Resource Requests</h3>\n<p>Because we switched frameworks, the number and the size of resources obviously changed. The following are the number of resource requests and the sizes.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>AngularJS</th>\n<th>AngularJS + Vue</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JS Size</td>\n<td>11.7 MB</td>\n<td>10.9 MB</td>\n<td></td>\n</tr>\n<tr>\n<td>Number of JS Resources</td>\n<td>29</td>\n<td>32</td>\n<td></td>\n</tr>\n<tr>\n<td>CSS Size</td>\n<td>2.2 MB</td>\n<td>3.0 MB</td>\n<td></td>\n</tr>\n<tr>\n<td>Number of CSS Resources</td>\n<td>10</td>\n<td>12</td>\n<td></td>\n</tr>\n<tr>\n<td>XHR Response Size</td>\n<td>6.9 MB</td>\n<td>5.6 MB</td>\n<td>Due to an increase of 1 to the API call,<br>file size increased by 1.2KB<br>(Since the devtools consider JS and CSS downloads<br>from service workers as XHR,<br>1.2KB increase in API standards.)</td>\n</tr>\n<tr>\n<td>Number of XHR Requests</td>\n<td>38</td>\n<td>37</td>\n<td>Actual Increase of 1 compared to the original</td>\n</tr>\n</tbody>\n</table>\n<p>While I still do not fully understand the decrease in JavaScript file size and since this release included other fixes aside from the framework migration, the data may not be entirely meaningful. As for CSS, the use of element-ui increased the file size as expected, but the number and size of XHR requests, as I especially wanted to control, increased only by one as I intended. I was extremely satisfied that, compared to the original, there was no unnecessary XHR.</p>\n<h2 id=\"on-framework-migration\" style=\"position:relative;\"><a href=\"#on-framework-migration\" aria-label=\"on framework migration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>On Framework Migration</h2>\n<p>It takes enormous efforts to migrate an entire service. This article mainly focuses on not only the implementation, but the preparation stages as well. It is absolutely critical that you figure out each and every feature of the service so that there is nothing left behind. From the perspective of the users, if a feature that used to work before suddenly stops working, it can only be extremely uncomfortable. Also, because no new features were added, the users would most likely not even realize that you migrated to another framework! Finally, since we decided to include the Vue inside of the AngularJS, it is important to consider the resulting performance as well. Here are my final thoughts on the general flow of migration.</p>\n<ul>\n<li>\n<p>Prior research of features</p>\n<ul>\n<li>Obtain service documents and actually read through it</li>\n<li>Obtain the QA test cases; read through it; and try them yourself.</li>\n<li>Read the original code and understand it.</li>\n</ul>\n</li>\n<li>Plan thoroughly.</li>\n<li>Measure the performance of before and after migration.</li>\n</ul>\n<p>I hope this article can be of help.</p>\n<p><strong>P.S.</strong> If you are interested in taking a look at a service with AngularJS coexisting with Vue, try the <a href=\"https://dooray.com/home/\">Dooray!’s Contacts, Project, and Kanvan pages</a>.\n<a href=\"https://dooray.com/join?utm_source=Dooray&#x26;utm_medium=Brand_gnb_main&#x26;utm_campaign=X\">Free Trial Link</a></p>","frontmatter":{"id":"en_20190420","title":"What I Learned from Migrating from AngularJS to Vue","description":"Therefore, instead of discussing why we picked Vue, I would like to share what I learned from migrating from one framework to another. While AngularJS still has high retention rate, I assume that there are more groups in a similar predicament as we were. Although some of the content may be obvious, I hope that this article can be of help to others when migrating between frameworks.","date":"2019.04.20","author":"DongSik Yoo","tags":["VueJs","Angular"],"thumbnail":"https://user-images.githubusercontent.com/26706716/57591088-99461180-756a-11e9-9862-e6f67420c8a7.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"en_20190420","lang":"en"}},"staticQueryHashes":["2997033868","414700122","542722004"]}