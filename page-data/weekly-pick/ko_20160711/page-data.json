{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20160711","result":{"data":{"post":{"html":"<h1 id=\"당신의-첫-웹어셈블리-컴포넌트를-만들어보자\" style=\"position:relative;\"><a href=\"#%EB%8B%B9%EC%8B%A0%EC%9D%98-%EC%B2%AB-%EC%9B%B9%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\" aria-label=\"당신의 첫 웹어셈블리 컴포넌트를 만들어보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>당신의 첫 웹어셈블리 컴포넌트를 만들어보자</h1>\n<blockquote>\n<p>원문<br>\nNick Larsen, <a href=\"http://cultureofdevelopment.com/blog/build-your-first-thing-with-web-assembly/\">http://cultureofdevelopment.com/blog/build-your-first-thing-with-web-assembly/</a></p>\n</blockquote>\n<p>처음으로 <a href=\"https://webassembly.github.io/\">웹어셈블리(WebAssembly)</a>에 대해 들었을 때 그것은 확실히 멋져 보였고 시도해 본다는 것에 매우 흥분했다.\n그래서 곧바로 시작했지만 수많은 좌절을 겪게 되었다. 이 글의 목표는 당신에게 내가 겪었던 좌절의 일부만이라도 겪지 않게 하는 것이다.</p>\n<p><img src=\"http://cultureofdevelopment.com/img/cliff.jpg\" alt=\"image\"></p>\n<h3 id=\"주의-사항\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의 사항</h3>\n<p>이 포스트는 2016년 6월 24일에 쓰였다. 웹어셈블리는 매우 새롭고 불안정한 기술이며 모든 브라우저를 위한 표준화 과정이 계속되고 있기 때문에 이 포스트의 모든 것은 잘못된 것일 수 있다.</p>\n<h3 id=\"웹어셈블리란-무엇인가\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"웹어셈블리란 무엇인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹어셈블리란 무엇인가?</h3>\n<p>공식 웹사이트에는 다음과 같이 설명하고 있다.</p>\n<blockquote>\n<p>웹어셈블리는 웹에서 포터블하게 컴파일되기에 알맞은 크기와 효율적인 로딩 시간을 갖고 있는 새로운 형식이다.</p>\n</blockquote>\n<p>형식? 문자? 바이너리? 솔직히 말하면 그냥 나쁜 설명일 뿐이다. 대신 웹어셈블리에 대한 경험을 바탕으로 이해하기 쉽게 설명해보겠다.</p>\n<blockquote>\n<p>웹어셈블리는 성능을 고려한 브라우저 웹 컴포넌트를 작성하기 위한 바이트코드 명세서다.</p>\n</blockquote>\n<p>여전히 무언가 부족한듯하다. 그러나 아직 끝난 게 아니다. 웹어셈블리는 정적 타입 변수 사용으로 성능 향상을 실현한다. 정적 타입 변수는 런타임 시에 동적 타입 변수 보다 참조에 대해 훨씬 더 효율적이다.\n웹어셈블리는 최종적으로 모든 사양의 브라우저에서 호환을 위해 <a href=\"https://www.w3.org/community/webassembly/\">W3C 커뮤니티 그룹(W3C Community Group)</a>에서 개발되고 있다.\n그리고 가장 중요한 사항은, 최종적으로 어떤 언어로도 이 웹 컴포넌트를 개발할 수 있다는 점이다.</p>\n<p>정말 놀랍지 않은가?</p>\n<h3 id=\"이제-시작하자\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EC%9E%90\" aria-label=\"이제 시작하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이제, 시작하자</h3>\n<p>새로운 것을 배울 때 보통은 동작을 볼 수 있는 가장 작은 예제를 살펴본다. 유감스럽게도 웹어셈블리에서는 현실적으로 불가능하다. 현재 웹어셈블리는 바이트코드에 대한 기본적인 명세서만 갖고 있다.\n1996년으로 돌아가서, 썬 마이크로시스템의 일부 개발자들이 자바가 없는 JVM을 소개한다고 가정하면, 다음과 같은 대화를 상상할 수 있다.\n\"이봐 너희들~ 우리가 만든 가상머신을 실행하는 이 바이트코드를 와서 보라고!\" \"와우~ 코드가 궁금한데?\"</p>\n<p><img src=\"http://cultureofdevelopment.com/img/jvm-bytecode.png\" alt=\"image\"><br>\n<em>HelloWorld 바이트코드</em></p>\n<p>\"으음… 그, 그래. 시간날 때 한번 살펴 볼게.\" \"좋아, 혹시 의견이 있거나 문제를 겪게 된다면 깃헙 페이지에 글을 남겨줘.\" \"그래, 여기에 다른 프로젝트들이 몇개 올라오면 확인해 볼게.\"</p>\n<p>JVM이 자바언어 기반이기 때문에 좋은 예제는 아니지만 그래도 이 예제를 통해 중요한 부분을 알게 되었다. 그것은 당신이 작성한 바이너리 코드가 바로 컴파일되서 보여지지 않으면, 시작부터가 굉장히 힘들어질 거란 것이다.\n그렇다면 실제로 어떻게 시작해야 할까?</p>\n<h3 id=\"웹어셈블리-이전에는\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC-%EC%9D%B4%EC%A0%84%EC%97%90%EB%8A%94\" aria-label=\"웹어셈블리 이전에는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹어셈블리 이전에는</h3>\n<p>대부분의 기술은 혁신의 결과다. 특히 합리적인 시도가 공식적인 명세서로 만들어지게 되는 경우라면 더욱 그렇다.\n웹어셈블리 또한 정적 타입으로 컴파일 되는 자바스크립트 컴포넌트 개발 명세서인 <a href=\"http://asmjs.org/\">asm.js</a>의 구현을 효과적으로 이어간다.</p>\n<p>웹어셈블리는 asm.js의 아이디어를 확장하여 어떤 언어의 컴파일러에서도 사용될 수 있고 텍스트 인코딩 대신 이진 파일 형태로 전송될 수 있는 바이트코드 명세를 작성하였고, 시간이 지나면서 모질라 뿐만 아니라 많은 주요 브라우저의 대표자들에 의해 발전되었다.\nasm.js는 단지 언어 기능의 최소 집합을 사용하는 자바스크립트를 작성하기 위한 명세서일 뿐이다. 만약 수작업으로 단순한 asm.js를 작성할 수 있고, 고된 수작업을 원한다면 그것이 바로 확실히 시작하는 방법이다.(나중을 위해 파일에 저장하면서 하는 것이 가장 좋으며 명명 규칙은 <strong>[모듈명].asm.js</strong>이다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyMathModule</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">global</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"use asm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> exp <span class=\"token operator\">=</span> global<span class=\"token punctuation\">.</span>Math<span class=\"token punctuation\">.</span>exp<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">doubleExp</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        value <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>value<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token function\">exp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> doubleExp<span class=\"token operator\">:</span> doubleExp <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위의 코드는 특별히 유용하지는 않지만 스펙에 준한 함수다. 이상해 보이겠지만 위의 예제에 있는 대부분의 모든 문자가 필요하다. 모든 <code class=\"tui-language-text\">+</code> 단항 연산자는 컴파일러에서 타입 주석처럼 행동하는데, 이는  <code class=\"tui-language-text\">+</code> 연산자가 double 타입임을 나타내며 이로 인해 런타임에서는 판별하는 일을 하지 않는다.\n매우 조심해서 사용해야 하지만 그르칠 경우에는 파이어폭스 콘솔에서 해결할 수 있는 적절한 에러 메시지를 줄 것이다.</p>\n<p>아래와 코드를 브라우저에서 사용하게 되면,</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token keyword\">var</span> myMath <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyMathModule</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myMath<span class=\"token punctuation\">.</span><span class=\"token function\">doubleExp</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>올바른 경우에는 다음과 같은 출력을 보일 것이다.\n<img src=\"http://cultureofdevelopment.com/img/asmjs-success.png\" alt=\"image\"></p>\n<h3 id=\"기존의-웹어셈블리-코드-얻기\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4%EC%9D%98-%EC%9B%B9%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC-%EC%BD%94%EB%93%9C-%EC%96%BB%EA%B8%B0\" aria-label=\"기존의 웹어셈블리 코드 얻기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기존의 웹어셈블리 코드 얻기</h3>\n<p>이제 우리는 asm.js의 작업 조각을 가지고 웹어셈블리로 컴파일 하기 위해 <a href=\"https://github.com/WebAssembly/binaryen\">웹어셈블리 github 페이지</a>에서 제공하는 도구를 사용할 수 있다.\n지금 바로 레파지토리에서 클론(clone)하고 자신의 도구로 빌드할 수 있다. 이 도구는 아직도 개발 중에 있으며, 특히 윈도우 환경에서는 수시로 죽는 것이 일반적인 현상이다.</p>\n<p>시스템이 윈도우든 맥이든지 간에 설치되어있는 커멘드라인 도구로 <code class=\"tui-language-text\">make</code>와 <code class=\"tui-language-text\">cmake</code> 실행을 해야 한다. 윈도우에서는 visual studio 2015도 설치되어 있어야 한다.\n맥 사용자라면 <a href=\"https://github.com/WebAssembly/binaryen#building\">Binaryen Building</a>에 대한 소개를,\n윈도우 사용자라면 <a href=\"https://github.com/brakmic/brakmic/blob/master/webassembly/COMPILING_WIN32.md\">Compiling the Binaryen Toolchain under Windows with Visual Studio 2015</a> 소개를 참고하기 바란다.</p>\n<p><img src=\"http://cultureofdevelopment.com/img/binaryen-windows-build.png\" alt=\"image\"><br>\n<em>윈도우에서 binaryen 생성 하기</em></p>\n<p>작업 중인 바이너리를 배포하는 것은 웹어셈블리 팀에 큰 도움이 된다.\n만약 여기까지 성공적으로 따라왔다면, 웹어셈블리로 우리의 asm.js를 변환하기 위해 사용할 수 있는 몇몇 도구가 포함된 bin 폴더가 binaryen 디렉토리에 만들어질 것이다.\n첫 번째 도구는 <code class=\"tui-language-text\">asm2wasm.exe</code> 실행 파일이다. 이 도구는 asm.js 코드를 <code class=\"tui-language-text\">.s</code> 포맷 코드로 컴파일하는데, 이는 웹어셈블리 출력을 위한 추상 구문 트리(AST, Abstract Syntax Tree)의 텍스트 표현이다.</p>\n<p>유틸리티를 실행하면, 결국 다음과 같은 코드를 보게 된다.<br>\n(역자주: 위의 <code class=\"tui-language-text\">MyMathModule</code> 함수 생성 예제로 <code class=\"tui-language-text\">[모듈명].asm.js</code> 파일 생성 후 <code class=\"tui-language-text\">asm2wasm [모듈명].asm.js</code>과 같이 실행해봅니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">(module\n  (memory 256 256)\n  (export &quot;memory&quot; memory)\n  (type $FUNCSIG$dd (func (param f64) (result f64)))\n  (import $exp &quot;global.Math&quot; &quot;exp&quot; (param f64) (result f64))\n  (export &quot;doubleExp&quot; $doubleExp)\n  (func $doubleExp (param $0 f64) (result f64)\n    (f64.mul\n      (call_import $exp\n        (get_local $0)\n      )\n      (f64.const 2)\n    )\n  )\n)</code></pre></div>\n<p>미래에는 라인 단위로까지 나눌 수 있지만, 지금은 단지 웹어셈블리가 이진 형식이라는 것에 대해 보여주고 얘기하는 것에 만족한다.\n이진 형식이기 때문에 동작하지 않는 자바스크립트에서 우클릭 소스 보기를 할 경우, 위의 성공한 경우와 바이트 코드까지도 매우 비슷한 소스를 보게 될 것이다.\n현재 계획은 당신이 웹어셈블리 모듈에서 소스를 볼 때, 사람이 읽기 가능하게 만들어진 포맷으로 역어셈블한 소스를 보여주는 것이다.</p>\n<p>다음으로 <code class=\"tui-language-text\">.s</code>포맷 코드를 웹어셈블리 바이너리로 변환하고 웹어셈블리 어셈블러인 <code class=\"tui-language-text\">wasm-as.exe</code>를 사용해야 한다.\n이 파일을 한번 실행하면 브라우저를 위해 필요한 실제 웹어셈블리 바이트코드(bytecode)를 얻을 것이다.</p>\n<p><img src=\"http://cultureofdevelopment.com/img/binaryen-transform.png\" alt=\"image\"><br>\n<em>ams.js를 웹어셈블리 바이너리로 변환</em></p>\n<p><img src=\"http://cultureofdevelopment.com/img/wasm-bytecode.png\" alt=\"image\"><br>\n<em>웹어셈블리 바이트코드</em></p>\n<p>다음으로, <a href=\"https://www.mozilla.org/en-US/firefox/new/\">파이어폭스</a> 마지막 버전이나 <a href=\"https://www.google.com/chrome/browser/canary.html\">크롬 카나리</a>에서 웹어셈블리를 활성화한다.</p>\n<p>파이어폭스의 경우 url 영역에 <code class=\"tui-language-text\">about:config</code>를 입력하여 이동한 후 검색 바에 <code class=\"tui-language-text\">wasm</code>을 입력하고 결과로 나오는 <code class=\"tui-language-text\">javascript.options.wasm</code>을 더블클릭하여 <code class=\"tui-language-text\">true</code>로 설정한 후 브라우저를 재시작 하면 설정이 완료된다.\n크롬 카나리의 경우 <code class=\"tui-language-text\">chrome://flags</code>를 입력하여 설정화면으로 이동한 뒤 스크롤을 내려 <code class=\"tui-language-text\">Experimental WebAssembly</code>를 찾은 후 '사용'링크를 클릭하여 활성화 시킨 후 브라우저를 재시작하면 설정이 완료된다.</p>\n<p>마지막 단계는 브라우저에서 실행 할 모듈을 얻는 것이다. 이것은 내가 최초로 시작했을 때 완전히 숨겨져 있었기 때문에 나에게 또 다른 고통을 주었다. 웹어셈블리 모듈을 사용하기 위한 자바스크립트 API와 관련된 스팩의 어떤 것도 할 수 없었다. 크롬 카나리에서 콘솔 창을 열고 <code class=\"tui-language-text\">WebAsse</code>라고 입력했을 때 어떤 자동완성 팝업도 뜨지 않았다.(역자주: 현재는 WebAssembly라는 항목이 뜸)\n이어서 Was라고 다시 입력했고 드디어 자동완성 팝업이 떴다! 인스펙터에서 해당 객체의 내용은 너무 빈약했지만 그것이 웹어셈블리로 컴파일하는 몇몇 다른 도구(emscripten)를 사용하게 된 계기가 되었다.\n내가 했던 방법을 다른 블로그 게시물의 주제로 작성했으나 그 후에야 동작하는 예제를 생성할 수 있었다.</p>\n<p>얼마 뒤 나는 온갖 자료를 다 뒤져 결국 웹어셈블리를 설계 레파지토리를 찾아냈다. 그곳에는 <a href=\"https://github.com/WebAssembly/design/blob/master/JS.md\">JS.md</a>라는 이름의 파일에 실제 자바스크립트 API 문서가 있었다.\nJS.md 파일에서 상단 이탤릭체로 작성되어있는 부분은 세심히 주의해서 보아야 한다. 그러나 제일 중요한 부분은 매우 작은 모듈을 로드하는 방법을 보여주는 거의 맨 밑에 있는 코드 조각이다.\n나는 알고 있는 모든 관련 지식을 내려놓고 도전했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"tui-language-javascript\"><code class=\"tui-language-javascript\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my-math-module.wasm\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">arrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">buffer</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> dependencies <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"global\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        dependencies<span class=\"token punctuation\">[</span><span class=\"token string\">\"global.Math\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>Math<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> moduleBufferView <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> myMathModule <span class=\"token operator\">=</span> Wasm<span class=\"token punctuation\">.</span><span class=\"token function\">instantiateModule</span><span class=\"token punctuation\">(</span>moduleBufferView<span class=\"token punctuation\">,</span> dependencies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myMathModule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>doubleExp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myMathModule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">doubleExp</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의 코드를 포함하여 html을 생성하고 <a href=\"https://www.npmjs.com/package/local-web-server\">로컬 폴더에서 서버로 올린 후</a> 그것을 로드 해보자.\n두 개의 브라우저에서 보여준 결과가 아래에 있다.\n<img src=\"http://cultureofdevelopment.com/img/wasm-in-browser.png\" alt=\"image\"><br>\n<em>브라우저에서의 웹어셈블리 동작(또는 최소한의 시도)</em></p>\n<p>아마도 버그를 보고해야 할 것 같다. 그것들은 모두 실험적인 기술이며 매우 불안정하기에 이런 일이 발생했을 때 너무 좌절하지 않으려고 노력해야 한다는 것을 기억하자.</p>\n<p><img src=\"http://cultureofdevelopment.com/img/keep-calm-and-file-bug-reports.png\" alt=\"image\"></p>\n<h3 id=\"축하합니다\" style=\"position:relative;\"><a href=\"#%EC%B6%95%ED%95%98%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"축하합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>축하합니다!</h3>\n<p>당신의 첫 번째 어셈블리 컴포넌트를 완성했다. 다음은 무엇인가? 여기서는 정말 표면만 살펴봤다.\n수작업으로 asm.js을 작성하는 것은 이 예제에서 매우 중요하지만 중대한(non trivial) 작업을 하는 것은 오랜 시간과 많은 인내심을 필요로 한다.\n그런 의미에서, 나는 asm.js 명세서 특히 메모리 모델을 읽을 것을 강하게 제안한다. 왜냐하면 많은 컨셉들이 메모리 모델로부터 웹어셈블리로 이어지고 있기 때문이다.\n또 다른 특이점은 지금 당신이 직접 함수 인자로 배열을 전달할 수 없다는 것이다. 이것이 수정되어야 한다는 몇몇 의견들이 있지만, 아직 명세로서 만들어진 것은 없다.\n포인터 다루는 기술을 되살려야 한다.</p>\n<p>다른 얘기인데, 웹어셈블리에서 중대한 작업을 시작할 때, 웹어셈블리에서는 구식 자바스크립트 보다 사실상 느리게 수행하는 것을 알게 될 것이다.\n현대 자바스립트 엔진들은 자바스크립트 컴파일에 매우 최적화되어있고 웹어셈블리 컴파일이 따라가는데 시간이 걸릴 것이라는 것을 기억하자.\n웹어셈블리는 상용으로 쓰기에는 아직 준비되지 않았다.</p>\n<p>만약 웹어셈블리 또는 여기에서 설명한 도구에 대해 다른 의문점이 있다면, <a href=\"http://stackoverflow.com/\">스택오버플로</a>를 통해 문의하길 바란다.</p>","frontmatter":{"id":"ko_20160711","title":"당신의 첫 웹어셈블리 컴포넌트를 만들어보자","description":"처음으로 웹어셈블리 (WebAssembly)에 대해 들었을 때 그것은 확실히 멋져 보였고 시도해 본다는 것에 매우 흥분했다. 그래서 곧바로 시작했지만 수많은 좌절을 겪게 되었다. 이 글의 목표는 당신에게 내가 겪었던 좌절의 일부만이라도 겪지 않게 하는 것이다.","date":"2016.07.11","author":"강지웅","tags":["WebAssembly"],"thumbnail":null}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20160711","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}