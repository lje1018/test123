{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20190829","result":{"data":{"post":{"html":"<h1 id=\"트리-쉐이킹-되는-ui-라이브러리-만들기-ㄱ부터-ㅎ까지\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%AC-%EC%89%90%EC%9D%B4%ED%82%B9-%EB%90%98%EB%8A%94-ui-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-%E3%84%B1%EB%B6%80%ED%84%B0-%E3%85%8E%EA%B9%8C%EC%A7%80\" aria-label=\"트리 쉐이킹 되는 ui 라이브러리 만들기 ㄱ부터 ㅎ까지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트리 쉐이킹 되는 UI 라이브러리 만들기 ㄱ부터 ㅎ까지</h1>\n<p>웹 페이지를 만들 때 풍부한 기능을 제공하기 위해서 잘 만들어진 UI라이브러리를 사용한다. 필자는 <a href=\"https://ui.toast.com/\">TOAST UI</a>의 라이브러리 중 하나를 개발하고 있고 그동안 쌓은 경험과 노하우를 대방출하고자 한다. 이 글은 UI 라이브러리를 만들기 위한 방법을 소개하기 위해 작성하였고, 라이브러리의 목표와 기능, 사용한 기술 스택 그리고 웹팩 설정까지 바로 적용할 수 있는 실용적인 내용으로 구성하였다. UI 라이브러리를 만드는 방법과 노하우 A to Z를 알고 싶다면 노트북을 준비하고 차근차근 따라해보자.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/63864428-ca97ff80-c9ea-11e9-9fea-8f2e707e98cb.png\" alt=\"image\"></p>\n<h2 id=\"동기\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EA%B8%B0\" aria-label=\"동기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동기</h2>\n<p>필자는 <a href=\"https://ui.toast.com/tui-calendar\">TOAST UI Calendar</a> v2를 만들고 싶었다. 왜냐하면 <a href=\"https://ui.toast.com/tui-grid\">TOAST UI Grid</a>가 내부 구조를 획기적으로 개선하며 나에게 영감과 동기를 부여해주었기 때문이다. <a href=\"https://ui.toast.com/tui-grid\">Grid</a>는 대용량 데이터를 렌더링하기 때문에 성능이 매우 중요한 UI 라이브러리이며, <a href=\"https://medium.com/@toastui/using-preact-to-cut-legacy-codes-in-half-946ced230da1\">preact을 도입</a>하고 <a href=\"https://ui.toast.com/weekly-pick/en_20190610\">자체 리액티브 시스템을 개발</a>하면서 획기적인 변화를 일으켰다. 고맙게도 이 모든 과정을 나는 옆에서 지켜봐왔고, <a href=\"https://medium.com/@toastui/using-preact-to-cut-legacy-codes-in-half-946ced230da1\">잘 정리된 위클리 문서</a>를 공유해 주었기 때문에 나 또한 용기를 얻고 시작하게 되었다. <a href=\"https://github.com/nhn/tui.grid/graphs/contributors\">Grid 팀</a>에게 감사를 전한다.</p>\n<h2 id=\"최신-ui-라이브러리의-목표와-기능-그리고-기술-스택\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%8B%A0-ui-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EC%9D%98-%EB%AA%A9%ED%91%9C%EC%99%80-%EA%B8%B0%EB%8A%A5-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EA%B8%B0%EC%88%A0-%EC%8A%A4%ED%83%9D\" aria-label=\"최신 ui 라이브러리의 목표와 기능 그리고 기술 스택 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최신 UI 라이브러리의 목표와 기능, 그리고 기술 스택</h2>\n<p><a href=\"https://ui.toast.com/tui-grid\">TOAST UI Grid</a>에서 얻은 몇 가지 장점을 포함하여 내가 생각한 개선된 UI 라이브러리는 몇 가지 목표와 기능을 가진다.</p>\n<h3 id=\"라이브러리의-목표\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EC%9D%98-%EB%AA%A9%ED%91%9C\" aria-label=\"라이브러리의 목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브러리의 목표</h3>\n<p>기술적으로 사용자 관점과 개발자 관점에서 목표는 다음과 같다.</p>\n<ol>\n<li>라이브러리 사용자에게는 라이브러리에서 필요한 기능만 사용할 수 있어서 웹 페이지 크기를 줄일 수 있다.</li>\n<li>라이브러리 개발자에게는 편리한 개발 환경을 구축하여 생산성을 높이고, 성능이 우수하고 사용하기 편리한 라이브러리를 만든다.</li>\n</ol>\n<h3 id=\"라이브러리의-주요-기능\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%8A%A5\" aria-label=\"라이브러리의 주요 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브러리의 주요 기능</h3>\n<p>두 가지 목표와 더불어 라이브러리가 지원하는 주요 기능은 다음과 같다.</p>\n<ol>\n<li>트리 쉐이킹 지원</li>\n<li>가상돔으로 렌더링 최적화</li>\n<li>서버 사이드 렌더링 지원</li>\n</ol>\n<p>lodash나 moment는 기능이 뛰어나고 좋은 라이브러리이다. 그러나 사용하지 않는 기능까지 모두 번들될 경우 라이브러리의 크기가 커지기 때문에, 크기를 줄이기 위한 최적화 기법이 제공되고 있다. 트리 쉐이킹도 그 중 하나이며 트리 쉐이킹을 지원하는 라이브러리를 만들어서 웹 페이지의 크기를 줄일 수 있도록 할 것이다.</p>\n<h3 id=\"주요-기술-스택\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%EA%B8%B0%EC%88%A0-%EC%8A%A4%ED%83%9D\" aria-label=\"주요 기술 스택 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 기술 스택</h3>\n<p><a href=\"https://ui.toast.com/\">TOAST UI</a>의 라이브러리는 모두 웹팩을 사용하여 번들링 된다. 웹팩 이외에 도입하기로 한 기술 스택을 살펴보자. <a href=\"https://ui.toast.com/tui-calendar\">TOAST UI Calendar</a> v1와 비교하여 변화된 기술도입이다.</p>\n<p><strong>타입스크립트 도입</strong>\n우선 협업자와 논의해 본 결과 타입스크립트를 사용하기로 결정했다. 타입언어가 필자에게 주는 번거로움과 답답한 느낌이 있지만, 나중에 유지 보수를 쉽게하고 에러 발생을 줄일 수 있다는 장점을 수용하기로 한 것이다.</p>\n<p><strong>가상돔(preact) 도입</strong>\n기존에는 템플릿 엔진으로 <a href=\"https://handlebarsjs.com/\">handlebars</a>를 사용하였다. 렌더링할 때마다 전체 DOM이 항상 업데이트 되어야 하므로 불필요한 렌더링을 줄이기 위해서 가상돔 도입을 결정하였다.</p>\n<p><strong>ES6 모듈 도입</strong>\nES6 모듈로 개발하는 것은 더 이상 놀라운 일은 아니다. 하지만 트리 쉐이킹을 하기 위해서는 ES6 모듈 사용이 필수이며, <strong>트리 쉐이킹이 지원되는 UI라이브러리</strong>를 개발하는 것은 또 다른 도전이다. 이 부분이 궁금하다면 다음 주제인 \"<em>주요 기술 스택을 채택한 이유</em>\"에서 보다 자세히 알아볼수 있다.</p>\n<p><strong>서버 사이드 렌더링 지원</strong>\n기술 스택이라고 보기는 다소 무리가 있지만, <a href=\"https://preactjs.com/\">preact</a>를 도입하면서 가상돔을 html 문자열로 변환하는 것이 쉬워졌다.</p>\n<p><strong>sass와 postcss 도입</strong>\n기존에는 stylus를 사용하였다. css를 잘 구조화 시킬 수 있는 <a href=\"https://sass-lang.com/\">sass</a>를 사용하고, css 클래스에 라이브러리 고유의 선택자를 부여하기 위해서 <a href=\"https://postcss.org/\">postcss</a>로 변환하도록 한다.</p>\n<p>다음은 트리 쉐이킹을 지원하는 UI 라이브러리를 만들기 위해서 겪은 경험과 기술 스택을 채택한 이유를 보다 자세히 설명한다. 설명보다 바로 개발 환경 설정을 하고 싶다면 이 주제는 건너띄고, 다음 주제 \"<em>따라해 보는 실전 - 멋진 개발 환경 만들기</em>\"으로 넘어간다.</p>\n<h2 id=\"주요-기술-스택을-채택한-이유\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%EA%B8%B0%EC%88%A0-%EC%8A%A4%ED%83%9D%EC%9D%84-%EC%B1%84%ED%83%9D%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"주요 기술 스택을 채택한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 기술 스택을 채택한 이유</h2>\n<p>타입스크립트는 협업자의 합의로 도입을 결정하였다. 만약 여러분이 타입스크립트를 도입하지 않고 트리 쉐이킹 되는 UI 라이브러리를 만들고 싶다면, 바벨과 <code class=\"tui-language-text\">preact</code>, <code class=\"tui-language-text\">jsx</code>를 사용하여 동일한 목적을 달성할 수 있다. 그럼 선택한 기술을 도입한 이유를 <strong>자바스크립트 측면</strong>에서 자세히 살펴보자.</p>\n<h3 id=\"트리-쉐이킹-지원\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%AC-%EC%89%90%EC%9D%B4%ED%82%B9-%EC%A7%80%EC%9B%90\" aria-label=\"트리 쉐이킹 지원 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트리 쉐이킹 지원</h3>\n<p><a href=\"https://ui.toast.com/tui-calendar\">TOAST UI Calendar</a>는 일간, 주간, 월간 등 몇 가지 보기 타입을 지원하는데 특정 타입의 보기만 쓰는 사용자들도 있다. 사용하지 않는 보기 타입 때문에 전체 라이브러리를 모두 포함해야 하는 것이 마음에 들지 않는다. 월간보기만 사용할 경우 주간보기 소스코드는 포함될 필요가 없다. 트리 쉐이킹이 될 수 있도록 코드를 구성한다. 그리고 사용자에게 번들되는 자바스크립트에는 포함되지 않도록 하여 크기를 줄이고 싶은 것이 목적이다.</p>\n<p>라이브러리 사용자가 웹팩이나 <a href=\"https://rollupjs.org/guide/en/\">롤업</a> 등 번들러로 트리 쉐이킹을 할 경우 <strong>라이브러리는 ES6 모듈로 개발되어야 한다</strong>. ES6 모듈은 <code class=\"tui-language-text\">import</code>와 <code class=\"tui-language-text\">export</code>를 사용한다. 번들러는 모듈에서 export한 기능 중에 실제 사용한 기능만 남기고 나머지 코드는 번들에서 제외시킨다. 그러나 말은 간단하지만 ES6 모듈로 구성된 UI 라이브러리를 제공하기 위해서 몇 가지를 고려해야 한다.</p>\n<h4 id=\"모듈-사이드-이펙트가-발생하지-않아야-트리-쉐이킹이-가능하다\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%EC%82%AC%EC%9D%B4%EB%93%9C-%EC%9D%B4%ED%8E%99%ED%8A%B8%EA%B0%80-%EB%B0%9C%EC%83%9D%ED%95%98%EC%A7%80-%EC%95%8A%EC%95%84%EC%95%BC-%ED%8A%B8%EB%A6%AC-%EC%89%90%EC%9D%B4%ED%82%B9%EC%9D%B4-%EA%B0%80%EB%8A%A5%ED%95%98%EB%8B%A4\" aria-label=\"모듈 사이드 이펙트가 발생하지 않아야 트리 쉐이킹이 가능하다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>모듈 사이드 이펙트가 발생하지 않아야 트리 쉐이킹이 가능하다.</strong></h4>\n<p>모듈에서 export한 기능 중에서 사용하지 않는 기능을 번들에서 제거하기 위해서는 해당 기능이 정말로 사용되지 않는지 번들러가 판단해야 한다. 예를 들어 export한 함수 A가 B를 참조하는 경우, 라이브러리 사용자가 함수 A만 사용했다고 하더라도 함수 B는 번들에 반드시 포함해야 한다. 이를 사이드 이펙트가 발생했다고 하며 명시적으로 사용한 함수가 아니더라도 다른 함수가 포함될 수 있음을 의미한다. 번들러는 이와 유사한 경우를 모두 고려해서 함수들이 서로 참조하는지 여부를 판단해야 한다.이는 판단하기 어려운 문제이며 번들 성능을 떨어뜨릴 수 있다.</p>\n<p>이를 해결하기 위해서 라이브러리 작성자가 사이드 이펙트가 발생하지 않도록 개발했음을 보장하는 플래그를 설정한다. 웹팩은 이를 믿고 사용하지 않는 모듈을 번들에서 제외시킨다. package.json에서 <code class=\"tui-language-text\">”sideEffects”: false</code>를 설정한다.</p>\n<h4 id=\"트랜스파일된-이후에는-순수하게-자바스크립트로만-동작할-수-있어야-한다\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%9E%9C%EC%8A%A4%ED%8C%8C%EC%9D%BC%EB%90%9C-%EC%9D%B4%ED%9B%84%EC%97%90%EB%8A%94-%EC%88%9C%EC%88%98%ED%95%98%EA%B2%8C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C%EB%A7%8C-%EB%8F%99%EC%9E%91%ED%95%A0-%EC%88%98-%EC%9E%88%EC%96%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"트랜스파일된 이후에는 순수하게 자바스크립트로만 동작할 수 있어야 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>트랜스파일된 이후에는 순수하게 자바스크립트로만 동작할 수 있어야 한다.</strong></h4>\n<p>이게 무슨 말인가 싶지만, 웹팩은 자바스크립트를 번들할 때 로더와 플러그인 등 각종 도구를 사용한다. 로더를 필요로 하는 자바스크립트는 자바크립트 VM에서 바로 실행될 수 없는 자바스크립트이며, 웹팩이 전처리를 해야하기 때문에 그냥은 실행될 수 없다. 로더를 통해 트랜스파일 및 번들된 후에야 순수하게 자바스크립트로만 실행될 수 있는 상태가 된다. 우리의 라이브러리도 트랜스파일이 끝난 이후에는 자바스크립트로만 실행되어야 한다.</p>\n<p>그렇다면 결론은 트리 쉐이킹되는 ES6 모듈을 만들어 내려면 개발할 때도 웹팩을 사용하는 도구는 사용할 수 없다는 것이다.</p>\n<p>왜냐하면 웹팩이 자바스크립트 모듈을 웹팩의 모듈로 변환하기 때문이다. UMD로 번들할 경우 <code class=\"tui-language-text\">__webpack_require__</code>와 같은 코드를 사용한 모듈로 변경되면서 모든 모듈이 하나 혹은 여러 개의 번들 파일로 모인다. 그러므로 라이브러리 사용자가 라이브러리를 사용할 때는 ES6 모듈이 아닌 형태다. 더 이상 ES6 모듈이 아니므로 트리 쉐이킹이 가능하지 않다. 또한 모듈이 하나의 번들 파일에 모이게 될 경우 사이드 이펙트 발생이 매우 많아지므로 트리 쉐이킹이 실제로 거의 이루어지지 않을 가능성이 높다.</p>\n<p>그렇다면 <a href=\"https://rollupjs.org/guide/en/\">롤업</a>은 어떨까? 롤업은 ES6 라이브러리를 만들 수 있게 해주는 번들러이다. 웹팩처럼 자체 모듈 기법을 사용하지 않고 ES6 모듈 형태를 유지해준다. 롤업으로 번들할 경우 모든 ES6 모듈이 하나의 파일로 번들된다. 그러나 라이브러리 사용자가 웹팩을 사용해서 트리 쉐이킹을 시도했을 때 사이드 이펙트로 인하여 트리 쉐이킹이 잘 되지 않는다.</p>\n<p>웹팩 로더의 편리한 기능들은 그럼 모두 버리란 것인가? TOAST UI Calendar v1은 템플릿 엔진으로 <a href=\"https://handlebarsjs.com/\">handlebars</a>를 사용한다. html을 직관적으로 작성할 수 있기 때문에 편리하게 사용했지만, 역시 웹팩 로더를 사용하기 때문에 다른 대안을 찾아야 했다. 오직 트랜스파일 도구만 사용할 수 있다. 그래서 내가 찾은 대안이 바로 가상돔을 지원하는 <code class=\"tui-language-text\">preact</code>와 <code class=\"tui-language-text\">jsx</code>사용이다. <a href=\"https://babeljs.io/\">바벨</a>과 <a href=\"https://www.typescriptlang.org/\">타입스크립트</a>는 <code class=\"tui-language-text\">jsx</code>를 <code class=\"tui-language-text\">h</code>함수로 변환할 수 있어서 자바스크립트를 트랜스파일하면 순수한 자바스크립트를 만들어낸다.</p>\n<h3 id=\"가상돔으로-렌더링-최적화\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81%EB%8F%94%EC%9C%BC%EB%A1%9C-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"가상돔으로 렌더링 최적화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상돔으로 렌더링 최적화</h3>\n<p><a href=\"https://preactjs.com/\">preact</a>는 이미 유명하고 기능이 검증된 도구이지만, <strong>FE개발랩</strong>에서 아직 도입된 사례가 없어서 <a href=\"https://github.com/snabbdom/snabbdom\">snabbdom</a>을 고려한 적이 있었다. 하지만 앞서 언급했듯이 <a href=\"https://medium.com/@toastui/using-preact-to-cut-legacy-codes-in-half-946ced230da1\">Grid에서 preact를 도입하여 우수함을 입증</a>한 상태라 필자도 도입하기로 결정했다.</p>\n<p>가상돔의 장점은 불필요한 렌더링을 줄여서 렌더링을 최적화할 수 있게 하는 것이다. 그리고 다른 큰 장점은 트리 쉐이킹과 관련이 있다. 별도의 템플릿 엔진이 필요 없이 <code class=\"tui-language-text\">jsx</code>를 사용할 수 있다. 그러므로 웹팩 로더를 사용하지 않아도 된다. 바벨과 타입스크립트가 <a href=\"https://preactjs.com/\">preact</a>를 지원하고 있기 때문에 <code class=\"tui-language-text\">jsx</code>가 트랜스파일을 거쳐서 자바스크립트 함수 <code class=\"tui-language-text\">h()</code>로 변환된다. 웹팩 로더를 사용하지 않기 때문에 ES6 모듈 형태를 유지한다. 또한 따로 템플릿 엔진을 사용하지 않아도 되는 큰 장점이 있다.</p>\n<h3 id=\"서버-사이드-렌더링-지원\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84-%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%A7%80%EC%9B%90\" aria-label=\"서버 사이드 렌더링 지원 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버 사이드 렌더링 지원</h3>\n<p>TOAST UI Calendar v1은 서버 사이드 렌더링을 고려하여 개발되지 않았다. 깃헙 이슈 게시판에 가끔 서버 사이드 렌더링을 지원하는지 문의가 들어온다. 그 때마다 아쉬운 표정으로 댓글을 달며 키보드를 누르곤 했다. v1에도 서버 사이드 렌더링을 고려해서 추가 개발할 수 있을 것이다. 하지만 진짜 DOM을 기반으로 동작하고 있기 때문에 node에서 실행하는 것이 쉽지 않을 것이다.</p>\n<p>앞서 <a href=\"https://preactjs.com/\">preact</a>를 사용하기로 결정했기 때문에 가상돔을 HTML 문자열로 만들어 주는 서버 사이드 렌더링은 그저 밥 숟가락 하나 더 얻기만 하는 되는 일이다.</p>\n<h2 id=\"따라해-보는-실전---멋진-개발-환경-만들기\" style=\"position:relative;\"><a href=\"#%EB%94%B0%EB%9D%BC%ED%95%B4-%EB%B3%B4%EB%8A%94-%EC%8B%A4%EC%A0%84---%EB%A9%8B%EC%A7%84-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"따라해 보는 실전   멋진 개발 환경 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>따라해 보는 실전 - 멋진 개발 환경 만들기</h2>\n<p>이제부터는 실전이다. 읽고 따라하면 앞서 말한 목표와 기능을 제공하는 UI 라이브러리를 만들 수 있다. 또한 FE개발랩에서 유용하게 사용 중이며, 사내 가이드로 제시하고 있는 기술 스택과 개발 환경을 쉽게 사용해 볼 수 있다.</p>\n<h3 id=\"최종-결과물의-모습-살펴보기\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A2%85-%EA%B2%B0%EA%B3%BC%EB%AC%BC%EC%9D%98-%EB%AA%A8%EC%8A%B5-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"최종 결과물의 모습 살펴보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최종 결과물의 모습 살펴보기</h3>\n<p>먼저 번들 및 트랜스파일된 파일의 최종 모습이다. v1처럼 여전히 단일 번들 파일도 제공하고 ES6 모듈도 제공한다.</p>\n<p><strong>ES5 단일 번들 파일의 목록이다.</strong></p>\n<ul>\n<li>dist/tui-calendar.js</li>\n<li>dist/tui-calendar.css</li>\n<li>dist/tui-calendar.min.js</li>\n<li>dist/tui-calendar.min.css</li>\n</ul>\n<p><strong>트리 쉐이킹 되는 ES6 모듈</strong>은 <code class=\"tui-language-text\">dist/esm</code>폴더에 다음 그림의 예와 같이 생성된다(프로토타이핑 중인 v2의 모습이고 이 아티클에서는 간단한 클래스 몇 개만 만들어 본다).\n<img src=\"https://user-images.githubusercontent.com/26706716/63864049-27df8100-c9ea-11e9-9c2e-cd332ec68be3.png\" alt=\"image (63)\"></p>\n<p>주요 기술과 개발 환경의 목록을 살펴보면서 항목별로 설치 및 설정을 진행해 보자. 번들러는 웹팩 v4를 사용한다.</p>\n<h3 id=\"주요-개발-환경-설명\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EC%84%A4%EB%AA%85\" aria-label=\"주요 개발 환경 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 개발 환경 설명</h3>\n<ul>\n<li>기본 설정</li>\n<li>정적 분석 툴 적용</li>\n<li>📑 <strong>문서화 도구 설정</strong> <a href=\"https://github.com/nhn/toast-ui.doc\">@toastui/doc</a>로 API 문서 만들기</li>\n<li>타입스크립트 설정</li>\n<li>css 설정</li>\n<li>개발 서버 설정</li>\n<li>번들 및 배포 설정</li>\n<li>preact로 UI 라이브러리 만들기</li>\n<li>라이브러리를 사용해서 기능 테스트하기</li>\n</ul>\n<h2 id=\"기본-설정\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95\" aria-label=\"기본 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 설정</h2>\n<p>프로젝트 폴더 <code class=\"tui-language-text\">esm-ui-library</code>를 생성하고 패키지를 초기화한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">mkdir esm-ui-library\ncd esm-ui-library\nnpm init // And Be The Yes Man</code></pre></div>\n<p>소스 폴더는 다음과 같은 구조이다.</p>\n<ul>\n<li>dist</li>\n<li>\n<p>src</p>\n<ul>\n<li>images</li>\n<li>sass</li>\n<li>ts</li>\n</ul>\n</li>\n</ul>\n<p>웹팩 기본 패키지를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev webpack webpack-cli</code></pre></div>\n<p>타입스크립트와 타입스크립트 로더를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev typescript ts-loader</code></pre></div>\n<p>웹팩 설정 파일을 생성한다. webpack.config.js</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pkg <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./package.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> isProduction <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">FILENAME</span> <span class=\"token operator\">=</span> pkg<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>isProduction <span class=\"token operator\">?</span> <span class=\"token string\">'.min'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/ts/index.ts'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token constant\">FILENAME</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.js'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.tsx?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token string\">'ts-loader'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config<span class=\"token punctuation\">;</span></code></pre></div>\n<p>tsconfig.json 파일을 생성한다. 내용은 비어도 상관없지만 파일이 없으면 에러가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>엔트리 파일을 생성한다. <code class=\"tui-language-text\">src/ts/index.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>여기까지만 해도 빌드는 성공적으로 수행된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npx webpack --mode development\n\n            Asset     Size  Chunks             Chunk Names\nesm-ui-library.js  4.4 KiB    main  [emitted]  main\nEntrypoint main = esm-ui-library.js\n[./src/ts/index.ts] 66 bytes {main} [built]</code></pre></div>\n<h3 id=\"라이브러리-관련-설정\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EA%B4%80%EB%A0%A8-%EC%84%A4%EC%A0%95\" aria-label=\"라이브러리 관련 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브러리 관련 설정</h3>\n<p>webpack.config.js의 <code class=\"tui-language-text\">output</code>을 수정하여 모듈 타입, 네임스페이스 등 라이브러리 관련 설정을 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    library<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'tui'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Calendar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 라이브러리 네임스페이스 설정</span>\n    libraryTarget<span class=\"token operator\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>          <span class=\"token comment\">// 라이브러리 타겟 설정</span>\n    libraryExport<span class=\"token operator\">:</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\">// 엔트리 포인트의 default export를 네임스페이스에 설정하는 옵션</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"tui-language-text\">libraryExport</code>는 commonjs로 모듈을 작성할 경우는 설정할 필요없다. 하지만 ES6 모듈로 default export한 경우는 이 값을 반드시 설정해야 한다. 만약 하지 않으면 네임스페이스는 다음과 같이 접근해야 하므로 불편하다.</p>\n<p>설정 전</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> calendar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">tui<span class=\"token punctuation\">.</span>Calendar<span class=\"token punctuation\">.</span>default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>설정 후</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> calendar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">tui<span class=\"token punctuation\">.</span>Calendar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"모듈-resolve-및-alias-설정\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-resolve-%EB%B0%8F-alias-%EC%84%A4%EC%A0%95\" aria-label=\"모듈 resolve 및 alias 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 resolve 및 alias 설정</h3>\n<p>webpack.config.js에 <code class=\"tui-language-text\">resolve</code>를 추가하여 모듈 resolution을 설정한다. 다른 모듈을 import할 때 상대경로를 사용하면 상대적인 폴더 경로를 모두 파악해야 하므로 불편하다. alias를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.ts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.tsx'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    alias<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'@src'</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/ts/'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>설정 전</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> Month <span class=\"token keyword\">from</span> <span class=\"token string\">'../../view/month'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>설정 후</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> Month <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/view/month'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"번들-파일-배너-설정\" style=\"position:relative;\"><a href=\"#%EB%B2%88%EB%93%A4-%ED%8C%8C%EC%9D%BC-%EB%B0%B0%EB%84%88-%EC%84%A4%EC%A0%95\" aria-label=\"번들 파일 배너 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>번들 파일 배너 설정</h3>\n<p>ES5 단일 번들 파일에 배너를 설정하여 버전과 빌드 날짜, 작성자, 라이선스를 명시한다.</p>\n<p>webpack.config.js에 <code class=\"tui-language-text\">webpack.BannerPlugin</code> 플러그인을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> <span class=\"token constant\">BANNER</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'TOAST UI Calendar 2nd Edition'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'@version '</span> <span class=\"token operator\">+</span> pkg<span class=\"token punctuation\">.</span>version <span class=\"token operator\">+</span> <span class=\"token string\">' | '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDateString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'@author '</span> <span class=\"token operator\">+</span> pkg<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'@license '</span> <span class=\"token operator\">+</span> pkg<span class=\"token punctuation\">.</span>license\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>BannerPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      banner<span class=\"token operator\">:</span> <span class=\"token constant\">BANNER</span><span class=\"token punctuation\">,</span>\n      entryOnly<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span></code></pre></div>\n<p>ES6 모듈은 타입스크립트 소스 상단에 주석을 활용하여 작성하면 트랜스파일 이후에도 주석이 남아 있기 때문에 각 소스 파일에 작성한다.\n예> <strong>src/ts/month.ts</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">/**\n * @fileoverview Month View Interface\n * @author NHN FE Development Lab &lt;dl_javascript@nhn.com>\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> Month <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"정적-분석-툴-적용\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%A0%81-%EB%B6%84%EC%84%9D-%ED%88%B4-%EC%A0%81%EC%9A%A9\" aria-label=\"정적 분석 툴 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정적 분석 툴 적용</h2>\n<p>자바스크립트와 css를 모두 정적 분석할 수 있도록 <a href=\"https://eslint.org/\">eslint</a>와 <a href=\"https://prettier.io/\">prettier</a> 그리고 <a href=\"https://stylelint.io/\">stylelint</a>를 먼저 적용한다. 프로젝트 초기부터 정적 분석을 적용하는 것을 추천한다.</p>\n<h3 id=\"eslint-설치\" style=\"position:relative;\"><a href=\"#eslint-%EC%84%A4%EC%B9%98\" aria-label=\"eslint 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>eslint 설치</h3>\n<p>eslint의 규칙이 잘 정의된 설정을 상속 받으면 편리하다. <a href=\"https://github.com/nhn/tui.eslint.config\">eslint-config-tui</a>를 활용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev eslint eslint-loader eslint-config-tui eslint-plugin-react</code></pre></div>\n<p>타입스크립트를 정적 분석해야 하므로 관련 패키지도 같이 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev @typescript-eslint/parser @typescript-eslint/eslint-plugin</code></pre></div>\n<h3 id=\"prettier-설치\" style=\"position:relative;\"><a href=\"#prettier-%EC%84%A4%EC%B9%98\" aria-label=\"prettier 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>prettier 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev prettier eslint-config-prettier eslint-plugin-prettier</code></pre></div>\n<h3 id=\"stylelint-설치\" style=\"position:relative;\"><a href=\"#stylelint-%EC%84%A4%EC%B9%98\" aria-label=\"stylelint 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>stylelint 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev stylelint stylelint-config-recommended stylelint-scss stylelint-webpack-plugin</code></pre></div>\n<h3 id=\"eslint-설정\" style=\"position:relative;\"><a href=\"#eslint-%EC%84%A4%EC%A0%95\" aria-label=\"eslint 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>eslint 설정</h3>\n<p>타입스크립트와 <a href=\"https://eslint.org/\">eslint</a>, <a href=\"https://prettier.io/\">prettier</a>까지 모두 적용한 <code class=\"tui-language-text\">.eslintrc.js</code> 파일을 다음과 같이 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  root<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  env<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    browser<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    es6<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    node<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  parser<span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"@typescript-eslint\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"tui/es6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:@typescript-eslint/recommended\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"prettier/@typescript-eslint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:react/recommended\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:prettier/recommended\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  parserOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    parser<span class=\"token operator\">:</span> <span class=\"token string\">\"typescript-eslint-parser\"</span><span class=\"token punctuation\">,</span>\n    ecmaVersion<span class=\"token operator\">:</span> <span class=\"token number\">2018</span><span class=\"token punctuation\">,</span>\n    sourceType<span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span><span class=\"token punctuation\">,</span>\n    project<span class=\"token operator\">:</span> <span class=\"token string\">\"tsconfig.json\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  settings<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    react<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      pragma<span class=\"token operator\">:</span> <span class=\"token string\">\"h\"</span><span class=\"token punctuation\">,</span>\n      version<span class=\"token operator\">:</span> <span class=\"token string\">\"16.3\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p><code class=\"tui-language-text\">@typescript-eslint/parser</code>가 2.0으로 판올림되면서 에디터에서 <code class=\"tui-language-text\">import</code>구문을 에러로 표시하는 오류가 발생한다. 에디터에만 발생하는 오류로 눈에만 거슬릴 뿐 동작은 잘 된다. <a href=\"https://github.com/typescript-eslint/typescript-eslint/issues/890\">이슈</a>가 등록되어 처리 중이니 패치가 되면 같이 업데이트하자.</p>\n</blockquote>\n<h3 id=\"prettier-설정\" style=\"position:relative;\"><a href=\"#prettier-%EC%84%A4%EC%A0%95\" aria-label=\"prettier 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>prettier 설정</h3>\n<p><code class=\"tui-language-text\">.prettierrc.js</code> 파일을 다음과 같이 작성한다. 규칙은 팀 규칙에 맞게 변경하면 된다. 최근에 팀원 11명이 printWidth를 80, 100, 120 중 어떤 것으로 결정할 것인가를 30분 동안 토론한 기억이 난다. 하하하!</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  printWidth<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  singleQuote<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"stylelint-설정\" style=\"position:relative;\"><a href=\"#stylelint-%EC%84%A4%EC%A0%95\" aria-label=\"stylelint 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>stylelint 설정</h3>\n<p><code class=\"tui-language-text\">stylelint.config.js</code> 파일을 다음과 같이 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token string\">'stylelint-config-recommended'</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'stylelint-scss'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"웹팩-설정\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%ED%8C%A9-%EC%84%A4%EC%A0%95\" aria-label=\"웹팩 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹팩 설정</h3>\n<p>자바스크립트 정적 분석을 위해 <a href=\"https://webpack.js.org/loaders/eslint-loader/\">eslint-loader</a>를 추가한다. <code class=\"tui-language-text\">use</code> 속성이 배열인 경우 배열의 끝에서부터 로더가 실행되므로 순서에 유의한다. 반대로 할 경우 타입스크립트가 트랜스파일한 결과를 정적 분석하게 되므로 원하지 않는 결과가 나올 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> StyleLintPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stylelint-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.tsx?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ts-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eslint-loader'</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">StyleLintPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"visual-studio-code-설정\" style=\"position:relative;\"><a href=\"#visual-studio-code-%EC%84%A4%EC%A0%95\" aria-label=\"visual studio code 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Visual Studio Code 설정</h3>\n<p>Visual Studio Code에서 정적 분석 결과롤 바로 보기 위해서 설치해야 하는 확장 프로그램 목록이다. 링크를 눌러서 모두 설치한다.</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\">eslint</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\">prettier - Code formatter</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint\">stylelint</a></li>\n</ul>\n<p>그리고 Visual Studio Code의 설정 폴더를 생성하고 설정 파일( <code class=\"tui-language-text\">.vscode/settings.json</code>)을 다음과 같이 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"tui-language-json\"><code class=\"tui-language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"eslint.validate\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"language\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"typescript\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"autoFix\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"language\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"typescriptreact\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"autoFix\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"문서화-도구-설정-toastuidoc로-api-문서-만들기\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%84%9C%ED%99%94-%EB%8F%84%EA%B5%AC-%EC%84%A4%EC%A0%95-toastuidoc%EB%A1%9C-api-%EB%AC%B8%EC%84%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"문서화 도구 설정 toastuidoc로 api 문서 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📑문서화 도구 설정 @toastui/doc로 API 문서 만들기</h2>\n<p>라이브러리는 API 문서가 아주 중요하다. 어떤 라이브러리를 처음으로 발견했을 때 API 문서가 잘 만들어진 것과 아닌 것의 차이는 매우 크다.</p>\n<p><a href=\"https://github.com/nhn/toast-ui.doc\">TOAST UI Doc</a>은 최근 발표된 따끈따끈한 문서화 도구로 TOAST UI의 전 제품군에 적용 중이다. <a href=\"https://devdocs.io/jsdoc/\">JSDoc</a>을 파싱하여 API 문서를 생성하고 예제를 묶어 하나의 문서로 만들어주는 도구이다. 몇 가지 옵션을 설정하고 실행하기만 하면 자바스크립트 라이브러리를 위한 문서를 쉽게 만들 수 있다. <a href=\"https://nhn.github.io/toast-ui.doc/latest/\">데모</a>를 보면 라이브러리의 API 문서가 왜 필요한지 공감할 것이다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/26706716/63905237-99511b00-ca4e-11e9-83bd-b2c7625bc618.png\" alt=\"image\"></p>\n<h3 id=\"패키지-설치\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"패키지 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i -g @toast-ui/doc</code></pre></div>\n<h3 id=\"설정-파일-작성\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1\" aria-label=\"설정 파일 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정 파일 작성</h3>\n<p>tuidoc.config.json 파일을 작성한다.\n타입스크립트는 아직 지원하지 않으므로 <code class=\"tui-language-text\">dist/esm</code> 폴더에 생성되는 ES6 모듈을 대상으로 API 문서를 만들어 내면 된다.\n깃헙 리포지토리를 설정하면 실제 소스를 바로 볼 수 있는 링크를 제공하는 기능이 편리하다.\n예제이므로 이미지, 텍스트 등은 여러분에게 맞게 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"header\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"logo\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://uicdn.toast.com/toastui/img/tui-component-bi-white.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"linkUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Calendar\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"linkUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/nhn/toast-ui.doc\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"footer\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"NHN\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"linkUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/nhn\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"FE Development Lab\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"linkUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/nhn/fe.javascript\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"filePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"README.md\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"api\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"filePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/esm\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"permalink\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/nhn/toast-ui.doc\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"ref\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"master\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"jsdoc-추가\" style=\"position:relative;\"><a href=\"#jsdoc-%EC%B6%94%EA%B0%80\" aria-label=\"jsdoc 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSDoc 추가</h3>\n<p>다음과 같이 JSDoc을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">/**\n * @class Calendar Calendar View\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Calendar</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"npm-스크립트로-간편하게-사용한다\" style=\"position:relative;\"><a href=\"#npm-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-%EA%B0%84%ED%8E%B8%ED%95%98%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%9C%EB%8B%A4\" aria-label=\"npm 스크립트로 간편하게 사용한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm 스크립트로 간편하게 사용한다.</h3>\n<p>package.json에 스크립트를 추가하고 실행하면 <code class=\"tui-language-text\">_lastest</code> 폴더에 문서가 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"doc\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tuidoc\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"타입스크립트-설정\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%84%A4%EC%A0%95\" aria-label=\"타입스크립트 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 설정</h2>\n<p>타입스크립트 패키지는 앞서 설치했고, 타입스크립트 설정 파일을 작성한다. 두 가지 설정 파일을 작성한다. 하나는 ES5로 트랜스파일 되며 단일 번들 파일이 생성되는 것이다. 다른 하나는 ES6로 트랜스파일 되어 트리 쉐이킹 가능한 ES6 모듈로 변환하는 것이다.</p>\n<h3 id=\"es5-단일-번들-파일\" style=\"position:relative;\"><a href=\"#es5-%EB%8B%A8%EC%9D%BC-%EB%B2%88%EB%93%A4-%ED%8C%8C%EC%9D%BC\" aria-label=\"es5 단일 번들 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES5 단일 번들 파일</h3>\n<p>웹팩 설정에서 <a href=\"https://github.com/TypeStrong/ts-loader\">ts-loader</a>를 추가했기 때문에 웹팩 설정은 이미 완료된 상태이다. 그러면 타입스크립트 설정 파일을 다음과 같이 작성한다.</p>\n<p>ES5용 <code class=\"tui-language-text\">tsconfig.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"jsxFactory\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"h\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"@src/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/ts/*\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/ts/**/*.ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"src/ts/**/*.tsx\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node_modules\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>웹팩 설정에서 alias를 추가했지만 Visual Studio Code에서 모듈을 찾을 수 없다고 에러가 표시되는데, 타입스크립트 설정 파일을 추가하면서 <code class=\"tui-language-text\">baseUrl</code>와 <code class=\"tui-language-text\">paths</code>에도 동일하게 alias를 설정해 주면 비로소 에러 표시가 없어진다.\n<img src=\"https://user-images.githubusercontent.com/26706716/63905796-5132f800-ca50-11e9-937d-d61253d05d45.png\" alt=\"image\"></p>\n<p><strong>라이브러리 엔트리 파일 추가 - package.json</strong>\n라이브러리의 시작점을 ES5 단일 번들 파일로 지정한다. package.json의 <code class=\"tui-language-text\">main</code> 속성이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/esm-ui-library.js\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"트리-쉐이킹-가능한es6-모듈\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%AC-%EC%89%90%EC%9D%B4%ED%82%B9-%EA%B0%80%EB%8A%A5%ED%95%9Ces6-%EB%AA%A8%EB%93%88\" aria-label=\"트리 쉐이킹 가능한es6 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(트리 쉐이킹 가능한)ES6 모듈</h3>\n<p>타입스크립트를 ES6 모듈로 트랜스파일 하기 위해서는 웹팩을 사용하지 않고 직접 타입스크립트 트랜스파일을 이용해야 한다. 그 이유는 앞의 \"<em>주요 기술 스택을 채택한 이유</em>\"에서 설명하였다.</p>\n<p>ES6로 트랜스파일하기 위해서 타입스크립트 설정 파일을 하나 더 추가한다.</p>\n<p>ES6 모듈용 <code class=\"tui-language-text\">tsconfig.esm.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"jsxFactory\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"h\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/esm/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"@src/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/ts/*\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/ts/**/*.ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"src/ts/**/*.tsx\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node_modules\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ES5용과 다른 점이다.</p>\n<ul>\n<li>변경: <code class=\"tui-language-text\">&quot;target&quot;: &quot;es6&quot;</code></li>\n<li>추가: <code class=\"tui-language-text\">&quot;moduleResolution&quot;: &quot;node&quot;</code>, 라이브러리 사용자가 node 환경에서 개발하거나, node에서 코드가 실행되므로 설정한다.</li>\n<li>추가: <code class=\"tui-language-text\">&quot;outDir&quot;: &quot;dist/esm/&quot;</code>, ES6 모듈의 생성 경로 지정</li>\n<li>제거: <code class=\"tui-language-text\">sourceMap</code> 제거, ES6 모듈은 번들하지 않아서 필요 없다.</li>\n</ul>\n<p><strong>ES6 모듈 경로 설정 - package.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/esm/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"sideEffects\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"tui-language-text\">module</code> 속성: ES6 모듈로 사용될 경우 탐색 경로를 설정한다.</li>\n<li><code class=\"tui-language-text\">sideEffects</code> 속성: 트리 쉐이킹에서 사이드 이펙트로 인하여 불필요한 모듈을 제거하지 못하는 경우가 있다. 이 라이브러리의 모듈에 사이드 이펙트가 없다고 보장하는 플래그를 설정해 준다. 라이브러리 작성자가 책임을 지는 것으로 웹팩이 트리 쉐이킹을 보다 명시적으로 수행할 수 있다.</li>\n</ul>\n<h3 id=\"es6-모듈에서-alias를-상대경로로-변환하기\" style=\"position:relative;\"><a href=\"#es6-%EB%AA%A8%EB%93%88%EC%97%90%EC%84%9C-alias%EB%A5%BC-%EC%83%81%EB%8C%80%EA%B2%BD%EB%A1%9C%EB%A1%9C-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0\" aria-label=\"es6 모듈에서 alias를 상대경로로 변환하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6 모듈에서 alias를 상대경로로 변환하기</h3>\n<p>타입스크립트 트랜스파일을 거친 후라도 <code class=\"tui-language-text\">@src</code>와 같은 alias는 변하지 않고 그대로 남아 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> Month <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/month'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Week <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/week'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>라이브러리 사용자가 ES6 모듈을 import할 경우 사용자는 <code class=\"tui-language-text\">@src</code>를 해석할 수 없으므로 모듈을 찾을 수 없다고 에러가 발생한다. 그러므로 alias는 다시 상대 경로로 변환해 주어야 한다. <a href=\"https://github.com/cevek/ttypescript\">ttypescript - Transform Typescript</a>와 <a href=\"https://github.com/LeDDGroup/typescript-transform-paths\">typescript-transform-paths 플러그인</a>을 추가하여 상대 경로로 변환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev ttypescript typescript-transform-paths</code></pre></div>\n<p>ES6 모듈용 <code class=\"tui-language-text\">tsconfig.esm.json</code>에 플러그인을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"transform\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"typescript-transform-paths\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>설정 전</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> Month <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/month'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Week <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/week'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>설정 후</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> Month <span class=\"token keyword\">from</span> <span class=\"token string\">'./month'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Week <span class=\"token keyword\">from</span> <span class=\"token string\">'./week'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"css-설정\" style=\"position:relative;\"><a href=\"#css-%EC%84%A4%EC%A0%95\" aria-label=\"css 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>css 설정</h2>\n<p>v1은 <a href=\"http://stylus-lang.com/\">stylus</a>를 css 트랜스파일 툴을 사용하고 있어서 <a href=\"https://www.npmjs.com/package/stylus-loader\">stylus-loader</a>를 사용하고 있다. 앞서 자바스크립트는 트리 쉐이킹을 지원하기 위해서 웹팩 로더를 사용할 수 없다고 했다. 하지만 css의 경우는 상황이 다르다. css는 최종 html에 번들 css를 포함시키기만 하면 되므로 어떤 로더와 툴이라도 사용할 수 있다.</p>\n<p>웹팩으로 css를 번들하기 위해 <a href=\"https://github.com/webpack-contrib/css-loader\">css-loader</a>를 포함하여 필요한 패키지를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev css-loader style-loader mini-css-extract-plugin</code></pre></div>\n<h3 id=\"css-import-방법\" style=\"position:relative;\"><a href=\"#css-import-%EB%B0%A9%EB%B2%95\" aria-label=\"css import 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>css import 방법</h3>\n<p>먼저, 주의할 점은 css를 자바스크립트 소스에서 import하지 않는 것이다. 웹팩을 사용하여 개발할 경우 흔히 자바스크립트 코드에서 css 파일을 import할 것이다. 이렇게 되면 자바스크립트가 트랜스파일된 이후에 import될 경우, 라이브러리 사용자 쪽에서 css 파일의 import를 같이 처리해 주어야 하는 문제가 생긴다. 그렇지 않으면 css 파일 경로가 맞지 않아서 모듈 가져오기가 실패할 것이다. 그러므로 css 파일의 import는 자바스크립트 소스에서 하지 않고 별도의 엔트리 포인트로 추가한다. 웹팩 엔트리 포인트를 배열 타입으로 추가하면 자바스크립트 소스 내에서 css를 import 하지 않아도 의존성 그래프를 하나 추가하여 번들 과정에 포함시킬 수 있다.</p>\n<p>webpack.config.js</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./src/sass/index.scss'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/ts/index.ts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"scss-사용\" style=\"position:relative;\"><a href=\"#scss-%EC%82%AC%EC%9A%A9\" aria-label=\"scss 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>scss 사용</h3>\n<p>stylus도 훌륭한 도구이지만, TOAST UI Calendar 협업자들은 sass에 익숙하다. 또한 <a href=\"https://www.slant.co/topics/217/~best-css-preprocessors-postprocessors\">점유율이 좀 더 높은 것</a>도 이유가 되었다.</p>\n<p><a href=\"https://sass-lang.com/\">sass</a>와 <a href=\"https://github.com/webpack-contrib/sass-loader\">sass-loader</a>를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev node-sass sass-loader</code></pre></div>\n<h3 id=\"라이브러리-전용-prefix를-클래스-선택자에-추가하기\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%A0%84%EC%9A%A9-prefix%EB%A5%BC-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%84%A0%ED%83%9D%EC%9E%90%EC%97%90-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"라이브러리 전용 prefix를 클래스 선택자에 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브러리 전용 prefix를 클래스 선택자에 추가하기</h3>\n<p>TOAST UI Calendar의 css는 <code class=\"tui-language-text\">tui-full-calendar-</code>라는 prefix를 붙여서 클래스 선택자를 작성한다. 고유한 이름을 부여하여 선택자가 중복되는 것을 방지하기 위함이다. v1은 <a href=\"https://www.npmjs.com/package/preprocess-loader\">preprocess-loader</a>를 사용하고 번들 과정에서 stylus의 코드의 문자열이 치환되도록 하였다.</p>\n<p>v1의 웹팩 설정을 보면 마지막 단계에서 문자열을 치환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> context <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token constant\">CSS_PREFIX</span><span class=\"token operator\">:</span> ‘tui<span class=\"token operator\">-</span>full<span class=\"token operator\">-</span>calendar<span class=\"token operator\">-</span>‘<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\nmodule<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.styl$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n      use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">preprocess-loader?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>context<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        ‘css<span class=\"token operator\">-</span>loader’<span class=\"token punctuation\">,</span>\n        ‘stylus<span class=\"token operator\">-</span>loader’\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>stylus 파일에서 <code class=\"tui-language-text\">{css-prefix}</code> 부분이 <code class=\"tui-language-text\">tui-full-calendar-</code>로 치환된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"tui-language-css\"><code class=\"tui-language-css\"><span class=\"token selector\">.</span><span class=\"token punctuation\">{</span>css-prefix<span class=\"token punctuation\">}</span><span class=\"token selector\">holiday</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>하지만 코드가 아름답지 않고 디버깅 시 선택자를 코드에서 찾기가 어려워서 유지 보수가 까다로웠다. <a href=\"https://postcss.org/\">postcss</a>를 사용하는 것이 훨씬 더 깔끔하게 코드를 작성할 수 있다.</p>\n<p><a href=\"https://github.com/postcss/postcss-loader\">postcss-loader</a>와 <a href=\"https://github.com/marceloucker/postcss-prefixer\">postcss-prefixer</a>를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev postcss-loader postcss-prefixer</code></pre></div>\n<p>그러면 css가 더 깔끔해진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"tui-language-css\"><code class=\"tui-language-css\"><span class=\"token selector\">.holiday</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://postcss.org/\">postcss</a>로 변환된 결과를 보면 다음과 같이 prefix가 잘 붙는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"tui-language-css\"><code class=\"tui-language-css\"><span class=\"token selector\">.tui-full-calendar-holiday</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"css에서-사용한-이미지-번들하기\" style=\"position:relative;\"><a href=\"#css%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B2%88%EB%93%A4%ED%95%98%EA%B8%B0\" aria-label=\"css에서 사용한 이미지 번들하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>css에서 사용한 이미지 번들하기</h3>\n<p><a href=\"https://www.npmjs.com/package/url-loader\">url-loader</a>를 사용하여 css에서 사용한 이미지를 base64 형태로 변환하여 번들에 포함되도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev url-loader</code></pre></div>\n<h3 id=\"css-번들을-위한-웹팩-설정\" style=\"position:relative;\"><a href=\"#css-%EB%B2%88%EB%93%A4%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%9B%B9%ED%8C%A9-%EC%84%A4%EC%A0%95\" aria-label=\"css 번들을 위한 웹팩 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>css 번들을 위한 웹팩 설정</h3>\n<p>웹팩 설정 파일에 css 설정을 <code class=\"tui-language-text\">module.rules</code>에 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> MiniCssExtractPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mini-css-extract-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> postcssPrefixer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postcss-prefixer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">const</span> isDevServer <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DEV_SERVER</span> <span class=\"token operator\">===</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n\nmodule<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token punctuation\">{</span>\n      test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.s[ac]ss$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">,</span>\n      use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        isDevServer <span class=\"token operator\">?</span> <span class=\"token string\">'style-loader'</span> <span class=\"token operator\">:</span> MiniCssExtractPlugin<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            sourceMap<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">'postcss-loader'</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            sourceMap<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token function\">postcssPrefixer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                prefix<span class=\"token operator\">:</span> <span class=\"token string\">'tui-full-calendar-'</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">]</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">'sass-loader'</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            sourceMap<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(gif|png|jpe?g)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n      use<span class=\"token operator\">:</span> <span class=\"token string\">'url-loader'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\nplugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">MiniCssExtractPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">FILENAME</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.css</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"개발-서버-설정\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%EC%84%9C%EB%B2%84-%EC%84%A4%EC%A0%95\" aria-label=\"개발 서버 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 서버 설정</h2>\n<p><a href=\"https://webpack.js.org/configuration/dev-server/\">webpack-dev-server</a>를 설치하고 <a href=\"https://webpack.js.org/plugins/html-webpack-plugin/\">html-webpack-plugin</a>을 사용해서 페이지가 뜨는지 확인해 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save-dev webpack-dev-server html-webpack-plugin</code></pre></div>\n<p>webpack.config.js에 html-webpack-plugin을 추가하고 개발 서버 설정을 추가한다. 이 때 유의할 것은 <code class=\"tui-language-text\">resolve.extensions</code>에 <code class=\"tui-language-text\">&#39;.js&#39;</code> 확장자를 추가해야 한다는 것이다. <code class=\"tui-language-text\">&#39;.js&#39;</code>를 추가하지 않으면 webpack-dev-server가 로딩하는 js 모듈이 로딩되지 않으므로 서버가 실행이 되지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.ts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.tsx'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.js'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// '.js'를 추가한다.</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  devtool<span class=\"token operator\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    historyApiFallback<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    host<span class=\"token operator\">:</span> <span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span>\n    disableHostCheck<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>화면에 아직 아무 것도 나오지 않겠지만 실행해 보면 자바스크립트와 css가 잘 로딩된 것을 볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npx webpack-dev-server --mode development</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/dist/esm-ui-library.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/dist/esm-ui-library.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"번들-및-배포-설정\" style=\"position:relative;\"><a href=\"#%EB%B2%88%EB%93%A4-%EB%B0%8F-%EB%B0%B0%ED%8F%AC-%EC%84%A4%EC%A0%95\" aria-label=\"번들 및 배포 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>번들 및 배포 설정</h2>\n<p>이제 실제로 ES5번들 파일과 ES6 모듈 파일이 잘 생성되는지 확인할 차례이다.</p>\n<p>종류별 번들과 개발 서버를 띄우는 npm 스크립트를 추가한다. <a href=\"https://github.com/nhn/toast-ui.doc\">@toastui/doc</a>을 사용한 스크립트(<code class=\"tui-language-text\">&quot;doc&quot;</code>)는 ES6 모듈을 빌드한 후 API 문서를 생성하도록 변경되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"doc\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build:esm &amp;&amp; tuidoc\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"DEV_SERVER=true webpack-dev-server --mode development\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build:dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode development\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build:prod\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"NODE_ENV=production webpack --mode production\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build:esm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ttsc -p tsconfig.esm.json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rm -rf dist &amp;&amp; npm run build:dev &amp;&amp; npm run build:prod &amp;&amp; npm run build:esm\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"es5-단일-번들-파일-생성\" style=\"position:relative;\"><a href=\"#es5-%EB%8B%A8%EC%9D%BC-%EB%B2%88%EB%93%A4-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"es5 단일 번들 파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES5 단일 번들 파일 생성</h3>\n<p>development와 production 버전을 생성한다. <code class=\"tui-language-text\">dist</code> 폴더에 파일이 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm run build:dev\nnpm run build:prod</code></pre></div>\n<h3 id=\"es6-모듈-생성\" style=\"position:relative;\"><a href=\"#es6-%EB%AA%A8%EB%93%88-%EC%83%9D%EC%84%B1\" aria-label=\"es6 모듈 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6 모듈 생성</h3>\n<p><code class=\"tui-language-text\">dist/esm</code> 폴더에 파일이 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm run build:esm</code></pre></div>\n<p><strong>생성된 파일의 모습</strong>\n<img src=\"https://user-images.githubusercontent.com/26706716/63864124-4a719a00-c9ea-11e9-923d-53dd8b157780.png\" alt=\"image (65)\"></p>\n<h3 id=\"npm에-배포할-파일-선택\" style=\"position:relative;\"><a href=\"#npm%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%A0-%ED%8C%8C%EC%9D%BC-%EC%84%A0%ED%83%9D\" aria-label=\"npm에 배포할 파일 선택 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm에 배포할 파일 선택</h3>\n<p>npm에 불필요한 파일을 배포할 필요는 없으므로 필요한 파일만 배포할 수 있도록 설정한다.</p>\n<p><strong>package.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">{\n  &quot;files&quot;: [\n    &quot;src&quot;,\n    &quot;dist&quot;,\n    &quot;index.d.ts&quot;\n  ]\n}</code></pre></div>\n<h2 id=\"preact로-ui-라이브러리-만들기\" style=\"position:relative;\"><a href=\"#preact%EB%A1%9C-ui-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"preact로 ui 라이브러리 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>preact로 UI 라이브러리 만들기</h2>\n<p>먼저 <a href=\"https://github.com/preactjs/preact\">preact</a>와 서버 사이드 렌더링을 위한 <a href=\"https://github.com/preactjs/preact-render-to-string\">preact-render-to-string</a>를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm i --save preact preact-render-to-string</code></pre></div>\n<p>간단하게 엔트리 파일과 Month와 Week를 렌더링하는 클래스를 작성한다. <code class=\"tui-language-text\">renderToString</code>은 preact 컴포넌트를 html 문자열로 바꾸어주는 함수이다.</p>\n<p><strong>index.ts</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> Month <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/month'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Week <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/week'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  Month<span class=\"token punctuation\">,</span>\n  Week\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> Month<span class=\"token punctuation\">,</span> Week <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>base.ts</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render<span class=\"token punctuation\">,</span> ComponentChild <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> renderToString <span class=\"token keyword\">from</span> <span class=\"token string\">'preact-render-to-string'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> abstract <span class=\"token keyword\">class</span> <span class=\"token class-name\">Base</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _container<span class=\"token operator\">:</span> Element<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _base<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Element<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">container<span class=\"token operator\">:</span> Element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_container <span class=\"token operator\">=</span> container<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">protected</span> abstract <span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_base <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_container<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token function\">renderToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> renderToString<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>month.tsx</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> h <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Base <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/base'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Month</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Base</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">protected</span> <span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Month View<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>week.tsx</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> h <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Base <span class=\"token keyword\">from</span> <span class=\"token string\">'@src/base'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Week</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Base</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">protected</span> <span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSX</span><span class=\"token punctuation\">.</span>Element <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Week View<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"라이브러리-사용-테스트\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%82%AC%EC%9A%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"라이브러리 사용 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브러리 사용 테스트</h2>\n<p>라이브러리를 직접 사용해서 목표대로 잘 동작하는지 테스트 해보자. 이 라이브러리의 목표에 따라 다음의 기능이 잘 동작하는지 확인하는 것이다.</p>\n<ul>\n<li>트리 쉐이킹 테스트 - 사용한 모듈만 번들되어 파일 사이즈가 줄어드는지 확인</li>\n<li>서버 사이드 렌더링 테스트 - html 문자열 생성</li>\n</ul>\n<h3 id=\"테스트-코드\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C\" aria-label=\"테스트 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 코드</h3>\n<p>테스트 코드는 Week와 Month 모듈을 가져와서 렌더링하고, 추가로 Month를 서버 사이드 렌더링으로 html 문자열을 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Month<span class=\"token punctuation\">,</span> Week <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"esm-ui-library\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> week <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Week</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nweek<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> month <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Month</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmonth<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ssr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> month<span class=\"token punctuation\">.</span><span class=\"token function\">renderToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"실행-화면\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%ED%96%89-%ED%99%94%EB%A9%B4\" aria-label=\"실행 화면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행 화면</h3>\n<p>실행해 보면 그림처럼 Week와 Month, 그리고 Month의 서버 사이드 렌더링 결과인 html이 잘 렌더링되는 것을 볼 수 있다.\n<img src=\"https://user-images.githubusercontent.com/26706716/63864152-578e8900-c9ea-11e9-8198-e173d52d041b.png\" alt=\"image (66)\"></p>\n<h3 id=\"트리-쉐이킹-테스트\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%AC-%EC%89%90%EC%9D%B4%ED%82%B9-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"트리 쉐이킹 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트리 쉐이킹 테스트</h3>\n<p>번들 파일의 크기는 <strong>12.8 KiB</strong>이며, 번들 파일에서 month.tsx와 week.tsx 모듈이 모두 포함된 것을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">      Asset       Size  Chunks             Chunk Names\n index.html  551 bytes          [emitted]\n    main.js   12.8 KiB       0  [emitted]  main\nmain.js.map   49.8 KiB       0  [emitted]  main</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> v <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h2\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Week View\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> v <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h2\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Month View\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Month를 사용하지 않도록 소스에서 제거한 후 번들해 보자. 트리 쉐이킹이 잘 동작해서 Month 모듈은 제거되어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Month<span class=\"token punctuation\">,</span> Week <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"esm-ui-library\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> week <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Week</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nweek<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// const month = new Month(document.getElementById(\"app2\"));</span>\n<span class=\"token comment\">// month.render();</span>\n\n<span class=\"token comment\">// document.getElementById(\"ssr\").innerHTML = month.renderToString();</span></code></pre></div>\n<p>번들 파일의 크기가 <strong>12.6KiB</strong>로 줄어 들었으며, 번들 파일에서 month.tsx 모듈은 제거되었음을 알 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">      Asset       Size  Chunks             Chunk Names\n index.html  551 bytes          [emitted]\n    main.js   12.6 KiB       0  [emitted]  main\nmain.js.map   49.4 KiB       0  [emitted]  main</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> v <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h2\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Week View\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"맺음말\" style=\"position:relative;\"><a href=\"#%EB%A7%BA%EC%9D%8C%EB%A7%90\" aria-label=\"맺음말 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>맺음말</h2>\n<p>어느 언어에서나 불필요한 소스를 줄여 최종 실행 파일의 크기를 줄이는 것은 매우 중요하다. 파일 크기의 증가는 대개 비용의 증가로 이어지기 때문이다. 자바스크립트 UI 라이브러리는 많은 기능을 지원할 수록 파일 크기가 커진다. 그러나 사용자는 라이브러리가 제공하는 특정 기능만 쓰고 싶을 수도 있다. 따라서 UI 라이브러리가 웹 페이지를 최적화할 수 있는 방법을 제공한다면 더 멋진 라이브러리가 되지 않을까? 나는 트리 쉐이킹을 방법으로 선택했지만 다른 방법도 있을 것이다.</p>\n<p>TOAST UI Calendar는 잘 만들어진 소스를 v1으로 오픈소스화 하면서 많은 사랑을 받았다. <a href=\"https://github.com/nhn/tui.calendar\">깃헙</a>의 스타 갯수도 7000개가 넘었다. 많은 개발자들이 사랑하는 오픈소스가 되어 참으로 기쁘다. TOAST UI Calendar v2를 기획하고, 기술 스택을 선정하고, 가능성을 확인하는 과정은 참으로 매력적이다. 이제 한발 더 도약하기 위한 시작이다. 이 아티클이 많은 도움이 되면 좋겠다. 전체 소스는 <a href=\"%5Bhttps://github.com/dongsik-yoo/esm-ui-library%5D(https://github.com/dongsik-yoo/esm-ui-library)\">여기</a>에 있다.</p>\n<p>혹시 TOAST UI Calendar v2에 바라는 기능이 있다면 <a href=\"https://github.com/nhn/tui.calendar/issues\">깃헙 이슈</a>를 남겨 주시라. 물 들어 올 때 노저어야 한다.</p>","frontmatter":{"id":"ko_20190829","title":"트리 쉐이킹 되는 UI 라이브러리 만들기 ㄱ부터 ㅎ까지","description":"필자는 TOAST UI의 라이브러리 중 하나를 개발하고 있고 그동안 쌓은 경험과 노하우를 대방출하고자 한다. 이 글은 UI 라이브러리를 만드는데, 라이브러리의 목표와 기능, 사용한 기술 스택 그리고 웹팩 설정까지 바로 적용할 수 있는 실용적인 내용으로 구성하였다. UI 라이브러리를 만드는 방법과 노하우 A to Z를 알고 싶다면 노트북을 준비하고 차근차근 따라해보자.","date":"2019.08.29","author":"유동식","tags":["es6","bundler","React","typescript"],"thumbnail":"https://user-images.githubusercontent.com/26706716/63908104-e76b1c00-ca58-11e9-88db-06c6c5491187.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20190829","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}