{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20161212","result":{"data":{"post":{"html":"<h1 id=\"웹-페이지에서-컨텐츠를-빠르게-보여주기-위한-트릭\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90%EC%84%9C-%EC%BB%A8%ED%85%90%EC%B8%A0%EB%A5%BC-%EB%B9%A0%EB%A5%B4%EA%B2%8C-%EB%B3%B4%EC%97%AC%EC%A3%BC%EA%B8%B0-%EC%9C%84%ED%95%9C-%ED%8A%B8%EB%A6%AD\" aria-label=\"웹 페이지에서 컨텐츠를 빠르게 보여주기 위한 트릭 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 페이지에서 컨텐츠를 빠르게 보여주기 위한 트릭</h1>\n<blockquote>\n<p>원글<br>\nJake Archibald, <a href=\"https://jakearchibald.com/2016/fun-hacks-faster-content/\">https://jakearchibald.com/2016/fun-hacks-faster-content/</a></p>\n</blockquote>\n<p>몇 주 전에 나는 일 때문에 공항을 이용했는데 여기서 GitHub의 성능에 이상한 점을 발견했다. 링크를 클릭하는 것 보다 새 창으로 접속하는 것이 더 빨랐던 것이다. 아래는 영상으로 그 현상을 캡쳐한 것이다.</p>\n<p><a href=\"https://youtu.be/4zG0AZRZD6Q\">https://youtu.be/4zG0AZRZD6Q</a></p>\n<p>영상에서 나는 링크를 클릭하고 바로 주소를 새 탭에 붙여넣었다. 링크를 더 일찍 클릭했지만 새 탭으로 연 페이지의 내용이 더 빨리 보였다.</p>\n<h3 id=\"가진-것을-곧바로-보여주자\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%A7%84-%EA%B2%83%EC%9D%84-%EA%B3%A7%EB%B0%94%EB%A1%9C-%EB%B3%B4%EC%97%AC%EC%A3%BC%EC%9E%90\" aria-label=\"가진 것을 곧바로 보여주자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가진 것을 곧바로 보여주자</h3>\n<p>페이지 로드를 시작하면 브라우저는 네트워크 스트림 파이프를 HTML파서에 연결한다. 그리고 이 HTML파서는 문서에 파이프라인 형태로 연결된다. 이는 페이지를 전부 다 받을때까지 기다리는 것이 아니라 점진적으로 컨텐츠를 받아온다는 것을 뜻한다. 페이지가 100kb 이어도 유용한 내용은 20kb를 받더라도 렌더링이 가능하다.</p>\n<p>이 기능은 예전부터 지원했던 유용한 기능이지만 종종 무시되었다. 대부분의 웹 페이지의 로드에 걸리는 시간에 대한 조언은 \"가진 것을 곧바로 보여주자\" 이다. 보여주는 것을 미루거나 모든 것을 받아오기 전 까지 기다리지 말자는 것이다.</p>\n<p>GitHub은 서버 렌더링에 대한 성능에 신경쓰고 있다. 하지만 같은 탭 내에서의 페이지 이동은 JavaScript를 이용해 다음처럼 구현되어 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// ... 브라우저 네비게이션을 구현하기 위한 많은 코드들</span>\n<span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page-data.inc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querytSelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> html<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ... 브라우저 네비게이션을 구현하기 위한 많은 코드들</span></code></pre></div>\n<p>이 코드는 이 조언을 무시하고 있다. <code class=\"tui-language-text\">page-data.inc</code>의 다운로드가 모두 끝날때까지 기다리고 있다. 서버 렌더링 버전 (새 탭으로 열었을때) 에서는 이런식으로 데이터를 비축하고 있지 않다. 서버 렌더링 버전은 스트림이고 더 빠르게 컨텐츠를 보여줄 수 있다. GitHub의 클라이언트 렌더러, 즉 여러 자바스크립트들이 이렇게 페이지 로딩을 느리게 만들고 있는 것이다.</p>\n<p>나는 단지 GitHub 에 대한 예를 들었지만 이 안티패턴은 거의 모든 단일 페이지 앱에서 발견할 수 있다.</p>\n<p>페이지의 컨텐츠를 바꾸는 것은 여러 장점이 있다. 특히 무거운 스크립트나 JavaScript를 재 실행하지 않고 컨텐츠를 변경할때는 말이다. 하지만 스트리밍 기능을 무시할 정도의 장점이라고 생각하지 않는다. JavaScript가 앞서 언급한 스트림 파서에 직접적으로 접근할 방법은 없지만 간접적으로는 방법이 있다.</p>\n<h3 id=\"iframe과-documentwrite를-이용한-성능-향상법\" style=\"position:relative;\"><a href=\"#iframe%EA%B3%BC-documentwrite%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%84%B1%EB%8A%A5-%ED%96%A5%EC%83%81%EB%B2%95\" aria-label=\"iframe과 documentwrite를 이용한 성능 향상법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iframe과 document.write를 이용한 성능 향상법</h3>\n<p><code class=\"tui-language-text\">iframe</code> 과 <code class=\"tui-language-text\">document.write()</code>를 사용하기 때문에 JavaScript로 스트림 파서에 간접적으로 접근하는 방법 중 가장 별로인 방법이다. 아래 예제를 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// iframe을 만든다</span>\n<span class=\"token keyword\">const</span> iframe <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'iframe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 문서에 숨겨진 형태로 추가한다.</span>\niframe<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// iframe이 준비될 때 까지 기다린다</span>\niframe<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 앞으로의 load 이벤트를 무시한다</span>\n  iframe<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 더미 태그를 만든다</span>\n  iframe<span class=\"token punctuation\">.</span>contentDocument<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;streaming-element>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 엘리먼트에 대한 참조를 얻는다</span>\n  content streamingElement <span class=\"token operator\">=</span> iframe<span class=\"token punctuation\">.</span>contentDocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'streaming-element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 해당 엘리먼트를 iframe문서에서 빼고 부모 문서에 추가한다.</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>streamingElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 컨텐츠를 추가한다 (비동기로 작동한다)</span>\n  iframe<span class=\"token punctuation\">.</span>contentDocument<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;p>Hello!&lt;/p>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 아래와 같이 컨텐츠를 추가한다. 그러면 끝</span>\n  iframe<span class=\"token punctuation\">.</span>contentDocument<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;/streaming-element>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  iframe<span class=\"token punctuation\">.</span>contentDocument<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// iframe을 초기화한다</span>\niframe<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"tui-language-text\">&lt;p&gt;Hello&lt;/p&gt;</code> 엘리먼트가 iframe에 쓰이면 (추가되면) 곧바로 부모 문서에 나타난다! 파서가 새로 만들어져 추가된 엘리먼트들의 스택을 관리하고 있기 때문이다. <code class=\"tui-language-text\">&lt;streaming-element&gt;</code>를 다른 곳으로 옮겨도 문제가 되지 않는다.</p>\n<p>또 이 기술은 <code class=\"tui-language-text\">innerHTML</code>을 사용하는 것 보다 조금 더 표준 페이지 로딩에 가깝게 동작한다. 특히 파이어폭스를 제외한 나머지 브라우저에서는 스크립트도 다운로드되어 실행된다 <del>(파이어폭스에 버그가 있다)</del> <a href=\"https://html.spec.whatwg.org/multipage/syntax.html#scripts-that-modify-the-page-as-it-is-being-parsed\">실은 실행이 안되어야 한다</a>. (<a href=\"https://twitter.com/zcorpan/status/806150847184928768\">Simon Pieters의 지적</a>에 고마움을 표한다) 하지만 Edge, Safari, Chrome은 실행되고 있다.</p>\n<p>이 예제에 대한 데모를 만들어 GitHub과 비교했다. 그리고 3g네트웍에서의 성능을 비교했다.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/12269564/21087405/d66aef5e-c068-11e6-980e-44c315c9517b.png\" alt=\"2016-12-12 12 44 38\"></p>\n<p><a href=\"https://www.webpagetest.org/video/compare.php?tests=161206_N2_FJG-r,161206_JP_FPV-r:5-c:0\">Raw test data</a></p>\n<p>iframe을 이용한 컨텐츠 스트리밍을 수행한 쪽에서 컨텐츠가 1.5초 더 빨리 나타나고 있다. 아바타 이미지도 훨씬 빨리 나타났다. 스트리밍은 브라우저가 더 빨리 뭔가를 찾을 수 있다는 뜻이므로 더 빨리 병렬로 받을 수 있다는 뜻이다.</p>\n<p>위에서 언급한 내용들은 GitHub서버가 주는 HTML에 대해 동작한다. 하지만 프레임웍을 사용한 고유의 DOM 조작을 관리해야 하는 경우 이런 방법으로는 부족할 것이다. 그 경우를 위해 조금 더 좋은 대안을 소개한다.</p>\n<h3 id=\"newline-delimited-json\" style=\"position:relative;\"><a href=\"#newline-delimited-json\" aria-label=\"newline delimited json permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Newline-delimited JSON</h3>\n<p>많은 사이트들이 동적 업데이트를 위해 JSON을 사용한다. 하지만 JSON은 스트리밍에 친화적인 포멧이 아니다. <a href=\"https://github.com/creationix/jsonparse\">스트리밍 JSON파서</a>가 따로 있긴 하지만 사용하기 까다롭다.</p>\n<p>하여 아래처럼 JSON덩어리를 전달하는 대신에</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"tui-language-json\"><code class=\"tui-language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"Comments\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span><span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Alex\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"body\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Jake\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"body\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>개행으로 구분된 JSON을 전달한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"tui-language-json\"><code class=\"tui-language-json\"><span class=\"token punctuation\">{</span><span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Alex\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"body\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Jake\"</span><span class=\"token punctuation\">,</span><span class=\"token property\">\"body\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>이를 newline-delimited JSON 이라 하고 <a href=\"http://specs.okfnlabs.org/ndjson/\">명백히 표준의 한 종류</a>이다. 파서를 작성하는 것 또한 더 간단하다. 2017년에 우린 조합 가능한 변화되는 여러 스트림을 아래처럼 다룰 수 있다. (<code class=\"tui-language-text\">fetch</code> API의 파이프라인 지원은 현재 아직 실험적인 기능이긴 하지만 언제 사용가능해질 지 모른다 더 빠를 수도, 더 느릴 수도 있다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// Sometime in 2017</span>\n\n<span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'comments.ndjson'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> comments <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>body\n  <span class=\"token punctuation\">.</span><span class=\"token function\">pipeThrough</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">pipeThrough</span><span class=\"token punctuation\">(</span><span class=\"token function\">splitStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">pipeThrough</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> comment <span class=\"token keyword\">of</span> comments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">addCommentToPage</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"tui-language-text\">splitStream</code>과 <code class=\"tui-language-text\">parseJSON</code>은 <a href=\"https://gist.github.com/jakearchibald/c2052ef298459355963b8cfb79c71d1c\">재사용 가능한 변화되는 스트림</a>이다. 그리고 브라우저 호환성을 극대화하기 위해 <a href=\"https://github.com/jakearchibald/streaming-html/blob/master/xhr-ndjson.js\">XHR을 응용</a>할 수 있다.</p>\n<p>다시 <a href=\"https://jakearchibald.github.io/streaming-html/\">두 가지 방법을 비교할 수 있는 데모</a>를 만들었다. 아래는 3g망에서의 결과이다.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/12269564/21087597/a3c94a94-c06a-11e6-892f-7d31a70b9ea1.png\" alt=\"2016-12-12 12 57 58\"></p>\n<p><a href=\"https://www.webpagetest.org/video/compare.php?tests=161206_X9_FNG-r,161206_V7_FPJ-r:1-c:0\">Raw test data</a></p>\n<p>일반적인 JSON에 비해 ND-JSON이 1.5 초 빨리 보였다. iframe을 활용한 방법보다 많이 빠르진 않더라도 이런 스트리밍을 사용하지 않으면 거대한 JSON객체가 모두 받아질때까지 엘리먼트를 그릴 수 없다.</p>\n<h3 id=\"너무-서둘러-단일-페이지-앱으로-개발하지-마세요\" style=\"position:relative;\"><a href=\"#%EB%84%88%EB%AC%B4-%EC%84%9C%EB%91%98%EB%9F%AC-%EB%8B%A8%EC%9D%BC-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%95%B1%EC%9C%BC%EB%A1%9C-%EA%B0%9C%EB%B0%9C%ED%95%98%EC%A7%80-%EB%A7%88%EC%84%B8%EC%9A%94\" aria-label=\"너무 서둘러 단일 페이지 앱으로 개발하지 마세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>너무 서둘러 단일 페이지 앱으로 개발하지 마세요</h3>\n<p>위에 언급했듯이 GitHub은 웹 페이지 성능을 하락시키는 많은 코드들을 만들었다. 클라이언트에서 브라우저 네비게이팅을 재 구현하는 것은 어렵다. 많은 부분을 잘 바꾸지 않는 이상 그 의미가 없을수도 있다.</p>\n<p>만약 우리의 노력을 단순한 브라우저 네비게이션으로 처리한다면</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/12269564/21087781/49b854b2-c06c-11e6-8b57-ca0268b62044.png\" alt=\"2016-12-12 1 09 47\"></p>\n<p><a href=\"https://www.webpagetest.org/video/compare.php?tests=161206_JP_FPV-r,161206_V7_FPJ-r,161206_8Y_FN3-r:8-c:0\">Raw test data</a></p>\n<p>그냥 자바스크립트를 쓰지 않고 서버 렌더링을 쓰는 편이 훨씬 빠르다. 테스트 페이지는 간단한 댓글만 있는 정도로 간단하다. 페이지가 반복되는 복잡한 컨텐츠가 있을 경우 (예를 들면 끔찍한 광고 스크립트?) 차이가 날 순 있다. 주의를 기울이지 않으면 가성비가 너무 떨어지는 코드를 작성하거나 오히려 더 느리게 만들 수 있다.</p>\n<p>HTML파서가 이렇게 동작한다는 것을 알려준 <a href=\"https://twitter.com/ElliottZ?s=09\">Elliott Sprehn</a>에게 고마움을 표한다.</p>","frontmatter":{"id":"ko_20161212","title":"웹 페이지에서 컨텐츠를 빠르게 보여주기 위한 트릭","description":"몇 주 전에 나는 일 때문에 공항을 이용했는데 여기서 GitHub의 성능에 이상한 점을 발견했다. 링크를 클릭하는 것 보다 새 창으로 접속하는 것이 더 빨랐던 것이다. 아래는 영상으로 그 현상을 캡쳐한 것이다. 영상에서 나는 링크를 클릭하고 바로 주소를 새 탭에 붙여넣었다. 링크를 더 일찍 클릭했지만 새 탭으로 연 페이지의 내용이 더 빨리 보였다.","date":"2016.12.12","author":"김민형","tags":["performance"],"thumbnail":null}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20161212","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}