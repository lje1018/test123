{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20200602","result":{"data":{"post":{"html":"<h1 id=\"크로미움-84의-웹-애니메이션-api-개선-사항\" style=\"position:relative;\"><a href=\"#%ED%81%AC%EB%A1%9C%EB%AF%B8%EC%9B%80-84%EC%9D%98-%EC%9B%B9-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-api-%EA%B0%9C%EC%84%A0-%EC%82%AC%ED%95%AD\" aria-label=\"크로미움 84의 웹 애니메이션 api 개선 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>크로미움 84의 웹 애니메이션 API 개선 사항</h1>\n<blockquote>\n<p>원문 : <a href=\"https://web.dev/web-animations/\">https://web.dev/web-animations/</a></p>\n</blockquote>\n<p><span style=\"color:#888888\">프라미스로 애니메이션을 조작할 수있고, 교체가능한 애니메이션으로 성능이 개선되었으며, 합성 모드를 사용하여 부드러운 애니메이션을 제공한다.</span></p>\n<hr>\n<p>애니메이션을 잘 사용하면 <a href=\"https://www.researchgate.net/publication/229351931_The_Effects_of_Animation_and_Format_on_the_Perception_and_Memory_of_Online_Advertising\">사용자에게 좋은 브랜드 이미지를 줄 수 있음</a>과 동시에 애플리케이션이 의도한 사용자 액션을 가이드하거나, 기능 사용을 도울 수 있다.</p>\n<p><a href=\"https://www.w3.org/TR/web-animations-1/\">웹 애니메이션 API</a>를 사용하면 개발자가 <a href=\"https://www.youtube.com/watch?v=WaNoqBAp8NI\">자바스크립트 명령어로 애니메이션</a>을 작성할 수 있다. 시간에 따라 합성되는 기존 이펙트뿐 아니라 CSS 애니메이션과 트랜지션 그리고 새로 구현된 이펙트를 보다 견고히 할 수 있도록 개발되었다.</p>\n<p>원래 크로미움 36에서 출시된 기능으로 오래된 역사를 가지고 있지만, 크로미움 84에서는 이전에 지원되지 않았던 많은 기능을 제공한다.</p>\n<p><img src=\"https://webdev.imgix.net/web-animations/waapi-timeline.png\" alt=\"웹 애니메이션 API의 오래된 역사\">\n웹 애니메이션 API의 오래된 역사</p>\n<h2 id=\"시작하기\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작하기</h2>\n<p><code class=\"tui-language-text\">@keyframe</code>규칙을 사용한 경우, 웹 애니메이션 API를 통해 애니메이션을 생성해주는 것은 매우 친숙하게 느껴질 것이다. 먼저, 키프레임 오브젝트를 작성해보자.</p>\n<ul>\n<li>\n<p><a href=\"(https://codepen.io/una/pen/RwWMvPw)\">CSS</a>로 작성했을 때</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"tui-language-css\"><code class=\"tui-language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> openAnimation</span> <span class=\"token punctuation\">{</span>\n<span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p><a href=\"https://codepen.io/una/pen/abvYXJX\">자바스크립트</a>로 작성했을 때</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> openAnimation <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">{</span> transform<span class=\"token operator\">:</span> <span class=\"token string\">'scale(0)'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">{</span> transform<span class=\"token operator\">:</span> <span class=\"token string\">'scale(1)'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>CSS에서 애니메이션에 매개변수를 설정해 줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"tui-language-css\"><code class=\"tui-language-css\"><span class=\"token selector\">.modal</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> openAnimation 1s 1 ease-in<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>JS로 작성하여 설정해줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.modal'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\nopenAnimation<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  duration<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 1s</span>\n  iterations<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// single iteration</span>\n  easing<span class=\"token operator\">:</span> <span class=\"token string\">'ease-in'</span> <span class=\"token comment\">// easing function</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<p>코드의 양은 비슷해 보이지만, 자바스크립트로 작성한다면 CSS만 사용했을 때는 갖지 못하는 두 가지 강력한 힘를 얻게 된다. 효과의 순서를 조작할 수 있는 기능과 애니메이션 재생 상태를 제어할 수 있는 기능이 포함되었다.</p>\n<hr style=\"border-top: 1px solid #3740ff;\">\n<span style=\"color:#3740ff\">★ 키프레임을 사용할 때 하이픈이 포함된 속성명은 낙타표기법으로 작성한다. (예를 들면 `background-color`는 `backgroundColor`가 된다.)</span>\n<h3 id=\"elementanimate를-넘어서\" style=\"position:relative;\"><a href=\"#elementanimate%EB%A5%BC-%EB%84%98%EC%96%B4%EC%84%9C\" aria-label=\"elementanimate를 넘어서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"tui-language-text\">element.animate()</code>를 넘어서</h3>\n<p>업데이트된 웹 애니메이션 API는 더이상 <code class=\"tui-language-text\">element.animate()</code>를 통해 생성된 애니메이션을 제한하지 않는다. CSS 애니메이션과 트랜지션도 조작할 수 있다.</p>\n<p><code class=\"tui-language-text\">getAnimations()</code>는 애니메이션을 <code class=\"tui-language-text\">element.animation()</code> 이용해 만들던지, CSS 애니메이션과 트랜지션과 같은 CSS 규칙을 통해 만들던지 상관없이 요소에 걸려있는 모든 애니메이션을 반환하는 메소드이다. <a href=\"https://glitch.com/~waapi-getanimations\">여기</a> 예제가 있다.</p>\n<p>먼저 어디에서 트랜지션 해야 하는지 결정하기 위한 트랜지션의 키프레임을 \"얻어\"와야 한다. 그런 다음, 크로스 페이드 효과를 내주기 위해 두 개의 새로운 투명도를 조절하는 애니메이션을 추가한다. 크로스 페이드가 완료되면 복사본을 삭제한다.</p>\n<h2 id=\"프라미스로-애니메이션-조작하기\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%9D%BC%EB%AF%B8%EC%8A%A4%EB%A1%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A1%B0%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"프라미스로 애니메이션 조작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프라미스로 애니메이션 조작하기</h2>\n<p>크로미움 84에서, 프라미스로 사용할 수 있는 두 개의 메소드 <code class=\"tui-language-text\">animation.ready</code>와 <code class=\"tui-language-text\">animation.finished</code>를 지원한다.</p>\n<ul>\n<li><code class=\"tui-language-text\">animation.ready</code>는 보류 중인 변경 사항이 적용될 때 까지 대기할 수 있다. (즉, 재생과 일시 정지 메서드와 같이 재생 관련 흐름 제어)</li>\n<li><code class=\"tui-language-text\">animation.finished</code>는 애니메이션이 완료될 때 사용자가 정의한 자바스크립트 코드를 실행할 수 있는 방법을 제공한다.</li>\n</ul>\n<p>예제를 이어서 살펴보자. <code class=\"tui-language-text\">animation.finished</code>로 구성된 애니메이션 체인을 만들어보자. 수직 변환(<code class=\"tui-language-text\">scaleY</code>)이 나타나고, 그다음 수평 변환(<code class=\"tui-language-text\">scaleX</code>)이 이루어지고, 그다음 자식 요소의 불투명도가 변경된다.</p>\n<div style=\"text-align: center;\">\n  <video controls=\"\" autoplay=\"\" loop=\"\" muted=\"\" style=\"max-width: 100%;\">\n    <source src=\"https://storage.googleapis.com/web-dev-assets/web-animations/modal-open.mp4\">\n  </video>\n</div>\n<p>모달 요소가 열리면서 변환 및 불투명도 적용된 <a href=\"https://codepen.io/una/pen/dyYKJMz\">코드펜 데모 확인</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> transformAnimation <span class=\"token operator\">=</span> modal<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>openModal<span class=\"token punctuation\">,</span> openModalSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntransformAnimation<span class=\"token punctuation\">.</span>finished<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>fadeIn<span class=\"token punctuation\">,</span> fadeInSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다음 애니메이션 셋을 실행하기에 앞서  <code class=\"tui-language-text\">animation.finished.then()</code>을 사용하여 애니메이션을 연결했다. 이렇게 하면 애니메이션의 실행 순서를 알 수 있고, 속도 조절과 ease 효과와 같은 다른 옵션을 사용하는 다른 요소에도 효과를 적용할 수 있다.</p>\n<p>CSS 내에서는, 특히 다중 요소에 연속적으로 정의된 고유한 애니메이션은 재생성하기가 번거로울 수 있다.  <code class=\"tui-language-text\">@keyframe</code>을 사용하고, 애니메이션을 나열하기 위해 정확한 시간을 계산하고, 애니메이션이 차례로 발생하기 전에 <code class=\"tui-language-text\">animation-delay</code>를 사용하자.</p>\n<h3 id=\"예-애니메이션-재생-일시-정지-및-효과-되감기\" style=\"position:relative;\"><a href=\"#%EC%98%88-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%9E%AC%EC%83%9D-%EC%9D%BC%EC%8B%9C-%EC%A0%95%EC%A7%80-%EB%B0%8F-%ED%9A%A8%EA%B3%BC-%EB%90%98%EA%B0%90%EA%B8%B0\" aria-label=\"예 애니메이션 재생 일시 정지 및 효과 되감기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예: 애니메이션 재생, 일시 정지 및 효과 되감기</h3>\n<p>열 수 있는 것은 닫아야 한다! 다행히, <a href=\"https://developers.google.com/web/updates/2014/12/web-animation-playback\">크로미움 39</a>부터 웹 애니메이션 API는 애니메이션의 재생, 일시 정지 및 되감기 기능을 제공한다.</p>\n<p>위에 애니메이션 에제를 가져와 <code class=\"tui-language-text\">.reverse()</code>를 사용하여 버튼을 클릭했을 때 부드럽게 반전된 애니메이션 효과를 줄 수 있다. 이러한 방식으로 모달에 좀 더 부드럽고 상황에 맞는 상호작용을 만들 수 있다.</p>\n<div style=\"text-align: center;\">\n<video controls=\"\" autoplay=\"\" loop=\"\" muted=\"\" style=\"max-width: 100%;\">\n  <source src=\"https://storage.googleapis.com/web-dev-assets/web-animations/modal-reverse.mp4\">\n</video>\n</div>\n<p>버튼을 클릭하여 모달을 열고 닫는 예제. <a href=\"https://glitch.com/~waapi-promises\">데모 보기</a></p>\n<p>두 개의 보류 중인 재생 애니메이션(<code class=\"tui-language-text\">openModal</code>과 인라인 불투명도 변환 애니메이션)을 만든 다음, 애니메이션 중 하나를 일시 정지하고 다른 애니메이션이 완료될 때까지 지연시킨다. 그러면 재생하기 전에 각각의 애니메이션이 완료될 때까지 대기할 수 있는 프라미스를 사용할 수 있다. 마지막으로, 플래그가 설정되어 있는지 확인한 후 각 애니메이션 효과를 반전시킬 수 있다.</p>\n<h3 id=\"예-부분-키프레임을-사용한-동적-상호작용\" style=\"position:relative;\"><a href=\"#%EC%98%88-%EB%B6%80%EB%B6%84-%ED%82%A4%ED%94%84%EB%A0%88%EC%9E%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%8F%99%EC%A0%81-%EC%83%81%ED%98%B8%EC%9E%91%EC%9A%A9\" aria-label=\"예 부분 키프레임을 사용한 동적 상호작용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예: 부분 키프레임을 사용한 동적 상호작용</h3>\n<div style=\"text-align: center;\">\n<video controls=\"\" autoplay=\"\" loop=\"\" muted=\"\" style=\"max-width: 100%;\">\n  <source src=\"https://storage.googleapis.com/web-dev-assets/web-animations/retargetting.mp4\">\n</video>\n</div>\n<p>마우스를 클릭하면 애니메이션이 새 위치로 조정되어 대상이 변경되는 예제 <a href=\"https://glitch.com/~waapi-retargetting\">데모 확인</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">selector<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>transform<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>duration<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> fill<span class=\"token operator\">:</span> <span class=\"token string\">'forwards'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이 예제에서는 키프레임은 하나만 사용되었으며 시작 위치는 지정되어 있지 않다. <strong>부분 키프레임</strong>을 사용한 예제이다. 여기서 마우스 핸들러는 몇 가지 작업을 수행하는데, 새로운 종료 위치를 설정하고 새로운 애니메이션을 발생시킨다. 새로운 시작 위치는 현재 위치를 기준으로 계산한다.</p>\n<p>기존 트랜지션이 실행되는 동안 새로운 트랜지션이 발생될 수 있다. 즉, 현재 트랜지션이 중단되고 새로운 트랜지션이 만들어진 것이다.</p>\n<h2 id=\"교체가능한-애니메이션으로-성능-개선\" style=\"position:relative;\"><a href=\"#%EA%B5%90%EC%B2%B4%EA%B0%80%EB%8A%A5%ED%95%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EC%9C%BC%EB%A1%9C-%EC%84%B1%EB%8A%A5-%EA%B0%9C%EC%84%A0\" aria-label=\"교체가능한 애니메이션으로 성능 개선 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>교체가능한 애니메이션으로 성능 개선</h2>\n<p><code class=\"tui-language-text\">mousemove</code>와 같은 이벤트를 기반으로 애니메이션을 만들면, 매 시간마다 새로운 애니메이션이 생성되므로 메모리를 빨리 소모하고 성능을 저하시킬 수 있다. 이러한 문제를 해결하기 위해 크로미움 83에서는 교체가능한 애니메이션이 도입되어 자동적으로 정리가 가능해졌다. 완료된 애니메이션은 교체가능한 것으로 플래그가 지정되며 다른 완료된 애니메이션으로 교체했을 경우 자동으로 제거된다. 다음 에제를 살펴보자.</p>\n<div style=\"text-align: center;\">\n<video controls=\"\" autoplay=\"\" loop=\"\" muted=\"\" style=\"max-width: 100%;\">\n  <source src=\"https://storage.googleapis.com/web-dev-assets/web-animations/comet-trail.mp4\">\n</video>\n</div>\n<p>마우스가 움직이면 혜성의 꼬리가 쫒아오는 애니메이션. <a href=\"https://glitch.com/~waapi-replaced\">데모 보기</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">elem<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">evt</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n rectangle<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n   <span class=\"token punctuation\">{</span> transform<span class=\"token operator\">:</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">{</span>evt<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">}</span>px<span class=\"token punctuation\">,</span> $<span class=\"token punctuation\">{</span>evt<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">}</span>px<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{</span> duration<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> fill<span class=\"token operator\">:</span> <span class=\"token string\">'forwards'</span> <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>마우스가 움직일 때마다 브라우저는 혜성의 꼬리에 있는 각 공의 위치를 다시 계산하여 새로운 지점에 대한 애니메이션을 만든다. 이제 브라우저는 아래 내용의 경우에 교체가능한 이전 애니메이션을 제거할 수 있다.</p>\n<ol>\n<li>애니메이션이 끝났을 때</li>\n<li>완료된 합성 순서가 높은 애니메이션이 하나 이상 있을 때</li>\n<li>새로운 애니메이션이 이전과 같은 속성을 애니메이션 할 때</li>\n</ol>\n<p><code class=\"tui-language-text\">anim.onremove</code>를 사용하여 이벤트 핸들러에서 제거된 애니메이션 수를 집계하여 교체된 애니메이션의 갯수를 정확히 알 수있다.</p>\n<p>애니메이션을 제어할 수 있는 몇 가지 추가 메소드가 있다.</p>\n<ul>\n<li><code class=\"tui-language-text\">animation.replaceState()</code>는 애니메이션의 활성 상태, 지속 및 제거 여부를 추적할 수 있는 수단을 제공한다.</li>\n<li><code class=\"tui-language-text\">animation.commitStyles()</code>은 합성 순서에서 요소의 모든 애니메이션을 포함하여 기본 스타일을 바탕으로 요소의 스타일을 갱신한다.</li>\n<li><code class=\"tui-language-text\">animation.persist()</code>는 교체 불가능한 애니메이션으로 표시한다.</li>\n</ul>\n<hr style=\"border-top: 1px solid #3740ff;\">\n<span style=\"color:#3740ff\">★ `animation.commitStyles()`와 `animation.persist()`는 일반적으로 \"add\"와 같은 합성 모드와 함께 사용된다. 아래에 합성 모드에 대한 데모를 보면서 어떻게 사용되는지 살펴보자.</span>\n<h2 id=\"합성-모드를-통한-부드러운-애니메이션\" style=\"position:relative;\"><a href=\"#%ED%95%A9%EC%84%B1-%EB%AA%A8%EB%93%9C%EB%A5%BC-%ED%86%B5%ED%95%9C-%EB%B6%80%EB%93%9C%EB%9F%AC%EC%9A%B4-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\" aria-label=\"합성 모드를 통한 부드러운 애니메이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>합성 모드를 통한 부드러운 애니메이션</h2>\n<p>이제 웹 애니메이션 API를 사용하여 애니메이션의 합성 모드를 설정할 수 있다. 즉, 기본 모드인 \"replace\"외에도 증가와 누적될 수 있다. <a href=\"https://css-tricks.com/additive-animation-web-animations-api/\">합성 모드</a>를 사용하면, 개발자들이 구별된 애니메이션을 작성하고 애니메이션 효과가 결합되는 방식을 제어할 수 있다. 세 가지 합성 모드 <code class=\"tui-language-text\">replace</code>(기본 모드), <code class=\"tui-language-text\">add</code> 및 <code class=\"tui-language-text\">accumlate</code>를 지원한다.</p>\n<p>애니메이션을 합성하면 개발자는 간결하고 구별된 효과를 작성할 수 있으며, 결합된 효과를 볼 수 있다. 아래 예제에서는 각 네모에 회전(<em>rotation</em>)과 크기 조절(<em>scale</em>) 키프레임을 적용하였고, 옵션을 추가하여 합성 모드만 각각 다르게 설정해주었다.</p>\n<div style=\"text-align: center;\">\n<video controls=\"\" autoplay=\"\" loop=\"\" muted=\"\" style=\"max-width: 100%;\">\n  <source src=\"https://storage.googleapis.com/web-dev-assets/web-animations/replace-add-accumulate.mp4\">\n</video>\n</div>\n<p>기본, 추가, 누적 합성 모드를 보여주는 데모. <a href=\"https://glitch.com/~waapi-composite-demos\">데보 보기</a></p>\n<p>기본 모드인 <code class=\"tui-language-text\">&#39;replace&#39;</code> 합성 모드에서는 최종 애니메이션을 변환 속성을 교체하고 <code class=\"tui-language-text\">rotate(360deg) scale(1.4)</code>로 끝난다. <code class=\"tui-language-text\">&#39;add&#39;</code> 합성은 회전 값을 더하고 크기 조절 값을 곱한다. 최종 상태의 결괏값은 <code class=\"tui-language-text\">rotate(720deg) scale(1.96)</code>이다. 'accumulate'는 변환을 결합하여 결괏값이 <code class=\"tui-language-text\">rotate(720deg) scale(1.8)</code>이 된다. 이러한 합성 모드의 복잡한 내용에 대해 자세히 알고 싶다면 웹 애니메이션 스펙 문서의 <a href=\"https://www.w3.org/TR/web-animations-1/#the-compositeoperation-enumeration\">CompositeOperation과 CompositeOperationOrAuto</a>을 확인해보자.</p>\n<p>UI 요소 예제를 살펴보자.</p>\n<div style=\"text-align: center;\">\n<video controls=\"\" autoplay=\"\" loop=\"\" muted=\"\" style=\"max-width: 100%;\">\n  <source src=\"https://storage.googleapis.com/web-dev-assets/web-animations/dropdown.mp4\">\n</video>\n</div>\n<p>두 개의 합성 애니메이션이 적용되어 튕김 효과를 가지는 드롭다운 메뉴. <a href=\"https://glitch.com/~waapi-composited\">데모 보기</a></p>\n<p>여기서는, 두개의 <code class=\"tui-language-text\">top</code>애니메이션이 합성된다. 첫번째는 매크로 애니메이션으로 페이지 상단에서 슬아이드-인 효과로 메뉴의 전체 높이에 따라 드롭다운을 이동시키고, 두번째는 마이크로 애니메이션으로 하단에 부딪히면서 약간 튕겨나가는 효과가 적용되었다. <code class=\"tui-language-text\">&#39;add&#39;</code>합성 모드를 사용하면 더 부드러운 트랜지션이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> dropDown <span class=\"token operator\">=</span> menu<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> top<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token operator\">-</span>menuHeight<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> easing<span class=\"token operator\">:</span> <span class=\"token string\">'ease-in'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> top<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> duration<span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> fill<span class=\"token operator\">:</span> <span class=\"token string\">'forwards'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  dropDown<span class=\"token punctuation\">.</span>finished<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> bounce <span class=\"token operator\">=</span> menu<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span> top<span class=\"token operator\">:</span> <span class=\"token string\">'0px'</span><span class=\"token punctuation\">,</span> easing<span class=\"token operator\">:</span> <span class=\"token string\">'ease-in'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> top<span class=\"token operator\">:</span> <span class=\"token string\">'10px'</span><span class=\"token punctuation\">,</span> easing<span class=\"token operator\">:</span> <span class=\"token string\">'ease-out'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> duration<span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> composite<span class=\"token operator\">:</span> <span class=\"token string\">'add'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"웹-애니메이션-api의-다음-기능\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-api%EC%9D%98-%EB%8B%A4%EC%9D%8C-%EA%B8%B0%EB%8A%A5\" aria-label=\"웹 애니메이션 api의 다음 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 애니메이션 API의 다음 기능</h3>\n<p>최신 브라우저에서 애니메이션 기능에 대한 흥미로운 결과물이며, 더 많은 기능이 파이프 라인에 추가되고있다. 앞으로 추가될 기능의 정보는 아래의 명세들로 확인할 수 있다.</p>\n<ul>\n<li><a href=\"https://www.w3.org/TR/css-animation-worklet-1/#scroll-timeline\">Houdini API를 이용한 스크롤 링크 애니메이션</a></li>\n<li><a href=\"https://drafts.csswg.org/web-animations-2/#setting-the-timeline\">가변적인 타임라인</a></li>\n<li><a href=\"https://drafts.csswg.org/web-animations-2/#grouping-and-synchronization\">그룹 효과와 동기화</a></li>\n</ul>","frontmatter":{"id":"ko_20200602","title":"크로미움 84의 웹 애니메이션 API 개선 사항","description":"프라미스로 애니메이션을 조작할 수있고, 교체가능한 애니메이션으로 성능이 개선되었으며, 합성 모드를 사용하여 부드러운 애니메이션을 제공한다.","date":"2020.06.02","author":"조정은","tags":["browser","etc"],"thumbnail":"https://webdev.imgix.net/web-animations/hero.jpg?auto=format&fit=max&w=1959"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20200602","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}