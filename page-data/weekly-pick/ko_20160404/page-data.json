{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20160404","result":{"data":{"post":{"html":"<h1 id=\"codesnippet과-함께하는-javascript-프로그래밍\" style=\"position:relative;\"><a href=\"#codesnippet%EA%B3%BC-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-javascript-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"codesnippet과 함께하는 javascript 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CodeSnippet과 함께하는 JavaScript 프로그래밍</h1>\n<p><img src=\"https://cloud.githubusercontent.com/assets/12269564/14521019/5ada295a-0262-11e6-9e98-7768ec93dfe1.jpg\" alt=\"codesnippet\"></p>\n<p>웹 서비스에서 자바스크립트의 의존도는 계속 증가하는 추세다.\ngithub에 등록된 프로젝트들(<a href=\"https://github.com/blog/2047-language-trends-on-github\">2015년도 조사 자료</a>)만 봐도 자바스크립트의 비중이 가장 높고, 실제로 여러분의 프로젝트들도 대부분이 그럴 것이다.</p>\n<p>여러분은 혹시 다음의 경우를 겪지 않았는가?</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">1. 다른 사람이 이미 만들어 놓은 코드가 있는지 모르고 중복으로 작업했다.\n   (trim 등의 유틸리티 메서드들은 특히 그러기 쉽다)\n\n2. 같은 용도의 프레임웍을 여러개 또는 버전별로 추가했고, 심지어 한 페이지에서 같이 사용했다.\n   (jQuery, prototype ...)\n\n3. 새로 넣으려는 코드가 기존의 코드와 꼬여 문제가 발생했다.\n\n4. 유지보수할 때 이미 개발된 HTML페이지의 자바스크립트를 어디서부터 손대야 할지 모르겠다.\n   (페이지 진입과 동시에 실행되는 코드 파악이 어렵다)</code></pre></div>\n<p>물론 자바스크립트에 국한된 문제들은 아니지만, 유독 자바스크립트에서 두드러지게 나타나는 문제들이다.</p>\n<h4 id=\"이제-자바스크립트도-관리해야-하는-시대다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%8F%84-%EA%B4%80%EB%A6%AC%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EC%8B%9C%EB%8C%80%EB%8B%A4\" aria-label=\"이제 자바스크립트도 관리해야 하는 시대다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이제 자바스크립트도 관리해야 하는 시대다.</h4>\n<p>이미 그랬어야 했을 수도 있다.</p>\n<p>요점은 외부에 노출되는 자바스크립트 코드를 깔끔하게 정리하는 것이다. 다시 말해 window에 아무렇게 변수나 함수를 추가하지 말고 어떤 코드가 어디에 들어가야 할지를 명확하게 정리해서 쓸데없는 중복을 피하고 다른 코드와 꼬일 일이 없도록 출입구를 하나만 만드는 것이다. (jQuery는 <code class=\"tui-language-text\">window.$</code> 안에 코드들이 정리되어 있다. 우리라고 못할게 뭐 있겠는가! 전혀 어렵지 않다)</p>\n<p>먼저 라이브러리 없이 코드를 정리하는 방법을 알아본다. 정리된 코드가 가져다주는 유지보수의 편의는 여러분이 겪어봐서 이미 알 것이다. (적어도 위와 같은 문제는 예방할 수 있다) 그 후 CodeSnippet의 유틸리티 메서드 <code class=\"tui-language-text\">defineNamespace</code>, <code class=\"tui-language-text\">defineModule</code> 을 통해 더 간단하게 정리해 본다.</p>\n<h2 id=\"기존의-방식과-문제점\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4%EC%9D%98-%EB%B0%A9%EC%8B%9D%EA%B3%BC-%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"기존의 방식과 문제점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기존의 방식과 문제점</h2>\n<p>전역을 오염시키는 문제점으로 즉시실행 함수를 사용해야 한다는 점에 대해서는 다들 알고 있을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">/* ... */</span>\n    <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>위의 코드는 <code class=\"tui-language-text\">login()</code>으로 실행할수도 있지만 <code class=\"tui-language-text\">window.login()</code>으로도 사용할 수 있으므로 다른 자바스크립트와 섞여 문제를 발생시킬 수 있는 여지가 있다. (이런 코드를 '전역을 오염시키는 코드' 라고 한다)</p>\n<p>그래서 아래와 같이 즉시실행함수(IIFE)를 사용해 전역을 오염시키는 것을 방지했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">function</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/* ... */</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>문제는 login 함수가 익명함수 (이름 없는 함수) 내에 존재하기 때문에 외부에서 접근할 수 없다는 것이다.</p>\n<p>때문에 <code class=\"tui-language-text\">window</code>에 수동으로 외부에서 접근 가능해야 하는것들을 추가해야 한다. window에 프로젝트명으로 객체를 만들고 여기에 정리하기로 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">w</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">function</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/* ... */</span>\n      <span class=\"token punctuation\">}</span>\n\n      w<span class=\"token punctuation\">.</span>myProject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        login<span class=\"token operator\">:</span> login\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    w<span class=\"token punctuation\">.</span>myProject<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// OK</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>login이란 메서드가 <code class=\"tui-language-text\">window.myProject</code>라는 객체에 포함되었다. 하지만 불편한 점이 있다. namespace 가 여러 depth를 이루고 있을 텐데 익명함수 내에서 예외처리를 해야 한다. 예를 들면 <code class=\"tui-language-text\">myProject.common</code> 을 만들 때 <code class=\"tui-language-text\">myProject</code>객체가 있는지 말이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">w</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">function</span> <span class=\"token function\">saveData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/* ... */</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// myProject 가 있는지?</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">.</span>myProject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// myProject.user 가 있는지?</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">.</span>myProject<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          w<span class=\"token punctuation\">.</span>myProject<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>saveData <span class=\"token operator\">=</span> saveData<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          w<span class=\"token punctuation\">.</span>myProject<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            saveData<span class=\"token operator\">:</span> saveData\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    w<span class=\"token punctuation\">.</span>myProject<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">saveData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"definenamespace\" style=\"position:relative;\"><a href=\"#definenamespace\" aria-label=\"definenamespace permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>defineNamespace</h2>\n<p>CodeSnippet의 <code class=\"tui-language-text\">defindNamespace</code>는 window에 자바스크립트 기능들을 쉽게 체계적으로 구조화하는 기능을 제공한다. 이름 그대로 Namespace를 정의하는 기능을 제공하는 유틸리티 메서드다.</p>\n<p>이 메서드를 사용하면 앞서 이야기했던 불편한 문제 없이 계획적으로 기능들을 쉽게 추가할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> common <span class=\"token operator\">=</span> tui<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">defineNamespace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ne.myNote.common\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">trim</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/* ... */</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    tui<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">defineNamespace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ne.myNote\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">login</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/* ... */</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ne<span class=\"token punctuation\">.</span>myNote<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ne<span class=\"token punctuation\">.</span>myNode<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    common<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 변수에 할당해 사용이 가능하다</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"tui-language-text\">ne.myNote</code>와 <code class=\"tui-language-text\">ne.myNote.common</code>네임스페이스를 정의했다. (사실 <code class=\"tui-language-text\">ne.</code>로 시작하는 namespace는 사내 표준 가이드다.) 심지어 <code class=\"tui-language-text\">ne.myNote.common</code>을 먼저 선언하더라도 문제 없이 동작한다.</p>\n<p><code class=\"tui-language-text\">defineNamspace</code>를 사용해 자바스크립트 메서드들을 구조적으로 노출시키는 것만으로도 굉장히 깔끔한 산출물을 만들어 낼 수 있다.</p>\n<p>혹시 여기서 더 나아가 스크립트가 로드되는 시점에 초기화 메서드를 실행하고 싶다면 <code class=\"tui-language-text\">defineModule</code> 메서드를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    tui<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">defineModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ne.myNote.settings\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      memberID<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;%= memberID %>\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">initialize</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 페이지 로딩과 동시에 비동기 통신을 해야 함 (자동실행)</span>\n        $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ne<span class=\"token punctuation\">.</span>myNote<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>memberID<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 사용자 ID</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"tui-language-text\">defineNamespace</code>와 <code class=\"tui-language-text\">defineModule</code>의 차이는 페이지 로딩 시점에 <code class=\"tui-language-text\">initialize</code>라는 이름의 메서드 실행 여부 뿐이다.</p>\n<p><code class=\"tui-language-text\">defineModule</code>은 한 페이지 단위의 자바스크립트 파일을 만드는 데 쓸 수 있다. <code class=\"tui-language-text\">initialize</code>에서 페이지 로딩과 함께 실행되어야 하는 구현을 하는 형태로 사용할 수 있다. (실무 예제에서 다룬다)</p>\n<p>여기까지만 해도 충분하지만. 혹시, 만약, 클래스 시뮬레이션이 필요하다면 <code class=\"tui-language-text\">defineClass</code>를 사용할 수 있다. <code class=\"tui-language-text\">defineClass</code>는 결과가 생성자 함수이므로, 인스턴스화 하여 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> Comment <span class=\"token operator\">=</span> tui<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">defineClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">init</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> content<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>like <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">likeIt</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>like <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> comment1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I like it!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> comment2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Comment</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I hate it!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"tui-language-text\">defineClass</code>는 내부적으로 prototype 패턴을 이용해 클래스를 시뮬레이팅한다. 따라서 프로퍼티는 인스턴스에, 메서드는 prototype객체에 추가하므로 브라우저 기반의 한정적인 자원에서 동작하는 자바스크립트를 효율적으로 다룰 수 있도록 해 준다. 물론 상속도 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> PhotoComment <span class=\"token operator\">=</span> tui<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">defineClass</span><span class=\"token punctuation\">(</span>Comment<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">init</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">Comment</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>photoUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Comment클래스에 photoUrl 프로퍼티를 추가했다</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> comment1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PhotoComment</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I like it!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"실무-예제\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EB%AC%B4-%EC%98%88%EC%A0%9C\" aria-label=\"실무 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실무 예제</h2>\n<p>로그인 페이지에서 사용할 모듈을 만들어 보자. 추가적으로 email 에 trim을 적용해야 하는 경우를 가정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// util.js</span>\ntui<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">defineNamespace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ne.myNote.util\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">trim</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>trim<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^[\\s]+|[\\s]+$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token function-variable function\">getElement</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">selector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>util.js는 프로젝트 전체에서 사용할 유틸리티 메서드를 모은 모듈이다. getElement는 jQuery의 $()와 같은 것이라고 보면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Enter email address<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Enter password<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>login<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./util.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- ne.myNote.util --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    tui<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">defineModule</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ne.myNote.page.login\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      $email<span class=\"token operator\">:</span> ne<span class=\"token punctuation\">.</span>myNote<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">getElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input[name=email]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      $form<span class=\"token operator\">:</span> ne<span class=\"token punctuation\">.</span>myNote<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">getElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"form\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function-variable function\">initialize</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$form<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"submit\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onSubmit</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token function-variable function\">onSubmit</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$email<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> ne<span class=\"token punctuation\">.</span>myNote<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$email<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>각 페이지에서 사용하는 엘리먼트에 대해 모듈의 프로퍼티로 정의했다 ($email, $form) 자바스크립트가 사용하는 페이지 내 엘리먼트를 한눈에 볼 수 있어 관리하기 용이해졌다.</p>\n<p><code class=\"tui-language-text\">initialize</code> 에서 페이지 초기에 실행되어야하는 스크립트를 구현했다. 이제 페이지 전체파일을 훑지 않아도 로딩 시점의 스크립트를 관리할 수 있게 되었다.</p>\n<p>자바스크립트에서 문서에 바인딩하는 폼 엘리먼트 이벤트를 <code class=\"tui-language-text\">onSubmit</code>에 설정했다. 이와 같이 이벤트 메서드의 컨벤션을 정의할 경우 페이지 내에서 어떤 이벤트를 구현하는지 쉽게 알아볼 수 있다.</p>\n<h2 id=\"요약-및-결론\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD-%EB%B0%8F-%EA%B2%B0%EB%A1%A0\" aria-label=\"요약 및 결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약 및 결론</h2>\n<p>CodeSnippet의 <code class=\"tui-language-text\">defineNamespace</code>, <code class=\"tui-language-text\">defineModule</code>, <code class=\"tui-language-text\">defineClass</code>를 사용하면 서비스의 자바스크립트 코드를 쉽게 계획적으로 구조화할 수 있다.</p>\n<ul>\n<li><code class=\"tui-language-text\">defineNamespace</code>: 예외처리 없이 window에 객체 형태의 네임스페이스를 쉽게 만들 수 있다.</li>\n<li><code class=\"tui-language-text\">defineModule</code>: 페이지 로드 시점에 <code class=\"tui-language-text\">initialize</code> 메서드를 실행하는것 빼고 <code class=\"tui-language-text\">defineNamespace</code>와 같다</li>\n<li><code class=\"tui-language-text\">defineClass</code>: 클래스 시뮬레이팅 유틸리티 메서드다.</li>\n</ul>\n<p>서비스 개발 초기에 namespace 목록과 그 용도를 정리해 공유한다면 이미 있는 로직을 중복으로 추가한다거나, 같은 기능을 하는 다른 벤더의 프레임웍을 중복으로 추가한다거나 하는 불상사를 예방할 수 있다 (jQuery와 prototype 라이브러리를 한페이지에 같이 쓰는 프로젝트가 아직 많다...)</p>\n<p>CodeSnippet은 이 외에도 여러 유용한 기능이 있다. 자바스크립트의 모호한 타입 체킹을 회피할 수 있는 유틸리티 메서드 부터, 사용하기 불편했던 <code class=\"tui-language-text\">window.open</code>을 통한 팝업을 쉽게 사용하고 관리할 수 있는 메서드까지 말이다. 기능 목록은 <a href=\"https://github.com/nhn/tui.code-snippet#feature\">CodeSnippet Github Repository</a>에서 확인할 수 있다.</p>\n<p>끝으로 스크립트의 전체 용량은 23KB이며 GZIP 압축 후 약 6.94KB이므로 부담없는 크기이다. 또 원하는 기능의 파일만 개별로 사용할수도 있다. 사용 중 발생하는 문제에 대해 github이나 dl_javascript@nhn.com으로 리포팅하면 큰 이슈가 없는 한 즉각 피드백을 받을 수 있다.</p>","frontmatter":{"id":"ko_20160404","title":"CodeSnippet과 함께하는 JavaScript 프로그래밍","description":"웹 서비스에서 자바스크립트의 의존도는 계속 증가하는 추세다. github에 등록된 프로젝트들(2015년도 조사 자료)만 봐도 자바스크립트의 비중이 가장 높고, 실제로 여러분의 프로젝트들도 대부분이 그럴 것이다. 여러분은 혹시 다음의 경우를 겪지 않았는가?","date":"2016.04.04","author":"김민형","tags":["ecmascript","opensource"],"thumbnail":"https://cloud.githubusercontent.com/assets/12269564/14521019/5ada295a-0262-11e6-9e98-7768ec93dfe1.jpg"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20160404","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}