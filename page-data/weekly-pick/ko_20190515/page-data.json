{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20190515","result":{"data":{"post":{"html":"<h1 id=\"lodash의-대체재로서의-순수-자바스크립트-함수\" style=\"position:relative;\"><a href=\"#lodash%EC%9D%98-%EB%8C%80%EC%B2%B4%EC%9E%AC%EB%A1%9C%EC%84%9C%EC%9D%98-%EC%88%9C%EC%88%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%95%A8%EC%88%98\" aria-label=\"lodash의 대체재로서의 순수 자바스크립트 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lodash의 대체재로서의 순수 자바스크립트 함수</h1>\n<h2 id=\"lodashunderscorejs를-대체할-순수-함수에-대한-간략한-개요\" style=\"position:relative;\"><a href=\"#lodashunderscorejs%EB%A5%BC-%EB%8C%80%EC%B2%B4%ED%95%A0-%EC%88%9C%EC%88%98-%ED%95%A8%EC%88%98%EC%97%90-%EB%8C%80%ED%95%9C-%EA%B0%84%EB%9E%B5%ED%95%9C-%EA%B0%9C%EC%9A%94\" aria-label=\"lodashunderscorejs를 대체할 순수 함수에 대한 간략한 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lodash/Underscore.js를 대체할 순수 함수에 대한 간략한 개요</h2>\n<blockquote>\n<p>원문: <a href=\"https://blog.bitsrc.io/you-dont-need-lodash-or-how-i-started-loving-javascript-functions-3f45791fa6cd\">https://blog.bitsrc.io/you-dont-need-lodash-or-how-i-started-loving-javascript-functions-3f45791fa6cd</a></p>\n</blockquote>\n<p><img src=\"https://user-images.githubusercontent.com/35371660/57760820-4ff6ed00-7737-11e9-8dec-a73c68f3464e.png\" alt=\"A\"></p>\n<p>이 포스트는 가장 널리 사용되고있는 라이브러리인 <a href=\"https://lodash.com/\">Lodash</a> / <a href=\"https://underscorejs.org/\">Underscore.js</a> 의 유틸리티 함수들을 순수 자바스크립트를 통해 어느 정도로 대체해 줄 수 있는지 이해를 돕기 위해 정리된 내용이다. 여기서 등장하는 몇몇 함수는 ES5에서 지원하고 몇몇은 ES6 지원이 필요하다.</p>\n<p>Lodash 혹은 Underscore.js 같은 라이브러리의 코어 디자인은 사이드 이펙트가 없는 즉 외부 상태를 바꾸지 않는 순수 함수를 사용하는  <code class=\"tui-language-text\">함수형 프로그래밍</code>으로 되어있다. 함수형 프로그래밍의 공식적인 정의에 대해 알아보자.</p>\n<h3 id=\"함수형-프로그래밍이란\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%B4%EB%9E%80\" aria-label=\"함수형 프로그래밍이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수형 프로그래밍이란?</h3>\n<p>함수형 프로그래밍의 컨셉에 대해 설명하는데는 여러 방법이 있지만, 간결하게 정의해보면:</p>\n<blockquote>\n<p><a href=\"https://wiki.haskell.org/Functional_programming\">함수형 프로그래밍</a>은 계산결과를 표현의 평가로서 모델링하는 프로그래밍 스타일이다. 따라서 실행될 때 전역 상태를 변경하는 명령문으로 구성된 명령형 프로그래밍과 대조를 이룬다. 함수형 프로그래밍은 일반적으로 변경가능한 상태를 사용하지 않고 사이드 이펙트 없는 함수와 불변 데이터를 대신 사용한다.</p>\n</blockquote>\n<p>중요한 점은 함수는 반드시 사이드 이펙트가 없어야 한다는 것이다. 그렇게 될 경우 테스트, 유지 보수, 그리고 대부분 예측가능한 것들이 쉬워진다.</p>\n<p>그럼 이제 요점을 설명하기 위한 간단한 예제부터 복잡한 함수에 이르기까지 라이브러리 함수를 네이티브 함수로 대체하며 비교를 시작해보자.</p>\n<hr>\n<h2 id=\"tip-필요-기능만-bit-컴포넌트로-설치하라\" style=\"position:relative;\"><a href=\"#tip-%ED%95%84%EC%9A%94-%EA%B8%B0%EB%8A%A5%EB%A7%8C-bit-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A1%9C-%EC%84%A4%EC%B9%98%ED%95%98%EB%9D%BC\" aria-label=\"tip 필요 기능만 bit 컴포넌트로 설치하라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip: 필요 기능만 Bit 컴포넌트로 설치하라</h2>\n<p><a href=\"https://github.com/teambit/bit\">Bit</a>을 사용하면 라이브러리의 함수, 컴퍼넌트, 모듈을 0 리팩토링을 통해 재사용 가능할 수 있게 조각낼 수 있다.</p>\n<p><a href=\"https://bit.dev/\"><img src=\"https://user-images.githubusercontent.com/35371660/57761168-ef1be480-7737-11e9-8eaa-cec7cbc4d6bf.png\" alt=\"1\"></a></p>\n<p>다음은 Lodash에 대한 페이지이다.</p>\n<p><a href=\"https://bit.dev/lodash/lodash\"><img src=\"https://user-images.githubusercontent.com/35371660/57761169-efb47b00-7737-11e9-9d32-07d0e133c14b.png\" alt=\"2\"></a></p>\n<hr>\n<h3 id=\"1-find\" style=\"position:relative;\"><a href=\"#1-find\" aria-label=\"1 find permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. find</h3>\n<p>첫번째 함수는 우리가 자주 사용하는 함수 중 하나이다. 조건을 만족하는 컬렉션에서의 첫번째 요소를 찾는 함수이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'joey'</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">'age'</span><span class=\"token operator\">:</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'ross'</span><span class=\"token punctuation\">,</span>    <span class=\"token string\">'age'</span><span class=\"token operator\">:</span> <span class=\"token number\">41</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string\">'user'</span><span class=\"token operator\">:</span> <span class=\"token string\">'chandler'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token operator\">:</span> <span class=\"token number\">39</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// Native</span>\nusers<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// lodash</span>\n_<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">o</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>매우 간단한 코드이다. 그럼 한번 두 함수의 성능을 비교해 보도록 하겠다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/35371660/57760827-54230a80-7737-11e9-820f-05ef9a2c647c.png\" alt=\"week-1\"></p>\n<p>다음 사이트를 통해 벤치마크 코드를 검사하고 체험 해볼 수 있다.</p>\n<p><a href=\"https://measurethat.net/Benchmarks/Show/4831/0/native-find-vs-lodash-find\"><img src=\"https://user-images.githubusercontent.com/35371660/57761171-efb47b00-7737-11e9-8acb-e2dcef9f5c01.png\" alt=\"3\"></a></p>\n<p>하지만 이 결과가 네이티브 함수가 항상 더 나은 성능을 준다고 결론 내릴 순 없다. 직접 작성하는 것이 라이브러리가 제공하는 것보다 더 낮은 성능을 제공할 수 있고, 더 복잡한 여러 기능들을 제공하지 않을 수 있다. 하지만 네이티브 함수가 좀 더 단순하고 가독성이 좋아지는 선택지라면, 확실히 더 나은 대안으로 간주해야 한다.</p>\n<h3 id=\"2-filter\" style=\"position:relative;\"><a href=\"#2-filter\" aria-label=\"2 filter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. filter</h3>\n<p><code class=\"tui-language-text\">filter()</code>는 콜렉션에서 특정 조건을 만족하는 모든 요소를 추출해 준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">230</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1221</span><span class=\"token punctuation\">]</span>       \n\n_<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">,</span> <span class=\"token parameter\">num</span> <span class=\"token operator\">=></span> num <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nnumbers<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span> <span class=\"token operator\">=></span> num <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/35371660/57760830-54230a80-7737-11e9-8e69-a8770ee44d64.png\" alt=\"week-2\"></p>\n<p><a href=\"https://measurethat.net/Benchmarks/ShowResult/49478\"><img src=\"https://user-images.githubusercontent.com/35371660/57761173-efb47b00-7737-11e9-80cc-6923ecd35027.png\" alt=\"4\"></a></p>\n<h3 id=\"3-first-and-rest\" style=\"position:relative;\"><a href=\"#3-first-and-rest\" aria-label=\"3 first and rest permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. first and rest</h3>\n<p>콜렉션에서 첫번째 요소를 가지고 온 뒤 나머지 요소를 버리는 등 여러 방식으로 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"middle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"last\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"suffix\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> firstName <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">const</span> otherNames <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">rest</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span> \n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>firstName<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>otherNames<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> names\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>firstName<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'first'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>otherNames<span class=\"token punctuation\">)</span> <span class=\"token comment\">// [ 'middle', 'last', 'suffix' ]</span></code></pre></div>\n<p>이런 경우 spread 연산자(<code class=\"tui-language-text\">...</code> )를 사용할 수 있다. 여기서는 배열 요소를 디스트럭처링하고 있다.\n<code class=\"tui-language-text\">first()</code>와 <code class=\"tui-language-text\">rest()</code>의 성능 비교는 독자들에게 예제로 남겨두도록 하겠다.</p>\n<h3 id=\"4-each\" style=\"position:relative;\"><a href=\"#4-each\" aria-label=\"4 each permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. each</h3>\n<p>개발자들은 <code class=\"tui-language-text\">each()</code>나 <code class=\"tui-language-text\">forEach()</code> 처럼 내장된 반복자 대신 for 반복문을 사용하는 것이 좋다. 그리고 이 사례는 lodash 함수를 사용하는 것이 좋은 경우 중 하나이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">_<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n_<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'a'</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'a'</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// !error</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>벤치마킹 결과는 보는 것처럼 매우 흥미롭다. lodash의 <code class=\"tui-language-text\">_.each</code> 가 명백한 승자로 나타났기 때문이다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/35371660/57760832-54bba100-7737-11e9-8221-759ec9e525f9.png\" alt=\"week-3\"></p>\n<p><a href=\"https://measurethat.net/Benchmarks/ShowResult/49649\"><img src=\"https://user-images.githubusercontent.com/35371660/57761176-f04d1180-7737-11e9-8de0-a9074ec18be0.png\" alt=\"5\"></a></p>\n<p>Lodash의 <code class=\"tui-language-text\">each</code>는 브라우저의 스펙에 따라 구현을 다르게 가져가기 때문에 훨씬 빠르다.</p>\n<blockquote>\n<p>Lodash의 개발자들은 네이티브 <code class=\"tui-language-text\">forEach</code>의 상대적 속도가 브라우저에 따라 다르다고 설명한다. <code class=\"tui-language-text\">forEach</code>가 네이티브 함수이기 때문에 for나 while로 만들어진 단순한 루프보다 빠르다는 것을 의미하지 않는다. forEach는 첫번째로 좀 더 특별한 경우들을 처리해야 한다. 두번째로 forEach는 콜백함수를 사용하기 때문에 함수를 호출하는데 있어서 (잠재적인) 오버헤드가 존재한다.</p>\n</blockquote>\n<h3 id=\"5-every\" style=\"position:relative;\"><a href=\"#5-every\" aria-label=\"5 every permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. every</h3>\n<p>이 함수는 배열의 모든 요소가 특정한 조건을 만족하는지 테스트한 결과를 반환한다. 그리고 이 함수는 네이티브 함수가 훨씬 빠르다!</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"cat\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bat\"</span><span class=\"token punctuation\">]</span>\n\n_<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">,</span> <span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\nelements<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/35371660/57760833-54bba100-7737-11e9-8068-1f7811d75a28.png\" alt=\"week-4\"></p>\n<p><a href=\"https://measurethat.net/Benchmarks/ShowResult/49655\"><img src=\"https://user-images.githubusercontent.com/35371660/57761177-f04d1180-7737-11e9-9bc7-b2f22c13f588.png\" alt=\"6\"></a></p>\n<h3 id=\"6-some\" style=\"position:relative;\"><a href=\"#6-some\" aria-label=\"6 some permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. some</h3>\n<p>이 함수는 배열의 요소중 하나라도 특정한 조건을 만족하는지 테스트한 결과를 반환한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"cat\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dog\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bat\"</span><span class=\"token punctuation\">]</span>\n\n_<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">,</span> <span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nelements<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/35371660/57760835-54bba100-7737-11e9-99b7-527ff42d3efc.png\" alt=\"week-5\"></p>\n<p><a href=\"https://measurethat.net/Benchmarks/ShowResult/49656\"><img src=\"https://user-images.githubusercontent.com/35371660/57761180-f17e3e80-7737-11e9-97f0-30e1c2abf19c.png\" alt=\"7\"></a></p>\n<h3 id=\"7-includes\" style=\"position:relative;\"><a href=\"#7-includes\" aria-label=\"7 includes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. includes</h3>\n<p>콜렉션에 해당 요소를 갖고 있는지를 확인한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span><span class=\"token number\">41</span><span class=\"token punctuation\">,</span><span class=\"token number\">43</span><span class=\"token punctuation\">,</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span><span class=\"token number\">61</span><span class=\"token punctuation\">,</span><span class=\"token number\">67</span><span class=\"token punctuation\">,</span><span class=\"token number\">71</span><span class=\"token punctuation\">,</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">]</span>\n\n_<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>primes<span class=\"token punctuation\">,</span> <span class=\"token number\">47</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n\nprimes<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token number\">79</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/35371660/57760838-55543780-7737-11e9-901e-ec64041c798a.png\" alt=\"week-6\"></p>\n<p><a href=\"https://measurethat.net/Benchmarks/ShowResult/49657\"><img src=\"https://user-images.githubusercontent.com/35371660/57761181-f17e3e80-7737-11e9-9b79-18da8e0ec2e5.png\" alt=\"8\">\n</a></p>\n<h3 id=\"8-uniq\" style=\"position:relative;\"><a href=\"#8-uniq\" aria-label=\"8 uniq permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. uniq</h3>\n<p>배열의 요소들중 중복값을 제거한 결과를 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">var</span> elements <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\n_<span class=\"token punctuation\">.</span><span class=\"token function\">uniq</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">)</span> <span class=\"token comment\">//  [1,2,3,4,5]</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>elements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//  [1,2,3,4,5]</span></code></pre></div>\n<p>위 예시에선 <code class=\"tui-language-text\">Set</code>자료 구조를 이용하여 중복을 제거한 뒤 sperad 연산자를 사용하여 다시 배열로 돌려 놓는다. 이제 2번의 전환이 실제로 도움이 되는지 살펴보자.</p>\n<p><img src=\"https://user-images.githubusercontent.com/35371660/57760840-55543780-7737-11e9-996c-4160a8fbaa0a.png\" alt=\"week-7\"></p>\n<p><code class=\"tui-language-text\">_.uniq</code>의 속도가 빨랐다. </p>\n<p><a href=\"https://measurethat.net/Benchmarks/ShowResult/49659\"><img src=\"https://user-images.githubusercontent.com/35371660/57761182-f17e3e80-7737-11e9-9585-59ee3602bafe.png\" alt=\"9\"></a></p>\n<p>다음 방식으로 요소를 필터링을 좀 더 효율적으로 할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">elements<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> array<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> index<span class=\"token punctuation\">)</span></code></pre></div>\n<p>네이티브 함수를 사용할 지 Lodash의 uniq를 사용할 지는 당신의 선택에 달렸다.</p>\n<h3 id=\"9-compact\" style=\"position:relative;\"><a href=\"#9-compact\" aria-label=\"9 compact permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. compact</h3>\n<p><code class=\"tui-language-text\">compact</code>는 배열에서 undefined혹은 falsy 값을 제거하는 유용한 함수이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">var</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">434</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32.0</span><span class=\"token punctuation\">]</span>\n_<span class=\"token punctuation\">.</span><span class=\"token function\">compact</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span>\narray<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>Boolean<span class=\"token punctuation\">)</span></code></pre></div>\n<p>여기서 우린 약간의 구문적 특성을 이용해서 <code class=\"tui-language-text\">array.filter(Boolean)</code>을 통해 모든 요소를 Boolean을 통해 변환하여 truthy 값만을 반환한다.</p>\n<hr>\n<p>여러 예제를 살펴보면서 우리는 외부 라이브러리보다 네이티브 함수를 선택할 때 고려해야할 면을 알 수 있었다.</p>\n<ul>\n<li>여러분의 프로그램에 외부 라이브러리를 쓸 수 있는 상황인가? <a href=\"https://webpack.js.org/guides/tree-shaking/%29\">트리 쉐이킹</a>과 같은 기법으로 사용하는 모듈만 포함시킬 수도 있겠지만, 그래도 여전히 외부 라이브러리 함수를 써야하는 상황인가?</li>\n<li>경우에 따라 성능 향상을 위해 코드 가독성을 희생 시킬 수 있는가? 당신에게 제일 중요한 부분은 무엇인가?</li>\n</ul>\n<p>이 글이 올바른 결정을 내리는데 도움이 되길 바라며, 읽어줘서 고맙다 :)!</p>\n<hr>\n<h2 id=\"좀-더-공부하고-싶다면\" style=\"position:relative;\"><a href=\"#%EC%A2%80-%EB%8D%94-%EA%B3%B5%EB%B6%80%ED%95%98%EA%B3%A0-%EC%8B%B6%EB%8B%A4%EB%A9%B4\" aria-label=\"좀 더 공부하고 싶다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좀 더 공부하고 싶다면?</h2>\n<p><a href=\"https://hackernoon.com/5-practical-ways-to-share-code-from-npm-to-lerna-and-bit-732f2a4db512\"><img src=\"https://user-images.githubusercontent.com/35371660/57761183-f216d500-7737-11e9-989f-9664148b5b62.png\" alt=\"10\"></a></p>\n<p><a href=\"https://blog.bitsrc.io/how-to-easily-share-react-components-between-projects-3dd42149c09\"><img src=\"https://user-images.githubusercontent.com/35371660/57761184-f216d500-7737-11e9-9e1b-4080550f48f9.png\" alt=\"11\"></a></p>\n<p><a href=\"https://blog.bitsrc.io/5-tools-for-faster-development-in-react-676f134050f2\"><img src=\"https://user-images.githubusercontent.com/35371660/57761185-f216d500-7737-11e9-89b4-2ff97a4bf754.png\" alt=\"12\"></a></p>","frontmatter":{"id":"ko_20190515","title":"Lodash의 대체재로서의 순수 자바스크립트 함수","description":"이 포스트는 가장 널리 사용되고있는 라이브러리인 Lodash / Underscore.js 의 유틸리티 함수들을 순수 자바스크립트를 통해 어느 정도로 대체해 줄 수 있는지 이해를 돕기 위해 정리된 내용이다.","date":"2019.05.15","author":"한정","tags":["ecmascript","etc"],"thumbnail":"https://user-images.githubusercontent.com/35371660/57760820-4ff6ed00-7737-11e9-8dec-a73c68f3464e.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20190515","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}