{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20180604","result":{"data":{"post":{"html":"<h1 id=\"러스트그리고-모든-언어에서-웹-어셈블리를-더-좋게-만들기\" style=\"position:relative;\"><a href=\"#%EB%9F%AC%EC%8A%A4%ED%8A%B8%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EB%AA%A8%EB%93%A0-%EC%96%B8%EC%96%B4%EC%97%90%EC%84%9C-%EC%9B%B9-%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC%EB%A5%BC-%EB%8D%94-%EC%A2%8B%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"러스트그리고 모든 언어에서 웹 어셈블리를 더 좋게 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>러스트(그리고 모든 언어)에서 웹 어셈블리를 더 좋게 만들기</h1>\n<blockquote>\n<p>원문<br>\nLin Clark, <a href=\"https://hacks.mozilla.org/2018/03/making-webassembly-better-for-rust-for-all-languages/\">https://hacks.mozilla.org/2018/03/making-webassembly-better-for-rust-for-all-languages/</a></p>\n</blockquote>\n<p>러스트(Rust) 커뮤니티의 2018년 최대 목표는 웹 언어가 되는 것이다. 웹 어셈블리(WebAssembly)를 타깃으로 러스트는 자바스크립트처럼 웹에서 실행될 수 있다. 그런데 이것이 무엇을 뜻하는 걸까? 러스트가 자바스크립트를 대체하려는 걸까?</p>\n<p>그 대답은 아니오이다. 우리는 러스트 웹 어셈블리 앱들이 완전히 러스트만으로 작성될 것이라고 생각하지 않는다. 사실, 우리는 대다수의 애플리케이션은 여전히 자바스크립트로 작성될 것이라 생각한다. 러스트 웹 어셈블리 애플리케이션조차 말이다.</p>\n<p>왜냐하면 거의 모든 상황에서 자바스크립트를 선택하는 것이 좋기 때문이다. 자바스크립트는 빠르고 쉽게 실행시킬 수 있다. 게다가, 다양한 문제들을 믿을 수 없이 혁신적인 방식으로 문제를 해결해온 자바스크립트 개발자들의 생생한 생태계가 있다.</p>\n<p><img src=\"https://hacks.mozilla.org/files/2018/03/01_rust_loves_js-500x201.png\" alt=\"img\"></p>\n<p>하지만 종종 러스트 + 웹 어셈블리는 애플리케이션의 어떤 작업을 위한 올바른 도구가 될 수 있다. <a href=\"https://hacks.mozilla.org/2018/01/oxidizing-source-maps-with-rust-and-webassembly/\">소스 맵을 파싱</a> 한다거나, <a href=\"https://www.youtube.com/watch?v=qfnkDyHVJzs&#x26;feature=youtu.be&#x26;t=5880\">엠버(Ember)</a>가 DOM의 변경사항을 찾는 일처럼 말이다.</p>\n<p>그렇기에 러스트 + 웹 어셈블리가 나아가야 할 길은 러스트를 웹 어셈블리로 컴파일 하는 데서 멈추지 않는다. 우리는 웹 어셈블리가 자바스크립트 생태계에 잘 어울리도록 해야 한다. 웹 개발자들은 웹 어셈블리를 자바스크립트인 것 마냥 사용할 수 있어야 한다.</p>\n<p>하지만 아직 웹 어셈블리는 거기까지 준비되지 않았다. 이것을 실현시키기 위해, 우리는 간편하게 웹 어셈블리를 로드시키고, 자바스크립트와 연동시킬 도구를 만들어야 한다. 이 일은 러스트를 위한 일이지만, 웹 어셈블리를 타깃으로 하는 다른 언어들을 위한 것이기도 하다.</p>\n<p><img src=\"https://hacks.mozilla.org/files/2018/03/02_pipeline-500x127.png\" alt=\"img\"></p>\n<p>우리는  웹 어셈블리의 어떤 사용성을 손봐야 할까? 여기 몇 가지를 적었다.</p>\n<ol>\n<li>어떻게 해야 웹 어셈블리와 자바스크립트 사이에 쉽게 오브젝트를 주고받을 수 있을까?</li>\n<li>어떻게 이 패키지를 <a href=\"https://www.npmjs.com/\">npm</a>에 등록할 수 있을까?</li>\n<li>어떻게 개발자들이 번들러, Node 혹은 브라우저를 가리지 않고 쉽게 자바스크립트와 WASM 패키지를 합칠 수 있을까?</li>\n</ol>\n<p>그보다 먼저, 무엇을 우리는 러스트에서 실현시키고 있는가?</p>\n<p>러스트는 자바스크립트 함수를 호출할 수 있게 된다. 자바스크립트도 러스트 함수를 호출할 수 있게 된다. 러스트는 alert 같은 호스트 플랫폼의 함수를 호출할 수 있게 된다. 러스트 크레이트(crate)들은 npm 패키지들을 의존성(dependency)으로 가질 수 있게 된다.  그리고 이 모든 것들을 통해, 러스트와 자바스크립트는 양쪽의 입장에서 적절한 방법으로 오브젝트를 주고받을 수 있어진다.</p>\n<p><img src=\"https://hacks.mozilla.org/files/2018/03/03_crate_graph-500x346.png\" alt=\"img\"></p>\n<p>바로 그것이 우리가 러스트에서 실현 중인 것이다. 이제 우리가 도전 중인 웹 어셈블리의 사용성을 보자.</p>\n<h2 id=\"q-어떻게-해야-웹-어셈블리와-자바스크립트-사이에-쉽게-오브젝트를-주고받을-수-있을까\" style=\"position:relative;\"><a href=\"#q-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%B4%EC%95%BC-%EC%9B%B9-%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC%EC%99%80-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%82%AC%EC%9D%B4%EC%97%90-%EC%89%BD%EA%B2%8C-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8%EB%A5%BC-%EC%A3%BC%EA%B3%A0%EB%B0%9B%EC%9D%84-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"q 어떻게 해야 웹 어셈블리와 자바스크립트 사이에 쉽게 오브젝트를 주고받을 수 있을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 어떻게 해야 웹 어셈블리와 자바스크립트 사이에 쉽게 오브젝트를 주고받을 수 있을까?</h2>\n<p>A. <a href=\"https://github.com/alexcrichton/wasm-bindgen\">wasm-bindgen</a></p>\n<p>웹 어셈블리를 사용할 때 가장 어려운 부분 중 하나는 함수에 다양한 값을 넣고 받아오는 일이다. 왜냐하면 웹 어셈블리는 현재 오로지 정수와 실수 두 가지 타입만을 가지고 있기 때문이다.</p>\n<p>이것은 당신이 그저 웹 어셈블리 함수에 문자열을 던져 실행시킬 수 없다는 뜻이다. 몇 가지 과정을 밟아야만 한다.</p>\n<ol>\n<li>자바스크립트 쪽에서, 문자열을 숫자들로 인코드 (TextEncoder 같은 것을 사용해서)</li>\n</ol>\n<p><img src=\"https://hacks.mozilla.org/files/2018/03/04_wasm_bindgen_01-500x204.png\" alt=\"img\"></p>\n<ol start=\"2\">\n<li>그 숫자들을 웹 어셈블리의 메모리에 (기본적으로 숫자 배열 하나로) 로드.</li>\n</ol>\n<p><img src=\"https://hacks.mozilla.org/files/2018/03/04_wasm_bindgen_02-500x295.png\" alt=\"img\"></p>\n<ol start=\"3\">\n<li>문자열의 첫 글자에 해당하는 배열의 인덱스를 웹 어셈블리 함수에 전달.</li>\n</ol>\n<p><img src=\"https://hacks.mozilla.org/files/2018/03/04_wasm_bindgen_03-500x295.png\" alt=\"img\"></p>\n<ol start=\"4\">\n<li>웹 어셈블리 쪽에서는 숫자들을 가져오기 위해 그 정수를 포인터로 사용.</li>\n</ol>\n<p><img src=\"https://hacks.mozilla.org/files/2018/03/04_wasm_bindgen_04-500x295.png\" alt=\"img\"></p>\n<p>이것으로 여기까지가 문자열을 처리하는데 필요한 일들이다. 만약 여러분이 더 복잡한 타입을 주고받기 위해서는 더 복잡한 과정이 필요하다.</p>\n<p>여러분이 웹 어셈블리 코드를 많이 사용하다 보면, 아마도 이러한 연동에 필요한 코드들을 라이브러리로 추상화하게 될 것이다. 하지만 당신이 애초에 이러한 연동에 필요한 코드를 작성하지 않아도 된다면, 그리고 만일 당신이 복잡한 값들을 그저 언어의 경계를 가로질러 던지는 것만으로 알아서 동작할 수 있다면 좋지 않을까?</p>\n<p>그것이 <code class=\"tui-language-text\">wasm-bindgen</code>이 하는 일이다. 러스트 코드에 몇몇 annotation을 추가하면, wasm-bindgen은 자동으로 양쪽에서 복잡한 타입을 처리하는 코드를 만들어 줄 것이다.</p>\n<p><img src=\"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/03/05_wasm_bindgen_2.png\" alt=\"img\"></p>\n<p>이는 자바스크립트 함수들이 원하는 데이터 타입이 무엇이든 러스트에서 호출한다는 뜻이다:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"tui-language-rust\"><code class=\"tui-language-rust\"><span class=\"token attribute attr-name\">#[wasm_bindgen]</span>\n<span class=\"token keyword\">extern</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">type</span> console<span class=\"token punctuation\">;</span>\n\n    <span class=\"token attribute attr-name\">#[wasm_bindgen(static = console)]</span>\n    <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">log</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token keyword\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"tui-language-rust\"><code class=\"tui-language-rust\"><span class=\"token attribute attr-name\">#[wasm_bindgen]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token namespace\">console<span class=\"token punctuation\">::</span></span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>... 혹은 자바스크립트에서 러스트의 구조체(struct)들을 자바스크립트의 클래스(class)들처럼 사용한다거나:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"tui-language-rust\"><code class=\"tui-language-rust\"><span class=\"token comment\">// Rust</span>\n<span class=\"token attribute attr-name\">#[wasm_bindgen]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">Foo</span> <span class=\"token punctuation\">{</span>\n    contents<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u32</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token attribute attr-name\">#[wasm_bindgen]</span>\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">Foo</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token class-name\">Foo</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Foo</span> <span class=\"token punctuation\">{</span> contents<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"tui-language-rust\"><code class=\"tui-language-rust\">    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">add</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">mut</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> amt<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">u32</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>contents <span class=\"token operator\">+=</span> amt<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>contents\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// JS</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Foo <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./js_hello_world\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> Foo<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">assertEq</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfoo<span class=\"token punctuation\">.</span><span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>... 그리고 기타 등등.</p>\n<p>내부적으로 <code class=\"tui-language-text\">wasm-bindgen</code>은 언어 독립적으로 디자인 되었다. 이는 즉, 이 도구가 안정화되면 C/C++ 같은 다른 언어 구문을 지원하도록 확장할 수 있다는 뜻이다.</p>\n<p>Alex Crichton이 몇 주 이내에 <code class=\"tui-language-text\">wasm-bindgen</code>에 대한 글을 쓸 예정이니 찾아보기 바란다.</p>\n<h2 id=\"q-어떻게-이-패키지를-npm에-등록할-수-있을까\" style=\"position:relative;\"><a href=\"#q-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9D%B4-%ED%8C%A8%ED%82%A4%EC%A7%80%EB%A5%BC-npm%EC%97%90-%EB%93%B1%EB%A1%9D%ED%95%A0-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"q 어떻게 이 패키지를 npm에 등록할 수 있을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 어떻게 이 패키지를 npm에 등록할 수 있을까?</h2>\n<p>A. <a href=\"https://github.com/ashleygwilliams/wasm-pack/\">wasm-pack</a></p>\n<p>일단 할 일들을 마치고 나면, 우리는 몇몇 개의 파일을 손에 쥐고 있을 것이다. 컴파일된 웹 어셈블리 파일이 있고, 의존성과 <code class=\"tui-language-text\">wasm-bindgen</code>이 생성한 자바스크립트 파일들이 있다. 우리는 이것들 모두를 패키지 할  수 있는 방법이 필요하다. 게다가, npm 의존성이 있다면 그것들을 <code class=\"tui-language-text\">package.json</code> manifest 파일에도 추가해야 한다.</p>\n<p><img src=\"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2018/03/06_wasm_pack.png\" alt=\"image\"></p>\n<p>이 역시 자동으로 해결되면 좋을 것이다. 그리고 그것이 바로 <code class=\"tui-language-text\">wasm-pack</code>의 역할이다. 이것은 컴파일 된 웹 어셈블리 파일을 npm 패키지로 만들어주는 만능 도구 같은 것이다.</p>\n<p><code class=\"tui-language-text\">wasm-pack</code>은 여러분 대신 <code class=\"tui-language-text\">wasm-bindgen</code>을 실행한다. 그리고 그 모든 파일들을 패키지로 만들어 준다. 먼저 <code class=\"tui-language-text\">package.json</code>을 생성하고, 러스트 코드를 참조해 npm 의존성을 추가한다. 그 이후 여러분은 <code class=\"tui-language-text\">npm publish</code>만 하면 된다.</p>\n<p>다시 한번 말하자면, 이 도구는 언어 독립적인 기반을 가지고 있다. 그렇기에 우리는 이것이 여러 언어 생태계를 지원할 것으로 기대한다.</p>\n<p>Ashley Williams가 다음 달에 <code class=\"tui-language-text\">wasm-pack</code>의 더 많은 것에 대해 쓸 것이다. 그러니 그것도 참조하시라.</p>\n<h2 id=\"q-어떻게-개발자들이-번들러-node-혹은-브라우저를-가리지-않고-쉽게-자바스크립트와-wasm-패키지를-합칠-수-있을까\" style=\"position:relative;\"><a href=\"#q-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%93%A4%EC%9D%B4-%EB%B2%88%EB%93%A4%EB%9F%AC-node-%ED%98%B9%EC%9D%80-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EB%A5%BC-%EA%B0%80%EB%A6%AC%EC%A7%80-%EC%95%8A%EA%B3%A0-%EC%89%BD%EA%B2%8C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%99%80-wasm-%ED%8C%A8%ED%82%A4%EC%A7%80%EB%A5%BC-%ED%95%A9%EC%B9%A0-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"q 어떻게 개발자들이 번들러 node 혹은 브라우저를 가리지 않고 쉽게 자바스크립트와 wasm 패키지를 합칠 수 있을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 어떻게 개발자들이 번들러, Node 혹은 브라우저를 가리지 않고 쉽게 자바스크립트와 WASM 패키지를 합칠 수 있을까?</h2>\n<p>A. ES modules</p>\n<p>자 이제 우리는 우리 WebAssembly를 npm에 등록했다. 이제 이 웹 어셈블리를 어떻게 자바스크립트 애플리케이션에서 쉽게 사용될 수 있도록 만들까?</p>\n<p>웹 어셈블리 패키지를 의존성으로써 쉽게. 그러니... 자바스크립트의 의존성 그래프에 포함되도록 말이다.</p>\n<p><img src=\"https://hacks.mozilla.org/files/2018/03/02_js_wasm_graph-500x392.png\" alt=\"image\"></p>\n<p>현재, 웹 어셈블리는 모듈을 생성하기 위한 명령형(imperative) 자바스크립트 API 가 있다. 당신은 모든 과정을 위한 코드를 작성해야 한다. 파일을 읽어 오는 것에서부터 의존성을 만들어 내는 것까지. 이것은 어려운 일이다.</p>\n<p>하지만 이제는 브라우저가 네이티브 모듈을 지원하기에, 선언적(declarative) API를 사용할 수 있다. 특히 우린 ES 모듈 API를 사용할 수 있다. 이것을 사용하면 ES 모듈을 사용하듯 웹 어셈블리 모듈 사용이 쉽게 된다.</p>\n<p><img src=\"https://hacks.mozilla.org/files/2018/03/08_import_2-500x27.png\" alt=\"image\"></p>\n<p>우린 이것을 표준화 하기 위해 TC39 그리고 웹 어셈블리 커뮤니티와 같이 일하고 있다.</p>\n<p>그러나 우리가 ES 모듈 지원을 표준으로 할 필요는 없다. Node와 브라우저가 ES 모듈을 지원한다 해도, 개발자들은 여전히 번들러를 사용하고 싶을 것이다. 번들러는 모듈 파일들을 위한 네트워크 횟수를 줄여주기 때문이다. 이는 당신의 코드를 다운로드하는데 걸리는 시간이 적게 걸린다는 뜻이다.</p>\n<p>번들러들은 여러 개의 파일에 흩어져 있는 모듈들을 하나의 파일로 묶고, 이것들을 로드하기 위해 상단에 약간의 런타임을 추가한다.</p>\n<p><img src=\"https://hacks.mozilla.org/files/2018/03/18_bundle_graph_02-500x296.png\" alt=\"image\"></p>\n<p>최소한 얼마간은, 번들러가 모듈들을 만들기 위해서는 여전히 그 자바스크립트 API를 사용해야 한다. 그러나 사용자들은 ES 모듈 문법으로 작성할 것이고, 그들은 그것들이 ES 모듈처럼 동작하리라 기대할 것이다. 우리는 번들러가 ES 모듈을 에뮬레이트 하기 쉽도록 웹 어셈블리에 기능을 추가해야 한다.</p>\n<p>나는 ES 모듈을 웹 어셈블리 스펙에 연동하려는 노력에 대해 더 써보려 한다. 또한 앞으로 몇 달간 번들러와 번들러의 웹 어셈블리 지원을 위해 몰두할 예정이다.</p>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>러스트가 웹 언어로써 유용해지기 위해서는 자바스크립트 생태계와 잘 어울려야 한다. 그러기 위해서 우리는 몇 가지 할 일이 있고, 다행히도 그 일은 다른 언어에게도 도움이 될 것이다. 모든 언어에서 웹 어셈블리를 더 나아지게 만들고 싶은가? 우리 일을 도우시라. 우리도 <a href=\"http://fitzgeraldnick.com/2018/02/27/wasm-domain-working-group.html\">당신이 이 일을 시작할 수 있도록</a> 기꺼이 도울 테니. :)</p>\n<h2 id=\"lin-clark은\" style=\"position:relative;\"><a href=\"#lin-clark%EC%9D%80\" aria-label=\"lin clark은 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://code-cartoons.com/\">Lin Clark</a>은</h2>\n<p>Lin은 Mozilla Developer Relations 팀의 엔지니어이다. 자바스크립트, 웹 어셈블리, 러스트 그리고 Servo를 다루며, 코드 카툰도 그린다.</p>\n<br>\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img alt=\"크리에이티브 커먼즈 라이선스\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" /></a><br />이 저작물은 <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\">크리에이티브 커먼즈 저작자표시-동일조건변경허락 4.0 국제 라이선스</a>에 따라 이용할 수 있습니다.","frontmatter":{"id":"ko_20180604","title":"러스트(그리고 모든 언어)에서 웹 어셈블리를 더 좋게 만들기","description":"러스트(Rust) 커뮤니티의 2018년 최대 목표는 웹 언어가 되는 것이다. 웹 어셈블리(WebAssembly)를 타깃으로 러스트는 자바스크립트처럼 웹에서 실행될 수 있다. 그런데 이것이 무엇을 뜻하는 걸까? 러스트가 자바스크립트를 대체하려는 걸까?","date":"2018.06.04","author":"최규우","tags":["WebAssembly"],"thumbnail":null}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20180604","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}