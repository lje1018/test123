{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20200804","result":{"data":{"post":{"html":"<h1 id=\"vue-3로-마이그레이션하기-위해-준비해야-할-것\" style=\"position:relative;\"><a href=\"#vue-3%EB%A1%9C-%EB%A7%88%EC%9D%B4%EA%B7%B8%EB%A0%88%EC%9D%B4%EC%85%98%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-%EC%A4%80%EB%B9%84%ED%95%B4%EC%95%BC-%ED%95%A0-%EA%B2%83\" aria-label=\"vue 3로 마이그레이션하기 위해 준비해야 할 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue 3로 마이그레이션하기 위해 준비해야 할 것</h1>\n<blockquote>\n<p>원문: Albert Mulia Shintra, <a href=\"https://dev.to/chenxeed/be-prepared-to-migrate-your-vue-app-to-vue-3-eom\">https://dev.to/chenxeed/be-prepared-to-migrate-your-vue-app-to-vue-3-eom</a></p>\n</blockquote>\n<p>필자는 이 글에서 Vue 3 베타 버전을 사용한 경험, 특히 Vue 3로 마이그레이션할 때 주의해야 할 점을 얘기하고자 한다. 만약 이미 Vue 2로 개발된 앱을 Vue 3로 업그레이드할 예정이라면 이 글이 유용할 것이다.</p>\n<p>아래의 목록은 성공적으로 Vue 3로 옮기는 데 많은 도움을 줄 것이며, Vue 2와는 달리 Vue 3에서는 문제를 일으키는 케이스를 피하는 데 도움을 줄 것이다.</p>\n<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--34HbZyzE--/c_limit,f_auto,fl_progressive,q_auto,w_880/https://pics.me.me/lets-get-it-on-memegenerator-net-lets-get-it-on-53147989.png\" alt=\"Let&#x27;s get it on!\"></p>\n<h2 id=\"vue-이벤트-버스-사용을-피한다\" style=\"position:relative;\"><a href=\"#vue-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%B2%84%EC%8A%A4-%EC%82%AC%EC%9A%A9%EC%9D%84-%ED%94%BC%ED%95%9C%EB%8B%A4\" aria-label=\"vue 이벤트 버스 사용을 피한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue 이벤트 버스 사용을 피한다.</h2>\n<h5 id=\"vue-3에서-사라진-on--once--off-api를-사용하지-않는다\" style=\"position:relative;\"><a href=\"#vue-3%EC%97%90%EC%84%9C-%EC%82%AC%EB%9D%BC%EC%A7%84-on--once--off-api%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94%EB%8B%A4\" aria-label=\"vue 3에서 사라진 on  once  off api를 사용하지 않는다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue 3에서 사라진 <code class=\"tui-language-text\">$on</code> / <code class=\"tui-language-text\">$once</code> / <code class=\"tui-language-text\">$off</code> API를 사용하지 않는다.</h5>\n<p>이벤트 버스는 자식에서 부모로, 또는 그 반대로 이벤트를 손쉽게 발생시키기 위해 사용하는 것으로, Vue로 개발할 때 흔히 들어본 용어일 것이다. 인터넷에 \"vue event bus\"를 검색해보면 이를 설명하는 수많은 글을 찾을 수 있을 것이다.</p>\n<p>한 가지 알아둘 점은, <strong>이것은 Vue가 추천하는 공식적인 방법이 아니다 🤯.</strong> 필자가 이를 말하는 이유는 Vue 공식 문서에서 이벤트 버스를 단 한 번도 언급하지 않았기 때문이다. 가장 관련 있는 문서는 \"이벤트 허브(eventHub)\"에 대한 내용이 있는 <a href=\"https://vuejs.org/v2/guide/migration.html#dispatch-and-broadcast-replaced\">Vue 1.x에서 마이그레이션</a>으로, Vuex를 쓰는 것을 추천한다.</p>\n<blockquote>\n<p>이 패턴은 단순한 시나리오에서 <code class=\"tui-language-text\">$dispatch</code>와 <code class=\"tui-language-text\">$broadcast</code>를 대체 할 수 있지만, 더 복잡한 경우에는 Vuex와 같은 전용 상태 관리 레이어를 사용하는 것이 좋다.</p>\n</blockquote>\n<p>또한 <a href=\"https://github.com/vuejs/rfcs/blob/master/active-rfcs/0020-events-api-change.md\">RFC 문서</a>에서 왜 Vue에서 이를 추천하지 않는지 확인할 수 있다.</p>\n<p>이벤트 버스 개념이 프로그래밍에서 흔히 쓰이는 발행-구독(publish-subscribe) 패턴이기 때문에 아직은 <a href=\"https://github.com/developit/mitt\">mitt</a>와 같은 다른 라이브러리를 이용하여 이 개념을 사용해도 무관하다. 😉</p>\n<p>아래는 이벤트 버스의 리팩토링 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 이벤트 버스 예시 (Vue 2)</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> eventBus <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 구독</span>\neventBus<span class=\"token punctuation\">.</span><span class=\"token function\">$on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sandwich-made'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sandwich made!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 발행</span>\neventBus<span class=\"token punctuation\">.</span><span class=\"token function\">$emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sandwich-made'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 써드 파티 라이브러리(ex. mitt)를 사용하여 리팩토링</span>\n<span class=\"token keyword\">import</span> mitt <span class=\"token keyword\">from</span> <span class=\"token string\">'mitt'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> eventBus <span class=\"token operator\">=</span> <span class=\"token function\">mitt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 구독</span>\neventBus<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sandwich-made'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sandwich made!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 발행</span>\neventBus<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sandwich-made'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"필터-함수를-메서드로-리팩토링한다\" style=\"position:relative;\"><a href=\"#%ED%95%84%ED%84%B0-%ED%95%A8%EC%88%98%EB%A5%BC-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A1%9C-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81%ED%95%9C%EB%8B%A4\" aria-label=\"필터 함수를 메서드로 리팩토링한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>필터 함수를 메서드로 리팩토링한다.</h2>\n<p><a href=\"https://github.com/vuejs/rfcs/blob/master/active-rfcs/0015-remove-filters.md\">RFC 문서</a>에 따르면 필터는 제거될 예정이라고 한다.</p>\n<p>필터는 값을 특정 형식으로 바꿔주는 것을 도와준다. 예를 들어 대문자로 만든다거나, 통화 기호를 덧붙이거나, 짧은 URL로 만드는 것이다. 아마 필터는 <a href=\"https://docs.angularjs.org/api/ng/filter/filter\">Angular의 필터</a>에 영향을 받았을 것으로 추측된다. 필터는 템플릿 문법 안에서 사용할 수 있기 때문에 가독성이 좋다. 아래는 숫자 값을 통화 형식으로 바꾸어주는 <code class=\"tui-language-text\">toCurrency</code> 필터를 사용한 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>currency<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ price | toCurrency }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><em><code class=\"tui-language-text\">price</code>가 25라면 <code class=\"tui-language-text\">toCurrency</code> 필터가 적용된 결과는 $25.00이다.</em></p>\n<p>필터는 사용하기 편리하지만 \"구문 설탕(syntax sugar)\"임을 명심해야 한다. Vue는 런타임에서 업데이트될 때마다 가격을 통화 형식으로 바꾸기 위해 항상 <code class=\"tui-language-text\">toCurrency</code>를 실행한다.</p>\n<p>만약 <code class=\"tui-language-text\">toCurrency</code> 필터를 <code class=\"tui-language-text\">method</code>로 변경한다면, 아래처럼 쓸 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>currency<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ toCurrency(price) }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Vue 스크립트에서 리팩토링하는 방법은 단순히 함수를 <code class=\"tui-language-text\">filter</code>에서 <code class=\"tui-language-text\">method</code>로 옮기기만 하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 전: filter 사용</span>\n<span class=\"token punctuation\">{</span>\n  filter<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">toCurrency</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">$</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 후: method 사용</span>\n<span class=\"token punctuation\">{</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">toCurrency</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">$</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>만약 <code class=\"tui-language-text\">filter</code>가 글로벌 필터인 경우에는 어떻게 해야 할까?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 글로벌 필터</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toCurrency'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">$</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 경우, 필자는 글로벌 필터 코드를 제거하고 순수한 헬퍼(helper) 함수로 만드는 것을 추천한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// helper/filter.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">toCurrency</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">$</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그리고 헬퍼 함수를 필요한 컴포넌트에 가져와서 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// price-component.vue</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> toCurrency <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./helper/filter'</span>\n\n<span class=\"token comment\">// Vue 컴포넌트</span>\n<span class=\"token punctuation\">{</span>\n  methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    toCurrency \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><em><a href=\"https://alligator.io/js/object-property-shorthand-es6/\">ES6 객체 프로퍼티 단축</a> 덕분에 그냥 <code class=\"tui-language-text\">toCurrency</code>만 정의해도 정상적으로 동작한다.</em></p>\n<h2 id=\"커스텀-컴포넌트의-model을-sync로-리팩토링한다\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%9D%98-model%EC%9D%84-sync%EB%A1%9C-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81%ED%95%9C%EB%8B%A4\" aria-label=\"커스텀 컴포넌트의 model을 sync로 리팩토링한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커스텀 컴포넌트의 <code class=\"tui-language-text\">model</code>을 <code class=\"tui-language-text\">.sync</code>로 리팩토링한다.</h2>\n<p><a href=\"https://github.com/vuejs/rfcs/blob/master/active-rfcs/0011-v-model-api-change.md\">RFC 문서</a>에 따르면 Vue 3는 Vue 컴포넌트에서 <code class=\"tui-language-text\">model</code> 옵션이 없어지고, <code class=\"tui-language-text\">sync</code>를 사용하지 않아도 <code class=\"tui-language-text\">v-model</code>을 여러 개 정의할 수 있다. <em>(역자: Vue 2에서는 양방향 바인딩을 위해 오직 하나의 <code class=\"tui-language-text\">v-model</code>만 정의할 수 있다. 그래서 대안책으로 <code class=\"tui-language-text\">.sync</code>를 사용하였으나, Vue 3에서는 <code class=\"tui-language-text\">v-model</code>을 여러 번 정의할 수 있다.)</em></p>\n<p>양방향 데이터 바인딩을 위해 사용했던 <code class=\"tui-language-text\">model</code> 옵션을 <code class=\"tui-language-text\">.sync</code>로 변경한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\">// 전\n\n// 부모 component\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child-component</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visible<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\n// 자식 component의 model 옵션\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token punctuation\">{</span>\n  model<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    prop<span class=\"token operator\">:</span> <span class=\"token string\">'visible'</span><span class=\"token punctuation\">,</span>\n    event<span class=\"token operator\">:</span> <span class=\"token string\">'change'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\">// 후\n\n// 부모 component\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child-component</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>visible.sync</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visible<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\n// 자식 component에서 model 옵션을 제거한다.</code></pre></div>\n<p>추후 Vue 3로 업그레이드할 때, <code class=\"tui-language-text\">.sync</code>를 <code class=\"tui-language-text\">v-model</code>로 변경하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\">// Vue 3\n\n// 부모 component\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>child-component</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-model:</span>visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visible<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>빠르고 쉽게 리팩토링을 할 수 있다! 😋</p>\n<h2 id=\"써드-파티-플러그인-사용을-주의한다\" style=\"position:relative;\"><a href=\"#%EC%8D%A8%EB%93%9C-%ED%8C%8C%ED%8B%B0-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%A3%BC%EC%9D%98%ED%95%9C%EB%8B%A4\" aria-label=\"써드 파티 플러그인 사용을 주의한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>써드 파티 플러그인 사용을 주의한다.</h2>\n<p>다른 프레임워크처럼 Vue는 사용자가 자신만의 플러그인을 만들 수 있도록 API를 제공한다.</p>\n<p>하지만 Vue 3의 변화로 인해 특정 플러그인은 더는 Vue 3에서 호환이 되지 않을 예정이다. 주요 변경 사항 중 하나는 플러그인의 설치와 앱 초기화를 Vue 인스턴스에서 할 수 없다는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 전: Vue 2</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>myPlugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Vue 초기화 */</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 후: Vue 3</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Vue 초기화를 위한 새로운 메서드</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>myPlugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </code></pre></div>\n<p>이러한 변경으로 인해 사용자는 자신의 코드를 수정하더라도 플러그인 개발자가 업그레이드하기 전까지 Vue 3에서 해당 플러그인을 사용할 수 없다. 이는 써드 파티 플러그인이 Vue 3로 마이그레이션하는데 큰 걸림돌이 될 수 있으므로 써드 파티 플러그인 사용을 주의해야 한다는 뜻이다.</p>\n<p>사용하고 있는 플러그인의 이슈나 로드맵에서 Vue 3에서 사용할 수 있도록 업그레이드가 예정되어 있는지 확인하자. 아래는 Vue 3 지원을 할 예정이라고 언급한 플러그인이다.</p>\n<ul>\n<li><a href=\"https://github.com/bootstrap-vue/bootstrap-vue/issues/5196\">Bootstrap Vue</a></li>\n<li><a href=\"https://github.com/shentao/vue-multiselect/issues/1291\">Vue Multiselect</a></li>\n<li><a href=\"https://vuetifyjs.com/en/introduction/roadmap/\">Vuetify</a></li>\n</ul>\n<p>만약 사용하고 있는 플러그인에서 Vue 3를 지원할 계획이 없다면, 이슈를 등록하여 Vue 3를 지원해달라고 요청하거나 플러그인 개발자를 도와 기여를 하는 방법도 있다. 🤗</p>\n<h2 id=\"컴포넌트를-작성할-때-vuecomposition-api를-사용한다\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%A0-%EB%95%8C-vuecomposition-api%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C%EB%8B%A4\" aria-label=\"컴포넌트를 작성할 때 vuecomposition api를 사용한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포넌트를 작성할 때 <code class=\"tui-language-text\">@vue/composition-api</code>를 사용한다.</h2>\n<p>필자는 <code class=\"tui-language-text\">@vue/composition-api</code>를 제공해준 Vue 커뮤니티에 매우 감사한다 🥰. <code class=\"tui-language-text\">@vue/composition-api</code>는 개발자들에게 <a href=\"https://composition-api.vuejs.org/\">컴포지션(Composition) API</a>를 손쉽게 사용할 수 있게 해주고, Vue 3의 핵심 메서드가 될 API도 제공한다.</p>\n<p>한 가지 예로 <code class=\"tui-language-text\">defineComponent</code>가 있다. <code class=\"tui-language-text\">defineComponent</code>는 Vue 3에서 Vue 컴포넌트를 작성할 새로운 기준이 될 것이며 Vue 2 앱에서 이미 사용해볼 수도 있다!</p>\n<p><code class=\"tui-language-text\">@vue/composition-api</code>를 설치하고 <code class=\"tui-language-text\">defineComponent</code>를 이용하여 Vue 컴포넌트를 초기화하도록 변경한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 전</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Vue<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'my-component'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">/* props, data, methods, ... */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 후</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@vue/composition-api'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'my-component'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">/* your component props, data, methods, etc. */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>사실상 쓰는데는 거의 차이가 없다! Vue 컴포넌트는 이전과 동일하게 동작하며 심지어 컴포지션 API를 이용하여 리팩토링할 수 있는 \"보너스\"를 얻었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// setup()을 이용한 리팩토링</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> defineComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@vue/composition-api'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'my-component'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* props, data, methods, ... */</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>만약 TypeScript를 사랑한다면 컴포지션 API 역시 사랑하게 될 것이다. 컴포지션 API는 <a href=\"https://dev.to/chenxeed/consider-vue-composition-api-to-improve-the-code-quality-31ne\">컴포넌트를 작성하는 환경을 개선해주기 때문</a>이다. ;)</em></p>\n<h2 id=\"그-밖에\" style=\"position:relative;\"><a href=\"#%EA%B7%B8-%EB%B0%96%EC%97%90\" aria-label=\"그 밖에 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그 밖에</h2>\n<p>아래는 또 다른 주요한 변화이다.</p>\n<ul>\n<li><a href=\"https://github.com/vuejs/rfcs/blob/master/active-rfcs/0008-render-function-api-change.md\">렌더 함수 API 변경</a></li>\n<li><a href=\"https://github.com/vuejs/rfcs/blob/master/active-rfcs/0006-slots-unification.md\">범위가 있는 슬롯(scoped slot)과 일반 슬롯(slot)의 통합</a></li>\n<li><a href=\"https://github.com/vuejs/rfcs/blob/master/active-rfcs/0014-drop-keycode-support.md\">keyCode 수식어(modifier) 제거</a></li>\n<li><a href=\"https://github.com/vuejs/rfcs/blob/master/active-rfcs/0016-remove-inline-templates.md\">인라인 템플릿 제거</a></li>\n</ul>\n<p>하지만 만약 이런 코드를 많이 사용하지 않았거나, 리팩토링이 쉬우리라 생각되면 Vue 3로 업그레이드 해보는 것도 좋을 것이다. 결정은 당신에게 달렸다.</p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sXHnGMdo--/c_limit,f_auto,fl_progressive,q_auto,w_880/https://image.shutterstock.com/image-vector/illustration-phew-sound-kid-boy-260nw-1438891808.jpg\" alt=\"phew\"></p>\n<p>휴! 필자는 이 글이 Vue 3로 업그레이드할 준비를 하는 데 도움이 되었으면 한다. Vue 3에서는 반응형을 조작할 수 있는 발전된 API를 사용할 수 있고, TypeScript 지원이 개선되었으며, <a href=\"https://dev.to/chenxeed/awesome-breaking-changes-in-vue-3-if-you-migrate-from-vue-2-3b98\">더 나은 방법</a>으로 개발할 수 있다. 필자는 Vue 개발자로서 Vue 3로 업그레이드할 날이 얼른 다가오기를 기대하고 있다.</p>\n<p>만약 필자가 API나 설명을 빠뜨렸다면 피드백을 주시길 부탁한다. 필자는 독자들의 피드백에 언제나 감사한다.</p>","frontmatter":{"id":"ko_20200804","title":"Vue 3로 마이그레이션하기 위해 준비해야 할 것","description":"필자는 이 글에서 Vue 3 베타 버전을 사용한 경험, 특히 Vue 3로 마이그레이션할 때 주의해야 할 점을 얘기하고자 한다. 만약 이미 Vue 2로 개발된 앱을 Vue 3로 업그레이드할 예정이라면 이 글이 유용할 것이다. 아래의 목록은 성공적으로 Vue 3로 옮기는 데 많은 도움을 줄 것이며, Vue 2와는 달리 Vue 3에서는 문제를 일으키는 케이스를 피하는 데 도움을 줄 것이다.","date":"2020.08.04","author":"곽희나","tags":["VueJs"],"thumbnail":"https://user-images.githubusercontent.com/8615506/89367183-5e9e3b00-d713-11ea-9f16-06f35bf9b8d3.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20200804","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}