{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20190620","result":{"data":{"post":{"html":"<h1 id=\"toast-ui-grid-40\" style=\"position:relative;\"><a href=\"#toast-ui-grid-40\" aria-label=\"toast ui grid 40 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎉TOAST UI Grid 4.0🎉</h1>\n<p>TOAST UI Grid는 여러분의 데이터를 효과적으로 표현하고, 편리한 사용성을 제공하기 위해 많은 노력을 해왔습니다. TOAST UI Grid 4.0은 더 빠르고, 가벼우면서 사용하기 편리한 제품을 제공하는 것을 목표로 올해 초부터 시작되었습니다. 의존성 제거, 가상 DOM을 통한 성능 향상, API 개선을 목표로 대대적인 작업을 진행하였고, 마침내 <strong>더 강력하고 가벼워진 TOAST UI Grid 4.0</strong>을 선보이게 되었습니다.</p>\n<p><code class=\"tui-language-text\">v4.0</code>에 어떤 변화가 있는지 아래 내용에서 확인해 보세요!</p>\n<h2 id=\"️feature\" style=\"position:relative;\"><a href=\"#%EF%B8%8Ffeature\" aria-label=\"️feature permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⭐️Feature</h2>\n<p>TOAST UI Grid 4.0에서 제공하는 핵심 기능들을 정리해보았습니다. 업데이트 내용을 보기 전에 확인해보세요!</p>\n<ul>\n<li>빠른 가상 스크롤 성능</li>\n<li>다양한 입력 형식 지원</li>\n<li>키보드 입력 완벽 지원</li>\n<li>컬럼 간 관계 지정</li>\n<li>트리 데이터</li>\n</ul>\n<p>더 자세한 내용은 <a href=\"https://github.com/nhn/tui.grid#-features\">Github</a>을 참고해주세요.</p>\n<h2 id=\"whats-updated\" style=\"position:relative;\"><a href=\"#whats-updated\" aria-label=\"whats updated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌈What's updated?</h2>\n<h3 id=\"경량화-no-dependency\" style=\"position:relative;\"><a href=\"#%EA%B2%BD%EB%9F%89%ED%99%94-no-dependency\" aria-label=\"경량화 no dependency permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>경량화, No Dependency</h3>\n<p>TOAST UI Grid 4.0은 Backbone과 jQuery로 작성된 기존의 코드를 모두 버리고 <a href=\"https://preactjs.com/\">Preact</a>와 <strong>직접 구현한 반응형 시스템</strong>을 이용하여 처음부터 새롭게 작성되었습니다. 결과적으로 이 두 가지 기술을 도입함으로써, 전체 번들 파일의 용량은 <strong>327KB에서 154KB로 50% 이상 경량화</strong>되었고, 코드는 훨씬 간결해졌습니다.</p>\n<p>아래는 타사 Grid들의 minified 번들 파일 용량과 비교한 차트입니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/37766175/59487241-096fec00-8eb7-11e9-9a76-6b9febe8a0bc.png\" alt=\"image\"></p>\n<p>Grid는 데이터를 다루기 위한 다양한 기능을 제공하기 때문에 보통 용량이 큰 편입니다. 하지만 TOAST UI Grid 4.0은 차트에 나타난 것처럼 <strong>어떠한 의존성도 없고 굉장히 가볍습니다.</strong> 이 의미는 웹 페이지의 로딩 속도 저하 없이 Grid의 핵심 기능을 사용할 수 있다는 의미이기도 합니다. <strong>가볍고 강력한 TOAST UI Grid 4.0</strong> 매력적이지 않나요?</p>\n<h3 id=\"typescript\" style=\"position:relative;\"><a href=\"#typescript\" aria-label=\"typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript</h3>\n<p>TOAST UI Grid 4.0은 <strong>TypeScript</strong>로 개발되었습니다. 유연한 타입 추론을 통해 안정성을 확보할 수 있었고, 가독성도 높일 수 있었습니다. 컨트리뷰터가 되고 싶은 개발자들은 타입을 통해 더 쉽게 <a href=\"https://github.com/nhn/tui.grid\">TOAST UI Grid</a>에 적응할 수 있습니다! 적극적인 공헌과 PR은 언제든지 환영합니다 :) </p>\n<h3 id=\"커스텀-에디터--커스텀-렌더러\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%97%90%EB%94%94%ED%84%B0--%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%A0%8C%EB%8D%94%EB%9F%AC\" aria-label=\"커스텀 에디터  커스텀 렌더러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커스텀 에디터 / 커스텀 렌더러</h3>\n<p>TOAST UI Grid 4.0에서는 커스텀 에디터와 커스텀 렌더러를 추가하여, 나만의 포맷을 적용할 수 있도록 확장 기능을 제공합니다. 아래 예시의 슬라이더나 컬러피커처럼 원하는 포맷으로 데이터 표현이 가능합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/37766175/59417111-9e181280-8e01-11e9-8de7-2df819b36354.png\" alt=\"image\"></p>\n<p>커스텀 렌더러의 사용 방법은 다음과 같습니다.</p>\n<p><code class=\"tui-language-text\">MyColorRenderer</code> class 처럼 <code class=\"tui-language-text\">CellRenderer</code> 포맷에 맞춰서 생성자 함수와 메서드를 정의하면 끝입니다. 정말 간단하죠?\n(<em>class가 지원되지 않는 환경에서는 function과 prototype을 이용하여 작성하면 됩니다.</em>)</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"tui-language-ts\"><code class=\"tui-language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">CellRenderer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">getElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">;</span>\n  focused<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  mounted<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>parent<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>props<span class=\"token operator\">:</span> CellRendererProps<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  beforeDestroy<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyColorRenderer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> grid<span class=\"token punctuation\">,</span> rowKey<span class=\"token punctuation\">,</span> columnInfo <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n\n    el<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">'color'</span><span class=\"token punctuation\">;</span>\n    el<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      grid<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>rowKey<span class=\"token punctuation\">,</span> columnInfo<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> el<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그리고 작성한 커스텀 렌더러를 <code class=\"tui-language-text\">renderer</code> 옵션 객체에 <code class=\"tui-language-text\">type</code>으로 지정하면 TOAST UI Grid에 적용되어 렌더링되는 것을 보실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> grid <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Grid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  columns<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'genre'</span><span class=\"token punctuation\">,</span>\n      renderer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> MyColorRenderer<span class=\"token punctuation\">,</span>\n        options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          myColorRendererOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n             <span class=\"token comment\">// ...</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>기존 <code class=\"tui-language-text\">text</code>, <code class=\"tui-language-text\">password</code>, <code class=\"tui-language-text\">checkbox</code>, <code class=\"tui-language-text\">radio</code>, <code class=\"tui-language-text\">select</code> 에디터 포맷들과 디폴트 렌더러도 동일하게 제공되니, 상황에 맞게 조합하면 데이터를 효과적으로 표현할 수 있습니다!</p>\n<p>더 자세한 내용을 보고 싶다면 <a href=\"https://github.com/nhn/tui.grid/blob/master/docs/v4.0-migration-guide-kor.md\">마이그레이션 가이드</a>를 참조해주세요.</p>\n<h3 id=\"편리한-백엔드-api-연동-datasource\" style=\"position:relative;\"><a href=\"#%ED%8E%B8%EB%A6%AC%ED%95%9C-%EB%B0%B1%EC%97%94%EB%93%9C-api-%EC%97%B0%EB%8F%99-datasource\" aria-label=\"편리한 백엔드 api 연동 datasource permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>편리한 백엔드 API 연동, DataSource</h3>\n<p>TOAST UI Grid 4.0에는 <code class=\"tui-language-text\">DataSource</code>라는 개념이 추가되었습니다. 백엔드 API와 통신을 위한 기존의 Net을 완전히 대체하는 개념이며, 내부적으로 데이터의 추가, 수정, 삭제를 보다 효율적으로 처리합니다. 또한 사용법과 API들도 더 직관적으로 개편되었습니다.</p>\n<p>아래 예시처럼 <code class=\"tui-language-text\">v3.0</code>에서는 <code class=\"tui-language-text\">data</code> 옵션이 비어있는 그리드 인스턴스를 생성한 후, <code class=\"tui-language-text\">use</code> 메소드를 이용하여 Net에 관련된 옵션들을 설정해주었습니다. 한 번에 할 수 있는 과정을 두 번에 나눠하다보니 번거로운 부분이 있었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// v3.0</span>\n<span class=\"token keyword\">var</span> grid <span class=\"token operator\">=</span>  <span class=\"token keyword\">new</span> <span class=\"token class-name\">tui<span class=\"token punctuation\">.</span>Grid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  columns<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngrid<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Net'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  withCredentials<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  api<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      readData<span class=\"token operator\">:</span> <span class=\"token string\">'./api/read'</span><span class=\"token punctuation\">,</span>\n      createData<span class=\"token operator\">:</span> <span class=\"token string\">'./api/create'</span><span class=\"token punctuation\">,</span>\n      updateData<span class=\"token operator\">:</span> <span class=\"token string\">'./api/update'</span><span class=\"token punctuation\">,</span>\n      deleteData<span class=\"token operator\">:</span> <span class=\"token string\">'./api/delete'</span><span class=\"token punctuation\">,</span>\n      modifyData<span class=\"token operator\">:</span> <span class=\"token string\">'./api/modify'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p> <code class=\"tui-language-text\">v4.0</code>에서는 별도의 API 호출 없이 <code class=\"tui-language-text\">data</code> 옵션에 <code class=\"tui-language-text\">dataSource</code> 객체를 정의하여 넣어주기만 하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// v4.0</span>\n<span class=\"token keyword\">var</span> dataSource <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  withCredentials<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>  \n  initialRequest<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  api<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      readData<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'/api/read'</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      createData<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'/api/create'</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      updateData<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'/api/update'</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">:</span> <span class=\"token string\">'PUT'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      deleteData<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'/api/delete'</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">:</span> <span class=\"token string\">'DELETE'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      modifyData<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'/api/modify'</span><span class=\"token punctuation\">,</span> method<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n  \n<span class=\"token keyword\">var</span> grid <span class=\"token operator\">=</span>  <span class=\"token keyword\">new</span> <span class=\"token class-name\">tui<span class=\"token punctuation\">.</span>Grid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  data<span class=\"token operator\">:</span> dataSource<span class=\"token punctuation\">,</span>\n  columns<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'name'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이외에도 <code class=\"tui-language-text\">DataSoure</code>의 다른 옵션들과 API들도 간단 명료하게 개편되었습니다. 자세한 내용은 <a href=\"https://github.com/nhn/tui.grid/blob/master/docs/v4.0-migration-guide-kor.md\">마이그레이션 가이드</a>를 참조해주세요.</p>\n<h3 id=\"컬럼-가상-스크롤\" style=\"position:relative;\"><a href=\"#%EC%BB%AC%EB%9F%BC-%EA%B0%80%EC%83%81-%EC%8A%A4%ED%81%AC%EB%A1%A4\" aria-label=\"컬럼 가상 스크롤 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컬럼 가상 스크롤</h3>\n<p>TOAST UI Grid 4.0은 로우 단위 가상 스크롤뿐만 아니라, 컬럼 단위 가상 스크롤도 적용하였습니다. 이제 TOAST UI Grid와 함께라면 컬럼 수에 제약받지 않고 부드럽게 스크롤할 수 있습니다. 부드럽고 빠른 로우, 컬럼 스크롤을 경험해 보세요!</p>\n<p><img src=\"https://user-images.githubusercontent.com/37766175/59567027-cd997a00-90a2-11e9-909a-7315db7937c4.gif\" alt=\"6월-17-2019 01-53-43\"></p>\n<h2 id=\"️whats-next\" style=\"position:relative;\"><a href=\"#%EF%B8%8Fwhats-next\" aria-label=\"️whats next permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>☀️What's next?</h2>\n<p>다음은 TOAST UI Grid를 더 알차게 만들어 줄 신규 기능들의 릴리즈 일정입니다.</p>\n<ul>\n<li>모바일 지원(7월)</li>\n<li>필터링(7월)</li>\n<li>다중 컬럼 정렬(8월)</li>\n<li>컬럼, 셀 컨텍스트 메뉴(8월)</li>\n<li>클라이언트 페이지네이션(8월)</li>\n</ul>\n<h2 id=\"migration-guide\" style=\"position:relative;\"><a href=\"#migration-guide\" aria-label=\"migration guide permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍀Migration Guide</h2>\n<p>TOAST UI Grid <code class=\"tui-language-text\">v3.x</code>에서 <code class=\"tui-language-text\">v4.0</code>으로 업데이트를 원한다면 친절한 <a href=\"https://github.com/nhn/tui.grid/blob/master/docs/v4.0-migration-guide-kor.md\">마이그레이션 가이드</a>가 준비되어 있으니 참고해주세요:)</p>\n<h2 id=\"3000만큼-사랑하는-toast-ui-grid\" style=\"position:relative;\"><a href=\"#3000%EB%A7%8C%ED%81%BC-%EC%82%AC%EB%9E%91%ED%95%98%EB%8A%94-toast-ui-grid\" aria-label=\"3000만큼 사랑하는 toast ui grid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🚀3000만큼 사랑하는 TOAST UI Grid</h2>\n<p>TOAST UI Grid는 <code class=\"tui-language-text\">v4.0</code>출시로 구조와 기능적인 면에서 많은 부분이 진보되었습니다. 그리고 <a href=\"https://github.com/nhn/tui.grid/releases\">릴리즈 노트</a>에서 확인할 수 있듯이 계속 꾸준한 업데이트를 진행할 예정입니다. 기능에 대한 적극적인 의견 제시나 피드백은 언제든지 환영입니다. TOAST UI Grid의 <a href=\"https://github.com/nhn/tui.grid\">Github</a>은 언제나 열려 있습니다! 앞으로도 기대해주세요 :)</p>","frontmatter":{"id":"ko_20190620","title":"더 가볍고 강력해진 TOAST UI Grid v4.0을 만나보세요!","description":"TOAST UI Grid는 여러분의 데이터를 효과적으로 표현하고, 편리한 사용성을 제공하기 위해 많은 노력을 해왔습니다. TOAST UI Grid 4.0은 더 빠르고, 가벼우면서 사용하기 편리한 제품을 제공하는 것을 목표로 올해 초부터 시작되었습니다. 의존성 제거, 가상 DOM을 통한 성능 향상, API 개선을 목표로 대대적인 작업을 진행하였고, 마침내 더 강력하고 가벼워진 TOAST UI Grid 4.0을 선보이게 되었습니다.","date":"2019.06.20","author":"이재성","tags":["opensource","typescript"],"thumbnail":"https://user-images.githubusercontent.com/37766175/59903817-ead09e80-943c-11e9-89dc-d9c5adbf5396.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20190620","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}