{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20160613","result":{"data":{"post":{"html":"<h1 id=\"순수-함수로-만드세요\" style=\"position:relative;\"><a href=\"#%EC%88%9C%EC%88%98-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%A7%8C%EB%93%9C%EC%84%B8%EC%9A%94\" aria-label=\"순수 함수로 만드세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>순수 함수로 만드세요!</h1>\n<blockquote>\n<p>원문<br>\nJack Franklin, <a href=\"https://alistapart.com/article/making-your-javascript-pure/\">https://alistapart.com/article/making-your-javascript-pure/</a><br><br>\n해당 글은 <a href=\"https://alistapart.com/\">A List Apart</a>와 Jack Franklin의 허락을 받아 번역하였습니다.<br>\nTranslated with the permission of <a href=\"https://alistapart.com/\">A List Apart</a> and Jack Franklin.</p>\n</blockquote>\n<p>웹사이트나 애플리케이션의 코드 줄 수가 증가하면 필연적으로 버그가 생긴다. 자바스크립트 뿐만 아니라 모든 언어가 버그 없이 무언가를 만드는것은 매우 어렵고, 불가능하다. 하지만 그것이 버그를 생기지 않도록 주의조차 할 수 없는 것을 의미하는 것은 아니다.</p>\n<h3 id=\"순수-함수와-비순수-함수\" style=\"position:relative;\"><a href=\"#%EC%88%9C%EC%88%98-%ED%95%A8%EC%88%98%EC%99%80-%EB%B9%84%EC%88%9C%EC%88%98-%ED%95%A8%EC%88%98\" aria-label=\"순수 함수와 비순수 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>순수 함수와 비순수 함수</h3>\n<p>순수함수는 외부 스코프의 변수 값에 영향을 받지 않는 함수다. 설명이 조금 모호한데 실제 코드를 보며 설명하겠다.</p>\n<p>마우스 이벤트를 받아 페이지를 세로로 2등분했을 때 왼쪽 영역인지를 감지하는 함수가 있다. 왼쪽이면 <code class=\"tui-language-text\">true</code>를, 오른쪽이면 <code class=\"tui-language-text\">false</code>를 반환한다. 실무 코드는 예제보다 조금 더 복잡하겠지만, 순수, 비순수 함수를 설명하기에 적합하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">mouseOnLeftSide</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mouseX</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> mouseX <span class=\"token operator\">&lt;</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmousemove</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">mouseOnLeftSide</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"tui-language-text\">mouseOnLeftSide</code>는 x좌표를 받아 윈도우를 세로로 2등분 했을 때 좌측 영역에 포함되는지를 확인한다. 하지만, <code class=\"tui-language-text\">mouseOnLeftSide()</code> 는 순수 함수가 아니다. 함수의 코드를 보면 내부에서 명시적으로 전달하지 않은 값을 참조하는 것을 알 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">return</span> mouseX <span class=\"token operator\">&lt;</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>함수를 실행할 때 <code class=\"tui-language-text\">mouseX</code>는 전달된 값이지만 <code class=\"tui-language-text\">window.innerWidth</code>는 그렇지 않다. 이 함수는 외부의 값을 참조하고 있다. 따라서 순수 함수가 아니다.</p>\n<h3 id=\"비순수-함수의-문제점\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%88%9C%EC%88%98-%ED%95%A8%EC%88%98%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"비순수 함수의 문제점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비순수 함수의 문제점</h3>\n<p>어떤 함수가 비순수 함수인 것이 왜 문제일까?</p>\n<p>윈도우의 가로 너비가 500 픽셀 이하일 때 함수가 정확하지 않다는 버그를 리포팅 받았다고 하자. 어떻게 테스트 할 것인가? 두 가지 선택지가 있다.</p>\n<ul>\n<li>브라우저를 실행시키고 마우스를 이리저리 움직여가며 문제를 발생할때까지 테스트해 본다.</li>\n<li>단위 테스트를 작성해서 버그를 추적하는것 뿐만 아니라 같은 문제가 다시 발생하지 않도록 조치한다.</li>\n</ul>\n<p>문제를 해결하고 재발하지 않게 하기 위해 두 번째 선택지를 따랐지만 새로운 문제를 직면했다. 테스트를 실행하기 위한 환경을 어떻게 만들어야 할까? 함수를 테스트하기 위해서는 윈도우의 가로 크기를 500픽셀 이하로 줄여야 한다. 하지만 어떻게 해야 할까? 코드 내부에서 <code class=\"tui-language-text\">window.innerWidth</code>를 직접 참조하고 있는데 말이다.</p>\n<h3 id=\"순수-함수의-장점\" style=\"position:relative;\"><a href=\"#%EC%88%9C%EC%88%98-%ED%95%A8%EC%88%98%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"순수 함수의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>순수 함수의 장점</h3>\n<h4 id=\"1-간단하게-테스트할-수-있다\" style=\"position:relative;\"><a href=\"#1-%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"1 간단하게 테스트할 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 간단하게 테스트할 수 있다</h4>\n<p>아래와 같이 코드를 리펙토링했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">mouseOnLeftSide</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mouseX<span class=\"token punctuation\">,</span> windowWidth</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> mouseX <span class=\"token operator\">&lt;</span> windowWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmousemove</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">mouseOnLeftSide</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>pageX<span class=\"token punctuation\">,</span> window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"tui-language-text\">mouseOnLeftSide()</code>의 주요 변경점은 바로 인자를 2 개 받는다는 것이다. 이제 이 함수는 순수함수가 되었다. 순수함수는 모든 변수를 명시적으로 받아야 하며 절대 그 외의 변수를 외부에서 참조하지 않아야 한다.</p>\n<p>기능상으로 이전 예제와 같지만 유지보수하기 좋아졌고 테스트하기 역시 쉬워졌다. 이제 테스트를 위해 <code class=\"tui-language-text\">window.innerHTML</code>를 조작하는 찜찜한 준비를 하는 대신 두 가지 인자를 넘기기만 하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token function\">mouseOnLeftSide</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">499</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 500보다 작을때도 동작한다.</span></code></pre></div>\n<h4 id=\"2-코드-자체가-문서가-된다\" style=\"position:relative;\"><a href=\"#2-%EC%BD%94%EB%93%9C-%EC%9E%90%EC%B2%B4%EA%B0%80-%EB%AC%B8%EC%84%9C%EA%B0%80-%EB%90%9C%EB%8B%A4\" aria-label=\"2 코드 자체가 문서가 된다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 코드 자체가 문서가 된다.</h4>\n<p>테스트가 쉬워질 뿐만 아니라, 순수함수는 코드 자체만으로 자신이 어떤 동작을 하는지 설명한다. 파라미터로 넘겨진 변수만 신경쓰면 된다. 반면에 비순수 함수는 코드에 외부의 변수를 참조하기 때문에 그 변수를 알지 못하는 이상 코드를 이해하기 어렵다. 다음의 예제를 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">mouseOnLeftSide</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mouseX<span class=\"token punctuation\">,</span> windowWidth</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>코드 내부와 상관없이 이 함수는 두 파라미터를 받고 있고 파라미터 역시 명확한 이름을 사용하고 있다. 추후에 이 코드를 다시 보더라도 쉽게 이해할 수 있다.</p>\n<h4 id=\"3-전역변수-사용을-피하게-된다\" style=\"position:relative;\"><a href=\"#3-%EC%A0%84%EC%97%AD%EB%B3%80%EC%88%98-%EC%82%AC%EC%9A%A9%EC%9D%84-%ED%94%BC%ED%95%98%EA%B2%8C-%EB%90%9C%EB%8B%A4\" aria-label=\"3 전역변수 사용을 피하게 된다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 전역변수 사용을 피하게 된다</h4>\n<p>전역 변수를 참조하는 일은 아무리 문서화가 잘 되어있다고 해도 버그가 발생하는 주요 지점이 된다. 이는 전역 변수가 바뀌면 함수가 다르게 동작하기 때문이다.</p>\n<p>순수함수의 또 다른 장점은 바로 <code class=\"tui-language-text\">참조 투명성</code> 이다. 어려워 보이는 단어지만 뜻은 간단하다. 입력이 같으면 출력은 항상 같다는 뜻이다. <code class=\"tui-language-text\">mouseOnLeftSide</code>를 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">mouseOnLeftSide</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mouseX</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> mouseX <span class=\"token operator\">&lt;</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 함수는 참조 투명적이지 않다. 함수를 5번 호출하는 동안 윈도우 크기를 변경시키면 결과는 매번 달라진다. 예제 코드는 조금 계획적이라 문제를 발견하기 쉽지만 입력과 출력이 다른 코드는 다루기 매우 어렵다. 매번 동작이 같다는 것을 보장할 수 없기 때문이다. 같은 이유로 함수가 실행되는 조건을 설정하기 어렵기 때문에 테스트하기도 어렵다.</p>\n<p>한편으로, 리펙토링한 <code class=\"tui-language-text\">mouseOnLeftSide</code>는 외부 변수에 영향을 받지 않기 때문에 참조 투명적이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">mouseOnLeftSide</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mouseX<span class=\"token punctuation\">,</span> windowWidth</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> mouseX <span class=\"token operator\">&lt;</span> windowWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>함수가 참조 투명적이 되었다. 입력으로만 연산을 하게 되었고 전체 클래스로부터의 사이드 이펙트나, 예외적인 동작을 하게 될 여지를 없앴다. 데이터를 주고 받는 과정을 완전히 제어할 수 있으므로 디버깅하기 역시 쉬워졌다.</p>\n<h3 id=\"어떤-함수를-순수하게-만들-것인가\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%96%A4-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%88%9C%EC%88%98%ED%95%98%EA%B2%8C-%EB%A7%8C%EB%93%A4-%EA%B2%83%EC%9D%B8%EA%B0%80\" aria-label=\"어떤 함수를 순수하게 만들 것인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어떤 함수를 순수하게 만들 것인가</h3>\n<p>순수 함수를 지속적으로 유지할수는 없다. 언젠간 바깥의 변수를 참조해야 하는 시기가 올 것이며 가장 일반적인 예는 DOM엘리먼트를 조작할 경우이다. 이럴 경우 아무렇게나 참조하지 말고 순수 함수와 비순수 함수를 계획적으로 나누는 것이 좋다.</p>\n<p>아래의 코드를  보자. DOM엘리먼트를 찾아서 배경색을 붉게 만드는 함수다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">changeElementToRed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  foo<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">changeElementToRed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위 함수에는 두 가지 문제가 있다. 순수함수로 바꿔 해결할 수 있다.</p>\n<ul>\n<li>위 함수는 재사용하기 어렵다. 특정 DOM과 의존성이 있어 다른 엘리먼트에 적용할 수 없다.</li>\n<li>비순수함수라 테스트하기 어렵다. 테스트하려면 의존성이 있는 DOM엘리먼트를 만들어주어야 한다.</li>\n</ul>\n<p>위의 두 개선점으로 리펙토링해 보았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">changeElementToRed</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  elem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeFooToRed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">changeElementToRed</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">changeFooToRed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"tui-language-text\">changeElementToRed()</code>를 일반적인 DOM엘리먼트에도 사용할 수 있게 바꿨다. 앞서 언급했던 순수함수의 장점을 가졌다.</p>\n<p>중요한 점은 아직 <code class=\"tui-language-text\">changeFooToRed()</code>라는 비순수 함수가 있다는 점이다. 이 점은 피해갈 수 없다. 하지만 앞서 이야기했던대로 계획적으로 분리해 조금 더 발견하기 쉽게 만들었다. 이렇게 코드 전체에서 비순수함수의 비율을 줄여나가는 것이 중요하다.</p>\n<h3 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h3>\n<p>'순수함수', '사이드이펙트', '참조투명성' 이라는 단어는 함수형 언어와 관련이 있고 자바스크립트에도 충분히 적용할 수 있다. 이 원리를 잘 이해하고 적용하면 여러분의 코드는 좀 더 의미있고, 설명적이고, 쉽게 유지보수 할 수 있게 될 것이다. 이 방법을 자연스럽게 적용하는데는 조금 시간이 걸리겠지만 곧 그렇게 될 것이다. 훗날 후배 개발자들이 고마워할 수 있게 되지 않을까?</p>","frontmatter":{"id":"ko_20160613","title":"순수 함수로 만드세요!","description":"웹사이트나 애플리케이션의 코드 줄 수가 증가하면 필연적으로 버그가 생긴다. 자바스크립트 뿐만 아니라 모든 언어가 버그 없이 무언가를 만드는것은 매우 어렵고, 불가능하다. 하지만 그것이 버그를 생기지 않도록 주의조차 할 수 없는 것을 의미하는 것은 아니다.","date":"2016.06.13","author":"김민형","tags":["ecmascript"],"thumbnail":null}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20160613","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}