{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20160812","result":{"data":{"post":{"html":"<h1 id=\"webrtc---실시간-pc-화면-가져오기\" style=\"position:relative;\"><a href=\"#webrtc---%EC%8B%A4%EC%8B%9C%EA%B0%84-pc-%ED%99%94%EB%A9%B4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"webrtc   실시간 pc 화면 가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WebRTC - 실시간 PC 화면 가져오기</h1>\n<p>WebRTC는 웹을 통해 유저 간의 실시간 통신을 가능케 하는 기술이다. 물론 WebRTC 기술을 사용하지 않고도 이미 많은 서비스가 실시간 통신을 지원하고 있다. 하지만 비싼 영상/음성 기술을 사용해야 하고, 사용자는 네이티브 앱이나 플러그인을 설치해야 하는 등의 장벽이 존재한다.\n그렇지만 WebRTC는 플러그인이 필요 없는, 실시간의, 영상과 음성, 데이터 통신에 대한 표준과 기술을 제공한다. 영상, 음성, 메시지, 파일까지 중개 서버가 필요 없는 피어간 통신(P2P)을 지원한다.</p>\n<h4 id=\"webrtc-tutorial\" style=\"position:relative;\"><a href=\"#webrtc-tutorial\" aria-label=\"webrtc tutorial permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WebRTC Tutorial</h4>\n<p>조금 더 자세한 WebRTC 소개와 튜토리얼은 아래 페이지들을 참고하면 좋다.</p>\n<ul>\n<li>WebRTC 공식: <a href=\"https://webrtc.org/\">https://webrtc.org/</a></li>\n<li>Tutorial 영어(원문): <a href=\"http://www.html5rocks.com/en/tutorials/webrtc/basics\">http://www.html5rocks.com/en/tutorials/webrtc/basics</a></li>\n<li>Tutorial 한글(번역): <a href=\"http://www.html5rocks.com/ko/tutorials/webrtc/basics\">http://www.html5rocks.com/ko/tutorials/webrtc/basics</a></li>\n</ul>\n<h2 id=\"screen-sharing\" style=\"position:relative;\"><a href=\"#screen-sharing\" aria-label=\"screen sharing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Screen sharing</h2>\n<p>WebRTC를 이용하여 기본적인 화상/음성/메시지/데이터 통신을 할 수 있다. 그리고 심지어 자신의 컴퓨터 화면마저도 <strong>브라우저를 통해</strong> 상대방과 P2P로 공유하고 통신할 수 있다.\n그렇지만 여기에는 한가지 제약조건이 있는데,\n브라우저에서 로컬 피씨의 화면을 가져오기 위해서는 영상이나 음성과는 달리 <strong>브라우저의 <a href=\"https://developer.chrome.com/extensions\">Extension App</a></strong>을 이용해야 하는 것이다.\n(현재는 Firefox, Chrome 정도의 브라우저만이 Extension API와 App 개발 플랫폼을 제공하고 있다.) 그 이유는 보안과 관련되어 있는데,\n자세한 히스토리는 <a href=\"https://groups.google.com/forum/#!msg/discuss-webrtc/j6jmyBFt9QI/6cjiksWiYaEJ\">WebRTC그룹의 글</a>을 참고하면 알 수 있다.</p>\n<p>WebRTC를 이용한 Screen sharing은 다음과 같은 Flow를 갖는다.<br>\n<img src=\"https://cloud.githubusercontent.com/assets/12269563/17671713/6096baf0-6353-11e6-827b-7328eda67d41.png\" alt=\"image\"></p>\n<hr>\n<p><strong>이 글은 WebRTC를 통해 피씨의 Screen Sharing을 하기 위해 선행되어야 하는 기술들과 API, 구조를 크롬의 <code class=\"tui-language-text\">chrome.desktopCapture</code> Extension API 기준으로 설명한다.</strong>\n사실 Screen Sharing은 PC 화면의 Stream만 얻어 올 수 있다면, 그다음은 WebRTC의 일반적인 (비디오 캠과 같은)영상을 실시간으로 통신하게 하는 방식과 동일하게 구현할 수 있다.\n유저 간 실시간 통신을 위한 Signaling 과정이나 PeerConnection은 위의 <a href=\"#webrtc-tutorial\">WebRTC Tutorial</a>에 있는 링크를 참고한다.</p>\n<h2 id=\"extension-app\" style=\"position:relative;\"><a href=\"#extension-app\" aria-label=\"extension app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extension App</h2>\n<p>앞서 설명한 Screen Sharing에는 Extension App이 필요하였다.\n이 Extension App에 대해 조금 더 정확히 설명하자면, 사실 App 자체로 화면 Stream을 얻고 구현하는 것은 아니다.\n단순히 Extension API를 호출하여 로컬 피씨의 Screen Stream <strong>Id</strong>를 가져오고 실제 웹 페이지와 통신하여 이 Id를 전달하는 역할이 전부다.</p>\n<p>웹 페이지는 Extension App으로부터 전달받은 Id를 가지고 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code class=\"tui-language-text\">getUserMedia</code> API</a>를 호출하여 실제 Stream 객체를 얻어낸다.</p>\n<blockquote>\n<p>Stream Id (chromeMediaSourceId)</p>\n<p>An opaque string that can be passed to getUserMedia() API to generate media stream that corresponds to the source selected by the user. If user didn't select any source (i.e. canceled the prompt) then the callback is called with an empty streamId. The created streamId can be used only once and expires after a few seconds when it is not used.</p>\n</blockquote>\n<p>일단 그럼 로컬 PC의 화면을 얻어오기 위해서는 Extension App을 만들어야 한다. 개발 언어 및 구조는 Javascript + JSON + HTML + CSS 조합이므로 만드는데 크게 어렵지 않다.\n크롬의 <a href=\"https://developer.chrome.com/extensions/devguide\">개발 가이드 문서</a>와 <a href=\"https://developer.chrome.com/extensions/samples\">Extension samples</a>를 참고하도록 하자.</p>\n<h3 id=\"extension-api---chromedesktopcapture\" style=\"position:relative;\"><a href=\"#extension-api---chromedesktopcapture\" aria-label=\"extension api   chromedesktopcapture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extension API - chrome.desktopCapture</h3>\n<p><a href=\"https://developer.chrome.com/extensions/desktopCapture#method-chooseDesktopMedia\"><code class=\"tui-language-text\">chrome.desktopCapture.chooseDesktopMedia</code></a> API는 Chrome 34버전부터 사용할 수 있다.\n이 Extension API를 통해 로컬 PC의 Screen Stream Id를 얻어올 수 있다.\n이 API는 복잡하거나 어렵지 않고, 사용 예제도 <a href=\"https://developer.chrome.com/extensions/samples\">Extension samples</a> 페이지에서 <code class=\"tui-language-text\">Desktop Capture</code>로 검색하면 찾을 수 있다.</p>\n<p>Screen Sharing을 위한 Extension App을 개발한다면 아마 보통은 다음 4개의 파일로 구성될 것이다.</p>\n<ol>\n<li><strong>background.js</strong></li>\n<li>실제 Extension API - <code class=\"tui-language-text\">chrome.desktopCapture</code>를 사용하는 파일이다.</li>\n<li><strong>content-script.js</strong></li>\n<li>Extension App을 통해 웹 페이지에 <a href=\"https://developer.chrome.com/extensions/content_scripts#pi\">주입(Injection)</a>하는 파일이다. 이 파일을 통해 Extension App과 웹 페이지 간 통신을 할 수 있다.</li>\n<li>manifest.json</li>\n<li>Extension App의 환경 설정 파일이다. 이름, 설명, 버전, 권한 등의 내용이 포함되어 있다. 자세한 key-value 포맷은 <a href=\"https://developer.chrome.com/extensions/manifest\">여기</a>를 참고한다.</li>\n<li>desktopCapture API를 이용하기 위해서는 <code class=\"tui-language-text\">&quot;desktopCapture&quot;</code> 권한을 필수로 추가해야 한다.<br>\n<code class=\"tui-language-text\">&quot;permissions&quot;: [&quot;desktopCapture&quot;, ...]</code></li>\n<li>icon.png</li>\n<li>중요한 파일은 아니다. 그냥 Extension Icon 이미지 파일이다. Extension App이 설치되었는지 확인하기 위해 Image-ping방식으로 쓰이기도 한다.</li>\n</ol>\n<h2 id=\"웹-페이지와-extenion-app의-통신\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%ED%8E%98%EC%9D%B4%EC%A7%80%EC%99%80-extenion-app%EC%9D%98-%ED%86%B5%EC%8B%A0\" aria-label=\"웹 페이지와 extenion app의 통신 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 페이지와 Extenion App의 통신</h2>\n<p>웹 페이지와 Extension App이 통신하는 구조는 다음과 같다.<br>\n<img src=\"https://cloud.githubusercontent.com/assets/12269563/17670585/a7706422-634d-11e6-96ff-3971bdb7ccb4.png\" alt=\"image\"></p>\n<h3 id=\"background-script\" style=\"position:relative;\"><a href=\"#background-script\" aria-label=\"background script permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Background Script</h3>\n<ol>\n<li>Content Script를 주입한다. 주입하는 방식은 아래 두가지가 있다.</li>\n<li><a href=\"https://developer.chrome.com/extensions/content_scripts#registration\">manifest에 등록</a>하여 주입</li>\n<li><a href=\"https://developer.chrome.com/extensions/tabs#method-executeScript\"><code class=\"tui-language-text\">chrome.tabs.executeScript</code></a> API를 통해 주입</li>\n<li>Content Script와 통신할 수 있도록 <code class=\"tui-language-text\">port</code>를 통한 메시지 송/수신을 준비한다.<br></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 메시지는 개발자 임의로 정의하여 사용한다.</span>\nchrome<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>onConnect<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">port</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  port<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"REQUEST_SCREEN_STREAM_ID\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">requestScreenStreamId</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>메시지가 수신되면 <code class=\"tui-language-text\">chrome.desktopCapture.chooseDesktopMedia</code> API를 호출한다.<br></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">requestScreenStreamId</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">port<span class=\"token punctuation\">,</span> msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> sendMessage <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> tab <span class=\"token operator\">=</span> port<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>tab<span class=\"token punctuation\">;</span>\n  tab<span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span>\n\n  chrome<span class=\"token punctuation\">.</span>desktopCapture<span class=\"token punctuation\">.</span><span class=\"token function\">chooseDesktopMedia</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"screen\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"window\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tab\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    tab<span class=\"token punctuation\">,</span>\n    <span class=\"token parameter\">streamId</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>streamId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sendMessage<span class=\"token punctuation\">.</span>streamId <span class=\"token operator\">=</span> streamId<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//...</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Stream Id를 가져오는데 실패한 경우</span>\n        <span class=\"token comment\">//...</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>sendMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"content-script\" style=\"position:relative;\"><a href=\"#content-script\" aria-label=\"content script permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Content Script</h3>\n<ol>\n<li>Background Script와 통신할 수 있도록 <code class=\"tui-language-text\">port</code>를 통한 메시지 송/수신을 준비한다.<br>\nBackground Script => Content Script => 웹 페이지<br></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> chrome<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>chrome<span class=\"token punctuation\">.</span>runtime<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nport<span class=\"token punctuation\">.</span>onMessage<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Background Script에서 받은 메시지를 웹 페이지에 전달</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>웹 페이지와는 <code class=\"tui-language-text\">window.postMessage</code> API를 통해 통신한다. (웹 페이지와 Content Script는 DOM을 공유하기 때문에 <code class=\"tui-language-text\">window.postMessage</code>를 이용한다.)<br>\n웹 페이지 => Content Script => BackgroundScript<br></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> type <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"REQUEST_SCREEN_STREAM_ID\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    port<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 웹 페이지에서 받은 메시지를 Backgournd Script에 전달</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"웹-페이지-script\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%ED%8E%98%EC%9D%B4%EC%A7%80-script\" aria-label=\"웹 페이지 script permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 페이지 Script</h3>\n<p>웹 페이지는 Content Script에게 Screen Stream Id를 받으면 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code class=\"tui-language-text\">getUserMedia</code> API</a>를 통해 실제 Stream 객체를 가져오고,\n이 stream 객체를 상대 피어에게 전달하거나, 현재 페이지에 그대로 보여줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">gotStream</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">screenStream</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> videoElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  videoElement<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>screenStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  videoElement<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onFail</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> streamId <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>streamId<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>streamId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    navigator<span class=\"token punctuation\">.</span>mediaDevices\n      <span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        audio<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// or true</span>\n        video<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          mandatory<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            chromeMediaSourceId<span class=\"token operator\">:</span> streamId<span class=\"token punctuation\">,</span>\n            chromeMediaSource<span class=\"token operator\">:</span> <span class=\"token string\">\"desktop\"</span><span class=\"token punctuation\">,</span>\n            maxWidth<span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span>screen<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>\n            maxHeight<span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span>screen<span class=\"token punctuation\">.</span>height\n            <span class=\"token comment\">//...</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>gotStream<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>onFail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//... stream Id 가져오기 실패</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"전체-흐름\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%ED%9D%90%EB%A6%84\" aria-label=\"전체 흐름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 흐름</h3>\n<p><img src=\"https://cloud.githubusercontent.com/assets/12269563/17688167/8db6b472-63b7-11e6-8ea3-e5cd9dbbb1d7.png\" alt=\"image\"></p>\n<p>정상적으로 Extension App과 웹 페이지가 통신한다면 다음과 같은 화면 선택 창이 나타날 것이다.<br>\n<img src=\"https://cloud.githubusercontent.com/assets/12269563/17673917/34e5b77a-635e-11e6-9e61-8216d87ee7ee.png\" alt=\"image\"></p>\n<h2 id=\"외부-extension-app-활용하기\" style=\"position:relative;\"><a href=\"#%EC%99%B8%EB%B6%80-extension-app-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"외부 extension app 활용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>외부 Extension App 활용하기</h2>\n<p>아무리 Extension App을 간단하게 개발할 수 있을지라도, 실제로 개발하고 <a href=\"https://developer.chrome.com/extensions/getstarted#unpacked\">Chrome Extension에서 로드</a>하여 테스트하기는 솔직히 많이 귀찮은 작업이다.\n때문에 단순한 테스트를 위해서라면 외부 Extension App과 통신하여 개발할 수도 있다. 가장 쉬운 예제는 아마 <a href=\"https://github.com/muaz-khan/WebRTC-Experiment/tree/master/getScreenId.js\">Muaz-khan의 <code class=\"tui-language-text\">getScreenId.js</code></a>일 것이다.</p>\n<ol>\n<li>우선 로컬 피씨에 <a href=\"https://chrome.google.com/webstore/detail/screen-capturing/ajhifddimkapgcifgcodmmfdlknahffk\">Muaz-khan의 Extension App</a>을 설치한다.</li>\n<li>개발 페이지에 아래 스크립트 중 하나를 로드한다. (둘 다 큰 차이는 없다.)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.WebRTC-Experiment.com/getScreenId.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- or --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.rawgit.com/muaz-khan/getScreenId/master/getScreenId.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ol start=\"3\">\n<li>그리고 이제 window.getScreenId 함수를 호출한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token function\">getScreenId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> sourceId<span class=\"token punctuation\">,</span> screenConstraints</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error <span class=\"token operator\">===</span> <span class=\"token string\">\"not-installed\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The extension is not installed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error <span class=\"token operator\">===</span> <span class=\"token string\">\"permission-denied\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Permission is denied.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error <span class=\"token operator\">===</span> <span class=\"token string\">\"not-chrome\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please use chrome.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  navigator<span class=\"token punctuation\">.</span>mediaDevices\n    <span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span>screenConstraints<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> video <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      video<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      video<span class=\"token punctuation\">.</span>autoplay <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      video<span class=\"token punctuation\">.</span>controls <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      video<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"4\">\n<li>이제 손쉽게 로컬 PC 화면의 스트림을 가져와서 마음대로 테스트할 수 있다.<br>\n<img src=\"https://cloud.githubusercontent.com/assets/12269563/17688919/583e0816-63be-11e6-9ae7-30978542a325.png\" alt=\"image\"><br></li>\n</ol>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<p>앞에서 설명하지 않았지만, WebRTC의 스펙과 API들은 아직 WorkingDraft 상태이기 때문에, 브라우저마다 구현이나 API명의 차이가 있다.<br>\n<img src=\"https://cloud.githubusercontent.com/assets/12269563/17688763/3aa56426-63bd-11e6-9b3a-ef58781a7afa.png\" alt=\"image\"><br></p>\n<blockquote>\n<p><a href=\"https://webrtc.org/web-apis/interop/\">https://webrtc.org/web-apis/interop/</a></p>\n</blockquote>\n<p>그래서 이런 차이를 맞춰주는 <a href=\"https://github.com/webrtc/adapter\">webrtc-adapter</a> 라이브러리를 같이 사용하길 추천한다.</p>\n<p>WebRTC의 여러 Example은 아래 페이지들에서 확인할 수 있다.</p>\n<ul>\n<li><a href=\"https://github.com/webrtc/samples\">https://github.com/webrtc/samples</a></li>\n<li><a href=\"https://github.com/muaz-khan/WebRTC-Experiment\">https://github.com/muaz-khan/WebRTC-Experiment</a></li>\n</ul>","frontmatter":{"id":"ko_20160812","title":"WebRTC - 실시간 PC 화면 가져오기","description":"WebRTC는 웹을 통해 유저 간의 실시간 통신을 가능케 하는 기술이다. 물론 WebRTC 기술을 사용하지 않고도 이미 많은 서비스가 실시간 통신을 지원하고 있다. 하지만 비싼 영상/음성 기술을 사용해야 하고, 사용자는 네이티브 앱이나 플러그인을 설치해야 하는 등의 장벽이 존재한다.","date":"2016.08.12","author":"이민규","tags":["etc"],"thumbnail":"https://cloud.githubusercontent.com/assets/12269563/17671713/6096baf0-6353-11e6-827b-7328eda67d41.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20160812","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}