{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20191014","result":{"data":{"post":{"html":"<h1 id=\"tdz을-모른-채-자바스크립트-변수를-사용하지-말라\" style=\"position:relative;\"><a href=\"#tdz%EC%9D%84-%EB%AA%A8%EB%A5%B8-%EC%B1%84-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EB%A7%90%EB%9D%BC\" aria-label=\"tdz을 모른 채 자바스크립트 변수를 사용하지 말라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TDZ을 모른 채 자바스크립트 변수를 사용하지 말라</h1>\n<blockquote>\n<p>원문 : <a href=\"https://dmitripavlutin.com/javascript-variables-and-temporal-dead-zone/\">https://dmitripavlutin.com/javascript-variables-and-temporal-dead-zone/</a></p>\n</blockquote>\n<p><img src=\"https://user-images.githubusercontent.com/18183560/69510368-9badfe80-0ef1-11ea-8f8e-f4537808a37c.png\" alt=\"01-hourglass\">\n(출처 : <a href=\"https://dmitripavlutin.com/javascript-variables-and-temporal-dead-zone/\">https://dmitripavlutin.com/javascript-variables-and-temporal-dead-zone/</a>)</p>\n<p>간단한 질문을 하나 하겠다. 아래 코드 스니펫에서 에러가 발생할까?</p>\n<p>첫 번째 코드는 인스턴스를 생성한 다음 클래스를 선언한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Does it work?</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>두 번째 코드는 함수를 실행한 다음 함수를 선언한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token string\">'World'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Does it work?</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">who</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>who<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>정답은 다음과 같다. 첫 번째 코드에서는 <code class=\"tui-language-text\">ReferenceError</code> 에러가 발생하고, 두 번째 코드는 잘 동작한다.</p>\n<p>만약 예상한 답과 다르거나 어떤 일이 일어나는지 잘 모르고 추측만 했다면, 당신은 Temporal Dead Zone(TDZ)을 알 필요가 있다.</p>\n<p>TDZ은 <code class=\"tui-language-text\">let</code>, <code class=\"tui-language-text\">const</code>, <code class=\"tui-language-text\">class</code> 구문의 유효성을 관리한다. 자바스크립트에서 변수가 동작하는 방식은 중요하다.</p>\n<h2 id=\"1-tdz은-무엇인가\" style=\"position:relative;\"><a href=\"#1-tdz%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"1 tdz은 무엇인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. TDZ은 무엇인가?</h2>\n<p><code class=\"tui-language-text\">const</code> 변수 선언부터 시작해보자. 변수를 선언하고 초기화하면 변수에 접근할 수 있다. 예상한대로 동작한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> white <span class=\"token operator\">=</span> <span class=\"token string\">'#FFFFFF'</span><span class=\"token punctuation\">;</span>\n\nwhite<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => '#FFFFFF'</span></code></pre></div>\n<p>이번에는 선언 전에 <code class=\"tui-language-text\">white</code> 변수에 접근해보도록 하겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\">white<span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws `ReferenceError`</span>\n<span class=\"token keyword\">const</span> white <span class=\"token operator\">=</span> <span class=\"token string\">'#FFFFFF'</span><span class=\"token punctuation\">;</span>\n\nwhite</code></pre></div>\n<p><code class=\"tui-language-text\">const white = &#39;#FFFFFF&#39;</code> 구문 전 줄까지, <code class=\"tui-language-text\">white</code> 변수는 TDZ에 있다.</p>\n<p>TDZ에 있는 <code class=\"tui-language-text\">white</code> 변수에 접근하게 되면 , <code class=\"tui-language-text\">ReferenceError: Cannot access &#39;white&#39; before initialization</code> 자바스크립트 에러가 발생한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/18183560/69510373-a072b280-0ef1-11ea-9d1d-6272f4078e9e.png\" alt=\"02-temporal-dead-zone-in-javascript\">\n(출처 : <a href=\"https://dmitripavlutin.com/javascript-variables-and-temporal-dead-zone/\">https://dmitripavlutin.com/javascript-variables-and-temporal-dead-zone/</a>)</p>\n<blockquote>\n<p>TDZ 시맨틱은 선언 전에 변수에 접근하는 것을 금지한다. TDZ는 징계를 내린다: <em>변수 선언 전에 어떤 것도 사용하지 않는다.</em></p>\n</blockquote>\n<h2 id=\"2-tdz의-영향을-받는-구문\" style=\"position:relative;\"><a href=\"#2-tdz%EC%9D%98-%EC%98%81%ED%96%A5%EC%9D%84-%EB%B0%9B%EB%8A%94-%EA%B5%AC%EB%AC%B8\" aria-label=\"2 tdz의 영향을 받는 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. TDZ의 영향을 받는 구문</h2>\n<p>TDZ의 영향을 받는 구문들을 살펴보자.</p>\n<h3 id=\"21-const-변수\" style=\"position:relative;\"><a href=\"#21-const-%EB%B3%80%EC%88%98\" aria-label=\"21 const 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1 const 변수</h3>\n<p>이전에 보았듯이, <code class=\"tui-language-text\">const</code> 변수는 선언 및 초기화 전 줄까지 TDZ에 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// Does not work!</span>\npi<span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws `ReferenceError`</span>\n<span class=\"token keyword\">const</span> pi <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"tui-language-text\">const</code> 변수는 선언한 후에 사용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> pi <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Works!</span>\npi<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => 3.14</span></code></pre></div>\n<h3 id=\"22-let-변수\" style=\"position:relative;\"><a href=\"#22-let-%EB%B3%80%EC%88%98\" aria-label=\"22 let 변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2 let 변수</h3>\n<p><code class=\"tui-language-text\">let</code>도 선언 전 줄까지 TDZ의 영향을 받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// Does not work!</span>\ncount<span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws `ReferenceError`</span>\n<span class=\"token keyword\">let</span> count<span class=\"token punctuation\">;</span>\n\ncount <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다시, <code class=\"tui-language-text\">let</code> 변수도 선언 이후에 사용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">let</span> count<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Works!</span>\ncount<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => undefined</span>\ncount <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Works!</span>\ncount<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => 10</span></code></pre></div>\n<h3 id=\"23-class-구문\" style=\"position:relative;\"><a href=\"#23-class-%EA%B5%AC%EB%AC%B8\" aria-label=\"23 class 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3 class 구문</h3>\n<p>머리말 부분에서 보았듯이, 선언 전에는 <code class=\"tui-language-text\">class</code>를 사용할 수 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// Does not work!</span>\n<span class=\"token keyword\">const</span> myNissan <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws `ReferenceError`</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 예제가 동작하려면, 클래스를 선언한 후에 사용하도록 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Works!</span>\n<span class=\"token keyword\">const</span> myNissan <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyNissan<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => 'red'</span></code></pre></div>\n<h3 id=\"24-constructor-내부의-super\" style=\"position:relative;\"><a href=\"#24-constructor-%EB%82%B4%EB%B6%80%EC%9D%98-super\" aria-label=\"24 constructor 내부의 super permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.4 constructor() 내부의 super()</h3>\n<p>부모 클래스를 상속받았다면, 생성자 안에서 <code class=\"tui-language-text\">super()</code>를 호출하기 전까지 <code class=\"tui-language-text\">this</code> 바인딩은 TDZ에 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MuscleCar</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">color<span class=\"token punctuation\">,</span> power</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>power <span class=\"token operator\">=</span> power<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Does not work!</span>\n<span class=\"token keyword\">const</span> myCar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MuscleCar</span><span class=\"token punctuation\">(</span>‘blue’<span class=\"token punctuation\">,</span> ‘<span class=\"token number\">300</span>HP’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// `ReferenceError`</span></code></pre></div>\n<p>이 코드를 보면 <code class=\"tui-language-text\">constructor()</code> 안에서 <code class=\"tui-language-text\">super()</code>가 호출되기 전까지 <code class=\"tui-language-text\">this</code>를 사용할 수 없다.</p>\n<p>TDZ는 인스턴스를 초기화하기 위해 부모 클래스의 생성자를 호출할 것을 제안한다. 부모 클래스의 생성자를 호출하고 인스턴스가 준비되면 자식 클래스에서 this 값을 변경할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MuscleCar</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">color<span class=\"token punctuation\">,</span> power</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>power <span class=\"token operator\">=</span> power<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Works!</span>\n<span class=\"token keyword\">const</span> myCar <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MuscleCar</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'300HP'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyCar<span class=\"token punctuation\">.</span>power<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => '300HP'</span></code></pre></div>\n<h3 id=\"25-기본-함수-매개변수default-function-parameter\" style=\"position:relative;\"><a href=\"#25-%EA%B8%B0%EB%B3%B8-%ED%95%A8%EC%88%98-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98default-function-parameter\" aria-label=\"25 기본 함수 매개변수default function parameter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.5 기본 함수 매개변수(Default Function Parameter)</h3>\n<p>기본 매개변수는 글로벌과 함수 스코프 사이의 중간 스코프(intermidiate scope)에 위치한다. 기본 매개변수 또한 TDZ 제한이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a <span class=\"token operator\">=</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">*</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Does not work!</span>\n<span class=\"token function\">square</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws `ReferenceError`</span></code></pre></div>\n<p>기본 매개변수 <code class=\"tui-language-text\">a</code>는 선언 전에 <code class=\"tui-language-text\">a = a</code> 표현식의 오른쪽에서 사용되었다. <code class=\"tui-language-text\">a</code>에서 참조 에러가 발생한다.</p>\n<p>기본 매개변수는 선언 및 초기화 다음에 사용되어야 한다. 이 경우 <code class=\"tui-language-text\">init</code>과 같은 다른 변수로 선언하여 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> init <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a <span class=\"token operator\">=</span> init</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">*</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Works!</span>\n<span class=\"token function\">square</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => 4</span></code></pre></div>\n<h2 id=\"3-var-function-import-구문\" style=\"position:relative;\"><a href=\"#3-var-function-import-%EA%B5%AC%EB%AC%B8\" aria-label=\"3 var function import 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. var, function, import 구문</h2>\n<p>위에서 설명한 것들과 반대로 <code class=\"tui-language-text\">var</code>, <code class=\"tui-language-text\">function</code> 선언은 TDZ에 영향을 받지 않는다. 이것들은 현재 스코프에서 호이스팅 된다.</p>\n<p><code class=\"tui-language-text\">var</code> 변수는 선언하기 전에 접근하면, <code class=\"tui-language-text\">undefined</code>를 얻게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// Works, but don't do this!</span>\nvalue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => undefined</span>\n<span class=\"token keyword\">var</span> value<span class=\"token punctuation\">;</span></code></pre></div>\n<p>그러나 함수는 선언된 위치와 상관없이 동일하게 호출된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// Works!</span>\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token string\">'World'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => 'Hello, World!'</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">who</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>who<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Works!</span>\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Earth'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => 'Hello, Earth!'</span></code></pre></div>\n<p>당신은 함수 구현보다 호출에 더 관심이 있기 때문에 종종 함수 선언 전에 호출하게 된다. 함수 선언 전에 호출해도 에러가 발생하지 않는 이유는 호이스팅 때문이다.</p>\n<p>흥미로운 점으로 <code class=\"tui-language-text\">import</code> 모듈 역시 호이스팅 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// Works!</span>\n<span class=\"token function\">myFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> myFunction <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./myModule'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"tui-language-text\">import</code> 구문이 호이스팅 되기 때문에, 자바스크립트 파일 시작 부분에서 디펜던시 모듈을 가져오는 것이 좋다.</p>\n<h2 id=\"4-tdz에서-typeof-연산자의-동작\" style=\"position:relative;\"><a href=\"#4-tdz%EC%97%90%EC%84%9C-typeof-%EC%97%B0%EC%82%B0%EC%9E%90%EC%9D%98-%EB%8F%99%EC%9E%91\" aria-label=\"4 tdz에서 typeof 연산자의 동작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. TDZ에서 typeof 연산자의 동작</h2>\n<p><code class=\"tui-language-text\">typeof</code> 연산자는 변수가 현재 스코프 안에 선언되었는지 확인할 때 유용하다.</p>\n<p>예를 들어서, <code class=\"tui-language-text\">notDefined</code> 변수는 선언되지 않았다. 이 변수에 <code class=\"tui-language-text\">typeof</code> 연산자를 적용하면 에러가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">typeof</span> notDefined<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => 'undefined'</span></code></pre></div>\n<p>변수가 선언되지 않았기 때문에, <code class=\"tui-language-text\">typeof notDefined</code>는 <code class=\"tui-language-text\">undefined</code>로 평가한다.</p>\n<p>그러나 TDZ의 변수에서 <code class=\"tui-language-text\">typeof</code> 연산자를 사용하면 다르게 동작한다. 다음과 같은 경우에 에러가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">typeof</span> variable<span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws `ReferenceError`</span>\n<span class=\"token keyword\">let</span> variable<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"현재-스코프-안에서-tdz-동작\" style=\"position:relative;\"><a href=\"#%ED%98%84%EC%9E%AC-%EC%8A%A4%EC%BD%94%ED%94%84-%EC%95%88%EC%97%90%EC%84%9C-tdz-%EB%8F%99%EC%9E%91\" aria-label=\"현재 스코프 안에서 tdz 동작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현재 스코프 안에서 TDZ 동작</h2>\n<p>TDZ은 선언문이 존재하는 스코프 범위 안에서 변수에 영향을 준다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/18183560/69510371-9cdf2b80-0ef1-11ea-8f0a-056a21cba932.png\" alt=\"03-limits-of-temporal-dead-zone-javascript\">\n(출처 : <a href=\"https://dmitripavlutin.com/javascript-variables-and-temporal-dead-zone/\">https://dmitripavlutin.com/javascript-variables-and-temporal-dead-zone/</a>)</p>\n<p>예제를 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">someVal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Function scope</span>\n  <span class=\"token keyword\">typeof</span> variable<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => undefined</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>someVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Inner block scope</span>\n    <span class=\"token keyword\">typeof</span> variable<span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws `ReferenceError`</span>\n    <span class=\"token keyword\">let</span> variable<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이 코드는 2개의 스코프를 가진다.</p>\n<ol>\n<li>함수 스코프</li>\n<li><code class=\"tui-language-text\">let</code> 변수가 선언된 내부 블록 스코프</li>\n</ol>\n<p>함수 스코프에서 <code class=\"tui-language-text\">typeof variable</code>는 <code class=\"tui-language-text\">undefined</code>로 평가된다. 여기서는 <code class=\"tui-language-text\">let variable</code> 구문의 TDZ에 영향을 주지 않는다.</p>\n<p><code class=\"tui-language-text\">typeof variable</code> 구문의 내부 스코프에서는 선언 전에 변수를 사용하면 <code class=\"tui-language-text\">ReferenceError: Cannot access &#39;variable&#39; before initialization</code> 에러가 발생한다. TDZ는 내부 스코프에서만 존재한다.</p>\n<h2 id=\"6-결론\" style=\"position:relative;\"><a href=\"#6-%EA%B2%B0%EB%A1%A0\" aria-label=\"6 결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 결론</h2>\n<p>TDZ는 <code class=\"tui-language-text\">const</code>, <code class=\"tui-language-text\">let</code>, <code class=\"tui-language-text\">class</code> 구문의 유효성에 영향을 미치는 중요한 개념이다. TDZ는 선언 전에 변수를 사용하는 것을 허용하지 않는다.</p>\n<p>반대로 <code class=\"tui-language-text\">var</code> 변수는 선언 전에도 사용할 수 있기 때문에 <code class=\"tui-language-text\">var</code> 사용은 피하는 것이 좋다.</p>\n<p>TDZ는 언어 스펙에 맞도록 좋은 코딩 습관을 만들어주기 때문에 좋다고 생각한다.</p>","frontmatter":{"id":"ko_20191014","title":"TDZ을 모른 채 자바스크립트 변수를 사용하지 말라","description":"간단한 질문을 하나 하겠다. 아래 코드 스니펫에서 에러가 발생할까? 첫 번째 코드는 인스턴스를 생성한 다음 클래스를 선언한다.","date":"2019.10.14","author":"류선임","tags":["ecmascript","es6"],"thumbnail":"https://user-images.githubusercontent.com/18183560/69510368-9badfe80-0ef1-11ea-8f8e-f4537808a37c.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20191014","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}