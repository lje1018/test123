{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20190314","result":{"data":{"post":{"html":"<h1 id=\"es2019의-새로운-기능\" style=\"position:relative;\"><a href=\"#es2019%EC%9D%98-%EC%83%88%EB%A1%9C%EC%9A%B4-%EA%B8%B0%EB%8A%A5\" aria-label=\"es2019의 새로운 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES2019의 새로운 기능</h1>\n<blockquote>\n<p>원문: <a href=\"https://developer.okta.com/blog/2019/01/22/whats-new-in-es2019#the-process-for-new-javascript-language-features_\">https://developer.okta.com/blog/2019/01/22/whats-new-in-es2019#the-process-for-new-javascript-language-features_</a></p>\n</blockquote>\n<p><img src=\"https://user-images.githubusercontent.com/35371660/58076262-b9b64180-7be4-11e9-856d-ad75e15afb96.png\" alt=\"1\"></p>\n<p>지난 몇 년 동안 자바스크립트는 새로운 언어로 꾸준하게 진화해왔다. 다음 버전의 자바스크립트 기능에 대해 궁금했다면 이 글이 도움이 될 것이다.</p>\n<p>먼저, 최신 기능에 관해 얘기하기 전에 아이디어가 자바스크립트의 일부가 되는 방식을 이해하는 게 중요하다.</p>\n<h2 id=\"새로운-자바스크립트-기능이-되는-과정\" style=\"position:relative;\"><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B8%B0%EB%8A%A5%EC%9D%B4-%EB%90%98%EB%8A%94-%EA%B3%BC%EC%A0%95\" aria-label=\"새로운 자바스크립트 기능이 되는 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새로운 자바스크립트 기능이 되는 과정</h2>\n<p>요컨대, 자바스크립트의 언어 스펙은 <a href=\"https://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript</a>라고 부르며, 이는 Ecma International의 기술 위원회 <a href=\"https://www.ecma-international.org/memento/tc39.htm\">TC39</a>에서 검토하고 채택한다. ECMAScript 명세를 변경할 때에는 성숙도에 따라 단계(stage)별로 나누어진 표준 프로세스를 거친다.</p>\n<ul>\n<li>Stage 0: 구상</li>\n<li>Stage 1: 정식 제안</li>\n<li>Stage 2: 초안</li>\n<li>Stage 3: 후보</li>\n<li>Stage 4: 승인</li>\n</ul>\n<p>Stage 4에 도달할 때까지 ECMAScript 스펙에 공식적으로 포함될 것이라는 보장은 없다. 하지만 <a href=\"https://v8.dev/\">V8</a>(Chrome과 Node.js에서 사용하고 있는)이나 파이어폭스의 <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey\">스파이더 몽키(SpiderMonkey)</a> 같은 자바스크립트 엔진 구현체들은 Stage 4에 도달하기 전에 개발자 테스트와 피드백을 받을 수 있도록 제안된 실험적인 기능을 지원한다.</p>\n<h2 id=\"현재-es2019-후보-기능\" style=\"position:relative;\"><a href=\"#%ED%98%84%EC%9E%AC-es2019-%ED%9B%84%EB%B3%B4-%EA%B8%B0%EB%8A%A5\" aria-label=\"현재 es2019 후보 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현재 ES2019 후보 기능</h2>\n<p>아직 이 글을 쓰는 시점까지(이 글을 번역하는 시점에도) Stage 4에는 새로운 <a href=\"https://github.com/tc39/proposals\">TC39의 제안</a>은 없다. 하지만, Stage 3 후보 기능들을 미리 만나볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">주의: Stage 3의 후보들이므로 최종 ES2019 스펙에 포함되지 않을 수 있다. \n    사실, 이 제안 중 몇 가지는 수년 동안 고려된 것도 존재한다. 따라서 최종 스펙의 형태나 동작이 현재 제안과 다를 수 있다.</code></pre></div>\n<h3 id=\"자바스크립트-클래스에서의-변화\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90%EC%84%9C%EC%9D%98-%EB%B3%80%ED%99%94\" aria-label=\"자바스크립트 클래스에서의 변화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 클래스에서의 변화</h3>\n<p><a href=\"https://github.com/tc39/proposal-class-fields\">필드</a> 선언, <a href=\"https://github.com/tc39/proposal-private-methods\">private 메서드와 필드</a>, <a href=\"https://github.com/tc39/proposal-static-class-features/\">static 메서드와 필드</a>를 포함하여 클래스에 제안된 변경사항이 존재한다. 다음은 그에 관한 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Truck</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Automobile</span> <span class=\"token punctuation\">{</span>\n  model <span class=\"token operator\">=</span> <span class=\"token string\">\"Heavy Duty\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// public 필드 선언</span>\n  #numberOfSeats <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// private 필드 선언</span>\n  #isCrewCab <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> #name <span class=\"token operator\">=</span> <span class=\"token string\">\"Truck\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// static private 필드 선언</span>\n\n  <span class=\"token comment\">// static 필드 메서드</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">formattedName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 'this' 대신 static 필드로 Truck 클래스의 name에 접근 할 수 있다.</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">This vehicle is a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> Truck<span class=\"token punctuation\">.</span>#name <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">model<span class=\"token punctuation\">,</span> seats <span class=\"token operator\">=</span> <span class=\"token number\">2</span></span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>seats <span class=\"token operator\">=</span> seats<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// private 필드 메서드</span>\n  <span class=\"token function\">#getBodyType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#isCrewCab <span class=\"token operator\">?</span> <span class=\"token string\">\"Crew Cab\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Standard Cab\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">bodyType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#numberOfSeats <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-passenger </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>model <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">#getBodyType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">seats</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#numberOfSeats<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">seats</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">value</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> value <span class=\"token operator\">>=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> value <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#numberOfSeats <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#isCrewCab <span class=\"token operator\">=</span> value <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>개인적으로 hash(<code class=\"tui-language-text\">#</code>) 구문으로 private을 표현하는 것을 좋아하지 않는다. 다른 언어들처럼 <code class=\"tui-language-text\">private</code> 키워드를 채택하는 것이 더 좋을 것 같다는 게 개인적인 의견이다.</p>\n<h3 id=\"string의-trimstart-와-trimend\" style=\"position:relative;\"><a href=\"#string%EC%9D%98-trimstart-%EC%99%80-trimend\" aria-label=\"string의 trimstart 와 trimend permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String의 trimStart() 와 trimEnd()</h3>\n<p><code class=\"tui-language-text\">String</code> 자료형에는 이미 문자열의 시작과 끝 공백 문자를 제거하는 <code class=\"tui-language-text\">trim()</code>메서드가 존재한다. 제안된 <a href=\"https://github.com/tc39/proposal-string-left-right-trim\"><code class=\"tui-language-text\">trimStart()</code>와 <code class=\"tui-language-text\">trimEnd()</code></a> 메서드는 추가로 문자열의 앞과 뒤를 분리해서 제어할 수 있게 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> one <span class=\"token operator\">=</span> <span class=\"token string\">\"      hello and let \"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> two <span class=\"token operator\">=</span> <span class=\"token string\">\"us begin.        \"</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> one<span class=\"token punctuation\">.</span><span class=\"token function\">trimStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> two<span class=\"token punctuation\">.</span><span class=\"token function\">trimEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"hello and let us begin.\"</span></code></pre></div>\n<p>흥미로운 점은 이미 많은 자바스크립트 엔진에서 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trimEnd#Browser_compatibility\">이미 이 기능을 구현했다는 점</a>이다. 이런 부분들은 브라우저가 언어를 발전시키는데 큰 도움을 주고 있다는 것을 의미한다.</p>\n<h3 id=\"더-큰-숫자-bigint\" style=\"position:relative;\"><a href=\"#%EB%8D%94-%ED%81%B0-%EC%88%AB%EC%9E%90-bigint\" aria-label=\"더 큰 숫자 bigint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더 큰 숫자, BigInt</h3>\n<p><a href=\"https://github.com/tc39/proposal-bigint\">BigInt</a>는 새로운 원시 자료형이며 현재 자바스크립트에서 나타낼 수 있는 최댓값인 2^53보다 더 큰 값을 나타낼 수 있다. <code class=\"tui-language-text\">BigInt</code>을 선언하는 여러 방법은 밑에서 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 현재 </span>\n<span class=\"token keyword\">const</span> theBiggestIntegerToday <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_SAFE_INTEGER</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9007199254740991</span>\n\n<span class=\"token comment\">// 'n' 구문을 이용하여 BigInt를 사용했을 때 </span>\n<span class=\"token keyword\">const</span> ABiggerInteger <span class=\"token operator\">=</span> <span class=\"token number\">9100000000000001n</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// BigInt() 생성자를 사용했을 때</span>\n<span class=\"token keyword\">const</span> EvenBigger <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span> <span class=\"token number\">9100000000000002</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9100000000000002n</span>\n\n<span class=\"token comment\">// BigInt() 생성자를 문자열과 사용했을 때</span>\n<span class=\"token keyword\">const</span> SuchBigWow <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"9100000000000003\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9100000000000003n</span></code></pre></div>\n<p><code class=\"tui-language-text\">BigInt</code>에 대한 더 자세한 사용 사례와 문제는 <a href=\"https://developers.google.com/web/updates/2018/05/bigint\">다음 글</a>을 참고하라.</p>\n<h3 id=\"flat-와-flatmap를-이용한-배열-펼치기\" style=\"position:relative;\"><a href=\"#flat-%EC%99%80-flatmap%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B0%B0%EC%97%B4-%ED%8E%BC%EC%B9%98%EA%B8%B0\" aria-label=\"flat 와 flatmap를 이용한 배열 펼치기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flat() 와 flatMap()를 이용한 배열 펼치기</h3>\n<p>만약 함수형 프로그래밍에 대해 공부한 적이 있다면, <a href=\"https://github.com/tc39/proposal-flatMap\">flat()과 flatMap()</a>에 대해 쉽게 이해할 수 있을 것이다. <code class=\"tui-language-text\">flat()</code>은 값의 배열 혹은 더 많은 배열을 받아 새로운 1차원 배열을 반환하도록 설계되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> nestedArraysOhMy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// .flat() 은 depth를 나타내는 매개변수를 옵션으로 받는다.</span>\n<span class=\"token keyword\">const</span> ahhThatsBetter <span class=\"token operator\">=</span> nestedArraysOhMy<span class=\"token punctuation\">.</span><span class=\"token function\">flat</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> ahhThatsBetter <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ \"a\", \"b\", \"c\", \"d\", \"e\", \"f\" ]</span></code></pre></div>\n<p><code class=\"tui-language-text\">flatMap()</code>은 <code class=\"tui-language-text\">map()</code>과 비슷하지만, 콜백 함수가 배열을 반환하더라도 최종 결과물은 중첩된 배열이 아니라 1차원으로 펼쳐진 배열이 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">const</span> scattered <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"my favorite\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hamburger\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"is a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"chicken sandwich\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 중첩된 배열에서 map()의 결과이다.</span>\n<span class=\"token keyword\">const</span> huh <span class=\"token operator\">=</span> scattered<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">chunk</span> <span class=\"token operator\">=></span> chunk<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\" \"</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> huh <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ [ \"my\", \"favorite\" ], [ \"hamburger\" ], [ \"is\", \"a\" ], [ \"chicken\", \"sandwich\" ] ]</span>\n\n<span class=\"token comment\">// flatMap() 은 결과의 배열을 합친 결과를 반환한다.</span>\n<span class=\"token keyword\">const</span> better <span class=\"token operator\">=</span> scattered<span class=\"token punctuation\">.</span><span class=\"token function\">flatMap</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">chunk</span> <span class=\"token operator\">=></span> chunk<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\" \"</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> better <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ \"my\", \"favorite\", \"hamburger\", \"is\", \"a\", \"chicken\", \"sandwich\" ]</span></code></pre></div>\n<h3 id=\"그-외의-es2019-후보-기능\" style=\"position:relative;\"><a href=\"#%EA%B7%B8-%EC%99%B8%EC%9D%98-es2019-%ED%9B%84%EB%B3%B4-%EA%B8%B0%EB%8A%A5\" aria-label=\"그 외의 es2019 후보 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그 외의 ES2019 후보 기능</h3>\n<p>다음은 위에서 언급한 기능을 제외한 Stage3 기능이다.</p>\n<ul>\n<li>표준화된 <a href=\"https://github.com/tc39/proposal-global\">globalThis</a> 객체</li>\n<li>동적 <a href=\"https://github.com/tc39/proposal-dynamic-import\">import()</a></li>\n<li><a href=\"https://github.com/tc39/proposal-regexp-legacy-features\">Legacy RegExp</a></li>\n<li><a href=\"https://github.com/tc39/proposal-import-meta\">import.meta</a></li>\n<li>문자열 <a href=\"https://github.com/tc39/proposal-string-matchall\">matchAll()</a></li>\n<li><a href=\"https://github.com/tc39/proposal-object-from-entries\">Object.fromEntries()</a></li>\n<li>유니코드 형식에 맞는 <a href=\"https://github.com/tc39/proposal-well-formed-stringify\">JSON.stringify</a></li>\n<li>Command-line interface(CLI) 어플리케이션을 위한 표준화된 <a href=\"https://github.com/tc39/proposal-hashbang\">Hashbang</a></li>\n</ul>\n<h2 id=\"언제-es2019가-나올까\" style=\"position:relative;\"><a href=\"#%EC%96%B8%EC%A0%9C-es2019%EA%B0%80-%EB%82%98%EC%98%AC%EA%B9%8C\" aria-label=\"언제 es2019가 나올까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>언제 ES2019가 나올까?</h2>\n<p>지난 몇 년간, TC39는 지속해서 새로운 ECMA-262 ECMAScript 스펙을 6월에 발표했다. 올해 6월에 ES2019가 발표될 가능성이 가장 높다.</p>\n<h2 id=\"es2019-미리-사용해보기\" style=\"position:relative;\"><a href=\"#es2019-%EB%AF%B8%EB%A6%AC-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"es2019 미리 사용해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES2019 미리 사용해보기</h2>\n<p>제안된 기능들 중 이미 자바스크립트 엔진 및 유틸리티에서 사용할 수 있는 기능이 있다. 새로운 기능들은 기본적으로 비활성화되어 있지만 설정을 활성화하여 사용할 수 있다.</p>\n<h3 id=\"최신-nodejs에서-테스트하기\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%8B%A0-nodejs%EC%97%90%EC%84%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EA%B8%B0\" aria-label=\"최신 nodejs에서 테스트하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최신 Node.js에서 테스트하기</h3>\n<p><a href=\"https://nodejs.org/en/\">Node.js</a>는 Chrome V8 엔진을 사용한다. V8 엔진이 일부 후보 기능들을 지원하기 때문에 최신 버전의 Node.js에서 이 기능들을 사용해 볼 수 있다.(e.g <code class=\"tui-language-text\">Array.prototype.flat</code>, <code class=\"tui-language-text\">String.prototype.trimEnd</code>). </p>\n<p><code class=\"tui-language-text\">--harmony-{feature-flag}</code> 커맨드 라인 옵션을 통해 새로운 기능들을 가능하게 한다. 사용중인 Node.js에서 지원하는 후보 기능을 보려면  <code class=\"tui-language-text\">--v8-options</code> 옵션을 사용한다. 후보 기능들 중 일부는 \"in progress.\"로 표시된다.</p>\n<h4 id=\"macos--linux\" style=\"position:relative;\"><a href=\"#macos--linux\" aria-label=\"macos  linux permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>macOS / Linux</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"tui-language-bash\"><code class=\"tui-language-bash\">node --v8-options <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"in progress\"</span></code></pre></div>\n<h4 id=\"windows\" style=\"position:relative;\"><a href=\"#windows\" aria-label=\"windows permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"tui-language-bash\"><code class=\"tui-language-bash\">node --v8-options <span class=\"token operator\">|</span> <span class=\"token function\">find</span> <span class=\"token string\">\"in progress\"</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/35371660/58076265-ba4ed800-7be4-11e9-824b-ec22700d0252.png\" alt=\"2\"></p>\n<p>예를 들어 필드선언과 static 메소드를 Node.js 어플리케이션에서 사용하고 싶다면, CLI 옵션을 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"tui-language-bash\"><code class=\"tui-language-bash\">node --harmony-class-fields --harmony-static-fields index.js</code></pre></div>\n<h3 id=\"babel-70에서-테스트하기\" style=\"position:relative;\"><a href=\"#babel-70%EC%97%90%EC%84%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EA%B8%B0\" aria-label=\"babel 70에서 테스트하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Babel 7.0+에서 테스트하기</h3>\n<p><a href=\"https://babeljs.io/\">Babel</a>은 모든 브라우저 및 개발환경에서 아직 지원하지 않을 수 있는 최신 기능들을 사용할 수 있게 해주는 유틸리티이다. \"모던\" 자바스크립트를 작성하면, Babel은 작성한 코드를 오래된 엔진에서 사용할 수 있는 구문으로 변환한다.</p>\n<p>Babel <a href=\"https://babeljs.io/docs/en/plugins\">플러그인</a>은 여러 실험적인 기능들을 지원한다. 또한 Babel은 공식 저장소에 <a href=\"https://github.com/babel/proposals/\">ECMAScript에서 제안된 기능 목록</a>을 보관한다.</p>\n<h2 id=\"자바스크립트와-es-next에-좀-더-배우고-싶다면\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%99%80-es-next%EC%97%90-%EC%A2%80-%EB%8D%94-%EB%B0%B0%EC%9A%B0%EA%B3%A0-%EC%8B%B6%EB%8B%A4%EB%A9%B4\" aria-label=\"자바스크립트와 es next에 좀 더 배우고 싶다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트와 ES Next에 좀 더 배우고 싶다면</h2>\n<p>자바스크립트에 대해 좀 더 궁금한 사람들을 위한 글을 준비했다.</p>\n<ul>\n<li><a href=\"https://developer.okta.com/blog/2018/12/19/learn-javascript-in-2019\">Learn JavaScript in 2019!</a></li>\n<li><a href=\"https://developer.okta.com/blog/2019/01/16/history-and-future-of-async-javascript\">The History (and Future) of Asynchronous JavaScript</a></li>\n<li><a href=\"https://scotch.io/tutorials/build-a-secure-nodejs-application-with-javascript-async-await-using-hapi\">Build a Secure Node.js Application with JavaScript Async Await Using Hapi</a></li>\n<li><a href=\"https://developer.okta.com/blog/2018/11/15/node-express-typescript\">Use TypeScript to Build a Node API with Express</a></li>\n</ul>\n<p>관심이 있다면 ES2015, ES2016, ES2017 같은 이전 버전의 <a href=\"https://www.ecma-international.org/publications/standards/Ecma-262-arch.htm\">ECMAScript 스펙</a>을 확인 할 수 있다.</p>","frontmatter":{"id":"ko_20190314","title":"ES2019의 새로운 기능(What's New in JavaScript for 2019)","description":"지난 몇 년 동안 자바스크립트는 새로운 언어로 꾸준하게 진화해왔다. 다음 버전의 자바스크립트 기능에 대해 궁금했다면 이 글이 도움이 될 것이다. 먼저, 최신 기능에 관해 얘기하기 전에 아이디어가 자바스크립트의 일부가 되는 방식을 이해하는 게 중요하다.","date":"2019.03.14","author":"한정","tags":["es6"],"thumbnail":"https://user-images.githubusercontent.com/35371660/58076262-b9b64180-7be4-11e9-856d-ad75e15afb96.png"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20190314","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}