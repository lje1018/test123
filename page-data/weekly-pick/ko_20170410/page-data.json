{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20170410","result":{"data":{"post":{"html":"<h1 id=\"웹어셈블리-바로-사용-해보기\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC-%EB%B0%94%EB%A1%9C-%EC%82%AC%EC%9A%A9-%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"웹어셈블리 바로 사용 해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹어셈블리 바로 사용 해보기</h1>\n<blockquote>\n<p>원글: <a href=\"https://tutorials.technology/tutorials/11-webassembly-initial-steps-tutorial.html\">https://tutorials.technology/tutorials/11-webassembly-initial-steps-tutorial.html</a></p>\n</blockquote>\n<h2 id=\"소개\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EA%B0%9C\" aria-label=\"소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소개</h2>\n<p>웹어셈블리는 미래에 매우 유용하게 사용될 새롭고도 새로운 표준이다. 이 기술은 W3C 커뮤니티 그룹에서 애플, 구글 , 마이크로소프트 그리고 모질라와 함께 개발되고 있다. 이 프로젝트의 초기 시점인 지금은 고 수준의 언어가 아닌 C/C++로 초점이 맞춰져 있고 웹어셈블리의 약어는 <strong>wasm</strong> 이며 자바스크립트와 브라우저의 개선 사항 중 하나이다. 웹어셈블리는 자바스크립트를 대체하려는 목적이 아니며 사실 보완하려고 나왔다. 웹어셈블리를 사용하려면 크롬 카나리 버전이나 파이어폭스 나이틀리 버전을 설치해야 한다. 마이크로소프트의 엣지 프리뷰와 사파리도 곧 이 기술을 적용할 예정이다. 가장 큰 이점은 빠른 실행이지만 웹 프로그래밍이 더 이상 자바스크립트만으로 제한되지 않는다는 장점도 있다. 이 튜토리얼에서는 브라우저가 웹어셈블리를 실행할 수 있게 세팅하고 웹어셈블리를 컴파일할 수 있도록 필요한 도구들을 컴파일할 것이며 최종적으로 웹어셈블리가 printf를 수행하는 Hello world 예제를 만들어 볼 것이다.</p>\n<p>자 시작해보자!</p>\n<h2 id=\"스텝-1-데모를-확인할-브라우저를-설치한다\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%85%9D-1-%EB%8D%B0%EB%AA%A8%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%A0-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EB%A5%BC-%EC%84%A4%EC%B9%98%ED%95%9C%EB%8B%A4\" aria-label=\"스텝 1 데모를 확인할 브라우저를 설치한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스텝 1: 데모를 확인할 브라우저를 설치한다.</h2>\n<p>현재 크롬 카나리는 리눅스를 지원하지 않으니 파이어폭스 나이틀리를 설치한다. 맥이나 윈도우 유저는 크롬 카나리를 이용할 것을 권장한다. 파이어폭스를 실행할 때는 절대 경로를 이용해서 실행해야 한다. 그렇지 않으면 인스톨 된 일반 파이어폭스가 실행된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">cd\nwget https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central/firefox-53.0a1.en-US.linux-x86_64.tar.bz2\ntar xf firefox-53.0a1.en-US.linux-i686.tar.bz2\ncd firefox\n./firefox</code></pre></div>\n<p>상태바를 확인해서 파이어폭스 나이틀리 버전이 실행되었는지 확인한다. 브라우저가 웹어셈블리를 사용할 수 있도록 설정한다.</p>\n<ul>\n<li>파이어폭스의 경우 주소창에 <strong>about:config</strong> 을 입력해 이동을 한다. 이동하게 되면 경고 얼럿이 뜨는데 수락해 주고 서치바에서 wasm을 입력하고 <strong>javascript.options.wasm</strong> 을 더블클릭해 값이 true가 되도록 바꾼다. 그리고 브라우저를 다시 시작한다.</li>\n<li>크롬 카나리의 경우 주소창에 <strong>chrome://flags</strong> 를 입력하고 <strong>Experimental WebAssembly</strong> 항목이 나올 때까지 스크롤하고 링크를 클릭해 활성화 한 뒤 브라우저를 재실행 한다.(역: 번역 시점 최신 버전인 카나리 59 버전에서는 별도의 설정을 안 해도 된다.)</li>\n</ul>\n<p><a href=\"http://webassembly.org/demo/\">여기</a>에서 웹어셈블리의 데모를 확인할 수 있다.</p>\n<h2 id=\"스텝-2-우분투의-요구-사항\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%85%9D-2-%EC%9A%B0%EB%B6%84%ED%88%AC%EC%9D%98-%EC%9A%94%EA%B5%AC-%EC%82%AC%ED%95%AD\" aria-label=\"스텝 2 우분투의 요구 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스텝 2: 우분투의 요구 사항</h2>\n<p>우분투에서 binaryen 툴체인을 이용하려면 몇 가지 라이브러리를 컴파일해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">sudo apt-get install git cmake make ninja-build</code></pre></div>\n<p>웹어셈블리가 지원되는 LLVM을 빌드 하려면 최소한 3.4.4 버전 이상의 cmake가 필요하다. 하단에 부록 파트를 살펴보면 소스 코드를 이용해 cmake를 설치하는 방법을 찾을 수 있다.</p>\n<h2 id=\"스텝-3-인프라스트럭처와-툴체인-컴파일\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%85%9D-3-%EC%9D%B8%ED%94%84%EB%9D%BC%EC%8A%A4%ED%8A%B8%EB%9F%AD%EC%B2%98%EC%99%80-%ED%88%B4%EC%B2%B4%EC%9D%B8-%EC%BB%B4%ED%8C%8C%EC%9D%BC\" aria-label=\"스텝 3 인프라스트럭처와 툴체인 컴파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스텝 3: 인프라스트럭처와 툴체인 컴파일</h2>\n<p>일단 LLVM이 웹어셈블리를 지원하도록 준비해야 한다. 만약 오래된 버전의 cmake를 사용하고 있다면 이 튜토리얼의 하단에 위치한 부록 파트를 확인한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">git clone http://llvm.org/git/llvm.git\ncd llvm/tools\ngit clone http://llvm.org/git/clang.git\ncd ../projects\ngit clone http://llvm.org/git/compiler-rt.git\ncd ..\nmkdir build\ncd build\ncmake -G Ninja -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=WebAssembly ..\nninja\nninja install</code></pre></div>\n<p>만약 닌자가 메모리를 너무 많이 사용하는 경우 아래의 항목 살펴봐라(컴파일을 느리게 하는 원인들이다.)</p>\n<ul>\n<li>스왑 스페이스의 사용을 비활성화해 시스템이 멈추는것을 피한다 <strong>sudo swapoff -a</strong></li>\n<li><strong>echo $MAKEFLAFS</strong> 의 내용을 확인해 얼마나 많은 프로세서가 컴파일할 때 사용되는지 확인한다. <strong>ninja -j1</strong> 을 이용하는 것을 추천한다.</li>\n<li>메모리를 적게 사용하는 골드 링커를 이용한다. 골드 링커를 이용하려면 <strong>id(id.bfd)</strong> 의 심벌릭 링크를 <strong>id.gold</strong> 로 변경한다.</li>\n</ul>\n<p><strong>id.bfg*를 *id.gold</strong> 로 변경하기 위해선 아래의 과정을 거친다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">ls -lah /usr/bin/ld # check which ld you are using\nsudo rm /usr/bin/ld\nsudo ln -s /usr/bin/ld.gold /usr/bin/ld\nls -lah /usr/bin/ld # check that you are using gold linker</code></pre></div>\n<p>스왑 스페이스를 다시 켜려면 <strong>sudo sudo swapon -a</strong> 를 입력한다. 그리고 이제 <strong>Binaryen</strong> 을 컴파일한다. <strong>Binaryen</strong> 는 최소 세 개의 필요한 바이너리들을 제공한다.</p>\n<ul>\n<li>asm.js를 컴파일 하기 위한 <strong>asm2wasm</strong></li>\n<li>LLVM 웹어셈블리 백엔드 <code class=\"tui-language-text\">.s</code> 아웃풋 파일을 컴파일 하기 위한 <strong>s2wasm</strong></li>\n<li>Rust MIR를 컴파일 하기 위한 <strong>mir2wasm</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">cd\ngit clone https://github.com/WebAssembly/binaryen\ncd binaryen\ncmake .\nmake</code></pre></div>\n<p>컴파일이 끝나면 bin 디렉터리에 필요한 실행파일들을 얻게 된다. 필요에 따라 <strong>sudo make install</strong> 을 수행할 수 있다. 마지막으로 WABT(The WebAssembly Binary Toolkit)을 아래의 순서에 따라 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">git clone https://github.com/WebAssembly/wabt.git\ncd wabt\nmkdir build\ncd build\ncmake -G Ninja -DBUILD_TESTS=OFF ..\nninja\nsudo ninja install</code></pre></div>\n<h2 id=\"스텝-4-hello-world-예제\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%85%9D-4-hello-world-%EC%98%88%EC%A0%9C\" aria-label=\"스텝 4 hello world 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스텝 4: HELLO WORLD 예제</h2>\n<p>웹어셈블리 Hello world 어플리케이션을 실행하려면 html 템플릿과 필요한 코드를 준비해야 한다. 아래의 <strong>hello_world</strong> 라는 새 디렉터리를 만들고 그 안에 아래의 html 코드를 index.html로 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"tui-language-html\"><code class=\"tui-language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content-Type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Hello world<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'WebAssembly'</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello_world.wasm'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Fetch the binary</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">arrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">buffer</span> <span class=\"token operator\">=></span> WebAssembly<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Get a Module from the buffer</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">module</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              <span class=\"token comment\">// Get an Instance of the Module</span>\n              <span class=\"token keyword\">const</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebAssembly<span class=\"token punctuation\">.</span>Instance</span><span class=\"token punctuation\">(</span>module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"count function result is : \"</span> <span class=\"token operator\">+</span> instance<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        output<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"Your browser doesn't support Web Assembly. You may need \"</span> <span class=\"token operator\">+</span>\n        <span class=\"token string\">\"to enable it in your browser's flags.\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Click me to execute hello world!<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>그리고 C를 이용해 출력해 보자, 아래의 내용을 hello_world.c로 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"tui-language-c\"><code class=\"tui-language-c\"><span class=\"token keyword\">int</span> counter <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> counter <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 컴파일을 수행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">clang -emit-llvm --target=wasm32 -S hello_world.c\nllc hello_world.ll -march=wasm32\ns2wasm hello_world.s &gt; hello_world.wast\nwast2wasm -o hello_world.wasm hello_world.wast</code></pre></div>\n<h2 id=\"스텝-5-예제를-열어본다\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%85%9D-5-%EC%98%88%EC%A0%9C%EB%A5%BC-%EC%97%B4%EC%96%B4%EB%B3%B8%EB%8B%A4\" aria-label=\"스텝 5 예제를 열어본다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스텝 5: 예제를 열어본다.</h2>\n<p>드디어 이번 단계에서 파이어폭스를 통해 예제 파일을 열어본다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">cd hello_world\npython -m SimpleHTTPServer 8000</code></pre></div>\n<p>혹은 <strong>wasm-cli</strong> 를 이용해 wasm 파일만 테스트 해볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">npm install -g wasm-cli\nwasm hello_world.wasm</code></pre></div>\n<p><a href=\"http://localhost:8000\">http://localhost:8000</a> 을 파이어폭스 주소창에 입력해 예제를 열어본다.</p>\n<h2 id=\"부록\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EB%A1%9D\" aria-label=\"부록 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부록</h2>\n<h3 id=\"error-libgtk-3so0-cannot-open-shared-object-file-no-such-file-or-directory\" style=\"position:relative;\"><a href=\"#error-libgtk-3so0-cannot-open-shared-object-file-no-such-file-or-directory\" aria-label=\"error libgtk 3so0 cannot open shared object file no such file or directory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error libgtk-3.so.0: cannot open shared object file: No such file or directory</h3>\n<p>파이어폭스 53 버전을 실행하려 할때 아래의 에러를 만날 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">XPCOMGlueLoad error for file /home/parallels/firefox-32/libmozgtk.so:\nlibgtk-3.so.0: cannot open shared object file: No such file or directory\nCouldn&#39;t load XPCOM.</code></pre></div>\n<p>이럴땐</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">locate libgtk-3.so.0</code></pre></div>\n<p>위와 같이 입력해 아래의 결과가 출력이 된다면</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">/usr/lib/x86_64-linux-gnu/libgtk-3.so.0\n/usr/lib/x86_64-linux-gnu/libgtk-3.so.0.1000.8</code></pre></div>\n<p>64비트 버전의 모질라 파이어폭스를 다운로드 해야한다.</p>\n<h3 id=\"error-gdk_backend-does-not-match-available-displays\" style=\"position:relative;\"><a href=\"#error-gdk_backend-does-not-match-available-displays\" aria-label=\"error gdk_backend does not match available displays permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error: GDK_BACKEND does not match available displays</h3>\n<p>위와 같은 에러 메세지를 만나면 DISPLAY 환경 변수를 셋팅해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">export DISPLAY=:0.0</code></pre></div>\n<p>위의 내용을 <strong>.bashrc</strong> 나 <strong>.zshrc</strong> 에 추가해 언제나 값이 설정되도록 한다.</p>\n<h3 id=\"error-cmake-343-or-higher-is-required-you-are-running-version-322\" style=\"position:relative;\"><a href=\"#error-cmake-343-or-higher-is-required-you-are-running-version-322\" aria-label=\"error cmake 343 or higher is required you are running version 322 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error: CMake 3.4.3 or higher is required. You are running version 3.2.2</h3>\n<p>이 에러를 해결하려면 cmake를 다운로드해 컴파일 해야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">wget https://cmake.org/files/v3.7/cmake-3.7.0.tar.gz\ntar -xf cmake-3.7.0.tar.gz\ncd cmake-3.7.0\n./bootstrap\nmake\nsudo make install</code></pre></div>\n<h3 id=\"error-uncaught-referenceerror-wasm-is-not-defined\" style=\"position:relative;\"><a href=\"#error-uncaught-referenceerror-wasm-is-not-defined\" aria-label=\"error uncaught referenceerror wasm is not defined permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error: Uncaught ReferenceError: Wasm is not defined</h3>\n<p><strong>Wasm.instantiateModule()</strong> 대신 <strong>WebAssembly.instance()</strong> 를 사용한다.</p>\n<h3 id=\"error-uncaught-error-memory-access-out-of-bounds\" style=\"position:relative;\"><a href=\"#error-uncaught-error-memory-access-out-of-bounds\" aria-label=\"error uncaught error memory access out of bounds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error: Uncaught Error: memory access out of bounds</h3>\n<p>이 이슈에 대해서 다시 업데이트할 예정이지만 이 문제는 간혹 <strong>s2wasm</strong> 을 사용할 때 <strong>–allocate-stack</strong> 옵션으로 해결이 될 때가 있다.</p>\n<h2 id=\"역자-부록맥과-크롬-카나리-환경을-위한-팁\" style=\"position:relative;\"><a href=\"#%EC%97%AD%EC%9E%90-%EB%B6%80%EB%A1%9D%EB%A7%A5%EA%B3%BC-%ED%81%AC%EB%A1%AC-%EC%B9%B4%EB%82%98%EB%A6%AC-%ED%99%98%EA%B2%BD%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%8C%81\" aria-label=\"역자 부록맥과 크롬 카나리 환경을 위한 팁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>역자 부록(맥과 크롬 카나리 환경을 위한 팁)</h2>\n<ul>\n<li>스텝 3의 첫번째, LLVM을 설치하기 전에 ninja-build를 설치해야 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">brew install ninja</code></pre></div>\n<ul>\n<li>LLVM은 다운로드하고 컴파일 하는 과정이 정말 오래 걸린다.</li>\n<li>역자의 경우 스텝 3의 첫번째 LLVM 설치하는 부분에서 <strong>ninja install</strong> 은 <strong>sudo ninja install</strong> 로 권한을 주고 설치해야 했다.</li>\n<li>binaryen 을 make 로 빌드한뒤 <strong>sudo make install</strong> 로 인스톨 해야 툴들의 경로가 제대로 잡힌다.</li>\n</ul>","frontmatter":{"id":"ko_20170410","title":"웹어셈블리 바로 사용해 보기","description":"웹어셈블리는 미래에 매우 유용하게 사용될 새롭고도 새로운 표준이다. 이 기술은 W3C 커뮤니티 그룹에서 애플, 구글 , 마이크로소프트 그리고 모질라와 함께 개발되고 있다. 이 프로젝트의 초기 시점인 지금은 고 수준의 언어가 아닌 C/C++로 초점이 맞춰져 있고 웹어셈블리의 약어는 wasm 이며 자바스크립트와 브라우저의 개선 사항 중 하나이다. 웹어셈블리는 자바스크립트를 대체하려는 목적이 아니며 사실 보완하려고 나왔다.","date":"2017.04.10","author":"김성호","tags":["WebAssembly"],"thumbnail":null}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20170410","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}