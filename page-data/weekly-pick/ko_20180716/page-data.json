{"componentChunkName":"component---src-templates-weekly-pick-post-tsx","path":"/weekly-pick/ko_20180716","result":{"data":{"post":{"html":"<h1 id=\"트리-쉐이킹으로-자바스크립트-페이로드-줄이기\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%AC-%EC%89%90%EC%9D%B4%ED%82%B9%EC%9C%BC%EB%A1%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%8E%98%EC%9D%B4%EB%A1%9C%EB%93%9C-%EC%A4%84%EC%9D%B4%EA%B8%B0\" aria-label=\"트리 쉐이킹으로 자바스크립트 페이로드 줄이기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트리 쉐이킹으로 자바스크립트 페이로드 줄이기</h1>\n<blockquote>\n<p>원문 : <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking/#go_shake_some_trees\">https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking/#go_shake_some_trees</a></p>\n</blockquote>\n<p>오늘날 웹 애플리케이션들은 굉장히 크고, 대부분 자바스크립트로 만들어진 것이다.\n2018년 중순, HTTP Archive가 보여준 <a href=\"https://httparchive.org/reports/state-of-javascript#bytesJs\">모바일 장치에서 자바스크립트의 평균 전송 크기</a>는 약 350 KB 이다.\n이것은 단순히 전송 크기이다!\n자바스크립트는 네트워크 전송될 때 주로 압축된다.\n이는 압축을 풀고 나면 자바스크립트 실제 크기가 더 늘어난다는 것을 의미한다.\n중요한 포인트다.\n자원 프로세싱이 걱정된다면, 압축은 적절하지 않다.\n압축되지 않은 900 KB의 자바스크립트는 파서와 컴파일러에서 여전히 동일한 크기를 가지고, 압축되면 300 KB까지 줄어들게 될 것이다.</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking/images/figure-1.svg\"></p>\n<p><strong>그림 1.</strong> 자바스크립트 다운로드와 실행 과정.\n스크립트의 전송 크기는 300 KB로 압축되지만, 파싱되고 컴파일 및 실행되면 900 KB로 늘어난다.</p>\n<p>자바스크립트는 수행하는데 비용이 많이 드는 자원이다.\n다운로드하는 동안에만 잠깐 디코딩 시간이 발생하는 이미지와 다르게, 자바스크립트는 파싱되고 컴파일되고 마침내 실행된다.\n바이트 단위의 전송은, 다른 종류의 자원보다 자바스크립트에서 더 많은 비용을 발생시킨다.</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking/images/figure-2-1x.png\"></p>\n<p><strong>그림 2.</strong> 170 KB 크기의 자바스크립트 파싱/컴파일링 수행 비용 vs 동일한 크기의 JPEG 이미지 디코딩 시간 (<a href=\"https://medium.com/dev-channel/the-cost-of-javascript-84009f51e99e\">출처</a>)</p>\n<p><a href=\"https://blog.mozilla.org/javascript/2017/12/12/javascript-startup-bytecode-cache/\">자바스크립트 엔진 효율성을 향상</a>시키기 위한 <a href=\"https://v8project.blogspot.com/2018/03/background-compilation.html\">지속적인 개선이 이루어지는</a> 반면 늘 그렇듯, 자바스크립트 성능 향상은 개발자의 몫이다.\n결국, 어플리케이션 설계를 개선하는데 개발자 자신보다 더 나은 사람이 있을까?</p>\n<p>마지막은 자바스크립트 성능을 개선하기 위한 기술들이 있다.\n<a href=\"https://webpack.js.org/guides/code-splitting/\">코드 스플리팅(Code Splitting)</a>은 자바스크립트 청크로 애플리케이션을 분할하고, 청크를 필요로 하는 애플리케이션의 경로에만 이 청크들을 배분하여 성능을 개선하는 기술이다.\n그러나 이 기술을 사용한다고 해서, 사용되지 않는 코드를 포함한 무거운 자바스크립트 애플리케이션의 일반적인 문제를 해결하지는 못한다.\n이 문제의 해법을 트리 쉐이킹(Tree Shaking)에서 찾을 수 있다.</p>\n<h2 id=\"트리-쉐이킹이란-무엇인가\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%AC-%EC%89%90%EC%9D%B4%ED%82%B9%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"트리 쉐이킹이란 무엇인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트리 쉐이킹이란 무엇인가?</h2>\n<p><a href=\"https://en.wikipedia.org/wiki/Tree_shaking\">트리 쉐이킹</a>은 사용하지 않는 코드를 제거하는 방식이다.\n<a href=\"https://github.com/rollup/rollup#tree-shaking\">이 용어는 Rollup에 의해 인기를 얻게 되었으나</a>, 사용하지 않는 코드 제거에 대한 개념은 이미 존재했었다.\n또한 이 개념은 <a href=\"https://webpack.js.org/guides/tree-shaking/\">webpack</a>에서도 찾아볼 수 있고, 이번 아티클에서 예제 앱을 통해 설명한다.</p>\n<p>\"트리 쉐이킹\" 용어는 당신이 만든 애플리케이션의 멘탈 모델(mental model)과 디펜던시 트리 구조에서 유래되었다.\n트리 내 각 노드들은 앱을 위해 특징적인 기능들을 제공하는 디펜던시들을 나타낸다.\n최신 앱에서는 이러한 디펜던시들을 다음과 같이 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\">정적 <code class=\"tui-language-text\">import</code> 구문</a>으로 가져올 수 있다:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 모든 배열 유틸리티들을 가져온다.</span>\n<span class=\"token keyword\">import</span> arrayUtils <span class=\"token keyword\">from</span> <span class=\"token string\">\"array-utils\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>참고: ES6 모듈이 무엇인지 모른다면, <a href=\"https://ponyfoo.com/articles/es6-modules-in-depth\">Pony Foo의 훌륭한 설명</a>을 추천한다. 아티클을 읽다가 아무 것도 모르겠다면, 이 가이드는 ES6 모듈 동작에 대한 지식을 얻는데 도움이 될 것이다.</p>\n</blockquote>\n<p>당신의 애플리케이션이 이제 막 만들어졌다면 비교적 적은 양의 디펜던시를 가질 것이다.\n또한 추가된 디펜던시 대부분을 사용할 것이다.\n하지만 애플리케이션이 오래될수록 더 많은 디펜던시들이 추가될 수 있다.\n복잡한 문제들을 위해 오래된 디펜던시들을 빼지만, 코드에서는 제거되지 못할 수 있다.\n마지막은 <a href=\"https://developers.google.com/web/updates/2018/05/lighthouse#unused_javascript\">사용하지 않는</a> 대량의 자바스크립트 코드들과 함께 앱이 끝나는 것이다.\n트리 쉐이킹은 정적 ES6 모듈의 특정 부분을 가져오는 <code class=\"tui-language-text\">import</code> 구문의 이점을 사용해 이러한 문제를 해결할 것이다:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 유틸의 일부만 가져온다.</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> unique<span class=\"token punctuation\">,</span> implode<span class=\"token punctuation\">,</span> explode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"array-utils\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이전에 본 <code class=\"tui-language-text\">import</code> 구문과 차이점은, 이전 예제에서는 <code class=\"tui-language-text\">&quot;array-utils&quot;</code> 모듈을 <em>모두</em> 가져오지만 이 예제에서는 모듈의 특정 부분만 가져온다.\n개발 빌드에서는 어떤 것도 설정하지 않았기 때문에 import 된 것과 상관 없이 전체 모듈을 가져온다.\n그러나 프로덕션 빌드에서는 명시적으로 import 되지 않은 ES6 모듈로부터 <a href=\"https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export\"><code class=\"tui-language-text\">export</code></a>를 \"떨어버리기(shake)\" 위해서 webpack을 설정하고, 빌드 결과물 크기를 더 작게 만들 수 있다.\n이번 가이드에서 어떻게 이것을 할 수 있는지 배우게 될 것이다.</p>\n<h2 id=\"트리-쉐이킹-할-수-있는-지점-찾기\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%AC-%EC%89%90%EC%9D%B4%ED%82%B9-%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EC%A7%80%EC%A0%90-%EC%B0%BE%EA%B8%B0\" aria-label=\"트리 쉐이킹 할 수 있는 지점 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트리 쉐이킹 할 수 있는 지점 찾기</h2>\n<p>이해를 돕기 위해 필자는 <a href=\"https://github.com/malchata/webpack-tree-shaking-example\">예제 앱</a>을 만들었다.\n이 예제는 트리 쉐이킹이 어떻게 동작하는지 설명하기 위해 webpack을 사용했다.\n당신은 리포지터리를 클론하고 따라할 수 있지만 이 가이드에서 방식의 모든 단계를 함께 다룰 것이기 때문에 클론을 꼭 할 필요는 없다.</p>\n<p>예제 앱은 기타 이펙트 페달을 검색 할 수 있는 매우 간단한 데이터베이스이다.\n당신이 쿼리를 입력하면 팝업에 이펙트 페달 목록이 나타난다.</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking/images/figure-3-1x.png\"></p>\n<p><strong>그림 3.</strong> 예제 앱 스크린샷</p>\n<p>예상대로, 앱을 구동하는 동작은 벤더(<a href=\"https://preactjs.com/\">Preact</a>와 <a href=\"https://preactjs.com/\">Emotion</a> 해당)와 앱-특정 코드 번들(webpack에서는 \"청크\"로 부른다)로 분리되었다.</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking/images/figure-4-1x.png\"></p>\n<p><strong>그림 4.</strong> 두 가지 앱 자바스크립트 번들. 이 파일들은 압축되지 않은 크기이다.</p>\n<p>위 이미지는 프로덕션 빌드에서 자바스크립트 번들을 보여주고, 이는 <a href=\"http://lisperator.net/uglifyjs/\">어글리파이</a>를 통해서 최적화되었다는 것을 의미한다.\n청크 파일이 21.5 KB이면 그리 나쁘지 않다.\n그러나! 무엇이든지 간에 트리 쉐이킹이 일어나지 않았다는 것에 주목해야 한다.\n앱 코드를 함께 살펴보면서 무엇을 수정해야할지 보자.</p>\n<blockquote>\n<p>참고: 장황한 설명이나 코드를 보길 원하지 않는다면, 앞으로 돌아가 앱 깃헙 리포에서 <a href=\"https://github.com/malchata/webpack-tree-shaking-example/tree/tree-shake\">트리 쉐이킹에 대한 브랜치</a>를 체크아웃 할 수 있다. 또한  트리 쉐이킹이 동작할 때 정확하게 무엇이 변경되었는지 보기 위해 <a href=\"https://github.com/malchata/webpack-tree-shaking-example/compare/tree-shake\">마스터 브랜치와 diff</a> 할 수 있다.</p>\n</blockquote>\n<p>어떤 애플리케이션에서 트리 쉐이킹 할 수 있는 지점을 찾는 것은 정적 <code class=\"tui-language-text\">import</code> 구문을 찾는 것이다.\n<a href=\"https://github.com/malchata/webpack-tree-shaking-example/blob/master/src/components/FilterablePedalList/FilterablePedalList.js#L4\">메인 컴포넌트 파일의 맨 윗 부분에서</a> 다음과 같이 된 것을 볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> utils <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../utils/utils\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>아마도 당신은 이전에 비슷한 것을 보았을 것이다.\nimport 될 수 있는 ES6 모듈을 내보내는 방법은 굉장히 많지만, 이와 같은 방식이 당신의 관심을 끌 것이다.\n이 특정 라인은 \"이봐, <code class=\"tui-language-text\">utils</code> 모듈로부터 <em>모든 것</em> 을  <code class=\"tui-language-text\">import</code> 해서 <code class=\"tui-language-text\">utils</code> 네임스페이스에 넣어라\"라고 말한다.\n여기서 큰 궁금증이 생길 것이다. \"그 모듈 안에 얼마나 많은 <em>것</em> 들이 있을까?\"</p>\n<p>자, <a href=\"https://github.com/malchata/webpack-tree-shaking-example/blob/master/src/utils/utils.js\"><code class=\"tui-language-text\">utils</code> 모듈의 소스 코드</a>를 보면 굉장히 많다.\n1,300 줄 정도 된다.</p>\n<p>그러나 걱정하지 마라.\n아마도 모든 것들이 사용되었을 것이다. 그렇지?\n그럼 우리는 이 모든 것들을 필요로 할까?\n<code class=\"tui-language-text\">utils</code> 모듈을 import 하는 <a href=\"https://github.com/malchata/webpack-tree-shaking-example/blob/master/src/components/FilterablePedalList/FilterablePedalList.js\">메인 컴포넌트 파일</a>를 다시 확인하면서, 얼마나 많은 네임스페이스의 인스턴스가 있는지 보자.\n확실하게, 우리는 <em>무언가</em> 를 위해 메인 컴포넌트에 있는 것들을 사용해야만 한다.</p>\n<p><img src=\"https://developers.google.com/web/fundamentals/performance/optimizing-javascript/tree-shaking/images/figure-5-1x.png\"></p>\n<p><strong>그림 5.</strong> 메인 컴포넌트 파일에서 import 된 수많은 모듈 중에 utils 네임스페이스는 세 번만 호출되었다.</p>\n<p>물론 그것은 좋지 않다.\n애플리케이션 코드에서 세군데서만 <code class=\"tui-language-text\">utils</code> 네임스페이스를 사용했다.\n근데 어떤 기능을 하는가?\n메인 컴포넌트 파일을 다시 보면, 이 코드들은 <code class=\"tui-language-text\">utils.simpleSort</code> 함수에서만 나타난다.\n이 함수는 드롭다운 메뉴가 변경될 때 기준 번호로 검색 결과 목록을 정렬하기 위해 사용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>sortBy <span class=\"token operator\">===</span> <span class=\"token string\">\"model\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// simpleSort는 여기에서 사용된다...</span>\n  json <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">.</span><span class=\"token function\">simpleSort</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token string\">\"model\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>sortOrder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>sortBy <span class=\"token operator\">===</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ..그리고 여기...</span>\n  json <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">.</span><span class=\"token function\">simpleSort</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>sortOrder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ..그리고 여기.</span>\n  json <span class=\"token operator\">=</span> utils<span class=\"token punctuation\">.</span><span class=\"token function\">simpleSort</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token string\">\"manufacturer\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>sortOrder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그렇다. <code class=\"tui-language-text\">export</code> 더미들과 함께 1,300줄 중에서, 이 함수만 볼 것이다.\n웹 성능에 굉장히 나쁜 것을 밝혀냈다.</p>\n<blockquote>\n<p>참고: 이 프로젝트는 의도적으로 단순하게 작성되었기 때문에, 확장할 곳을 찾기 굉장히 쉽다. 그러나 많은 모듈을 사용하는 큰 프로젝트에서는 얼마나 많은 번들이 import 되었는지 알기 어렵다. <a href=\"https://www.npmjs.com/package/webpack-bundle-analyzer\">webpack 번들 분석기</a>와 <a href=\"https://www.npmjs.com/package/source-map-explorer\">source-map-explorer</a>가 도움이 될 수 있고, 이러한 보조 도구들은 여전히 개발되고 있다.</p>\n</blockquote>\n<p>물론, 지금 이 예제는 아티클을 위해 <em>조금</em> 가공되었다.\n그러나 종합적인 시나리오가 실제 앱에서 일어날 수 있는 최적화 기회와 유사하다는 사실은 변하지 않는다.\n당신은 유용한 트리 쉐이킹 기회를 찾았고, 실제로는 어떻게 <em>할까</em>?</p>\n<h2 id=\"babel로-es6-모듈이-commonjs-모듈로-변환되는-것-막기\" style=\"position:relative;\"><a href=\"#babel%EB%A1%9C-es6-%EB%AA%A8%EB%93%88%EC%9D%B4-commonjs-%EB%AA%A8%EB%93%88%EB%A1%9C-%EB%B3%80%ED%99%98%EB%90%98%EB%8A%94-%EA%B2%83-%EB%A7%89%EA%B8%B0\" aria-label=\"babel로 es6 모듈이 commonjs 모듈로 변환되는 것 막기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Babel로 ES6 모듈이 CommonJS 모듈로 변환되는 것 막기</h2>\n<p><a href=\"https://babeljs.io/\">Babel</a>은 많은 앱에서 없어서는 안될 도구이다.\n불행하게도, Babel이 하는 어떤 것 <em>때문에</em> 트리 쉐이킹 같은 간단한 작업을 어렵게 만들 수 있다.\n<a href=\"https://babeljs.io/docs/en/babel-preset-env/\">babel-preset-env</a>를 사용하면, ES6 모듈을 범용적으로 호환되는 CommonJS 모듈(즉, <code class=\"tui-language-text\">import</code> 대신 <code class=\"tui-language-text\">require</code> 모듈)로 변환해준다.\n이것은 트리 쉐이킹을 하기 전까지는 좋다.</p>\n<p>트리 쉐이킹은 CommonJS 모듈에서 하기 어렵고, webpack은 사용하려는 번들에서 무엇을 제거해야할지 모른다.\n해결책은 간단하다: ES6 모듈만 남도록 <code class=\"tui-language-text\">babel-preset-env</code>를 설정한다.\nBabel을 설정한 곳 어디서든(<code class=\"tui-language-text\">.babelrc</code> 또는 <code class=\"tui-language-text\">package.json</code>) 약간의 옵션을 추가해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"env\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"modules\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"tui-language-text\">babel-preset-env</code> 설정에서 간단히 <code class=\"tui-language-text\">&quot;modules&quot;: false</code>로 설정하면 Babel은 우리의 바람대로 동작한다.\nwebpack이 디펜던시 트리를 분석해서 사용하지 않는 디펜던시들을 제거한다.\n게다가 이 과정은 호환성 문제를 일으키지 않는다.\n결국 webpack이 코드를 범용적으로 사용할 수 있는 형태로 변환해주기 때문이다.</p>\n<h2 id=\"사이드-이펙트-고려하기\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9D%B4%EB%93%9C-%EC%9D%B4%ED%8E%99%ED%8A%B8-%EA%B3%A0%EB%A0%A4%ED%95%98%EA%B8%B0\" aria-label=\"사이드 이펙트 고려하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사이드 이펙트 고려하기</h2>\n<p>앱에서 사용하지 않는 디펜던시들을 제거할 때 고려해야 할 점은 프로젝트의 모듈들이 사이드 이펙트를 발생시키는지 여부이다.\n사이드 이펙트의 한 예는 함수가 스코프 밖의 무언가를 변경할 때이다.\n이는 실행에 대한 <em>사이드 이펙트</em> 다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">let</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pear\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// (3) [\"apple\", \"orange\", \"pear\"]</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addFruit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fruit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  fruits<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>fruit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">addFruit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kiwi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// (4) [\"apple\", \"orange\", \"pear\", \"kiwi\"]</span></code></pre></div>\n<p>이것은 굉장히 단순한 예제로, <code class=\"tui-language-text\">addFruit</code> 함수는 <code class=\"tui-language-text\">fruits</code> 배열을 변경할 때 사이드 이펙트를 발생시킨다.\n이 <code class=\"tui-language-text\">fruits</code> 배열은 <code class=\"tui-language-text\">addFruit</code> 함수 스코프 밖에 있다.\n사이드 이펙트는 ES6 모듈에도 적용되며, 트리 쉐이킹의 컨텍스트에서 문제가 된다.\n예측 가능한 입력을 가지고 동일하게 함수의 스코프 밖의 어떤 것도 변경하지 않으면서 예측 가능한 결과를 반환하는 모듈이 안전하게 트리 쉐이킹을 할 수 있는 디펜던시이다.\n이것들은 자체적으로 포함된 코드의 <em>모듈식</em> 조각이다.\n즉, \"모듈들(modules)\"이다.</p>\n<p>webpack에서 고려해야 할 부분은,\n프로젝트의 <code class=\"tui-language-text\">package.json</code> 파일에서 <code class=\"tui-language-text\">&quot;sideEffects&quot;: false</code>로 설정하면 패키지와 디펜던시들이 사이드 이펙트를 발생하지 않는다는 것이다:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-tree-shaking-example\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"sideEffects\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>선택적으로, 사이드 이펙트의 영향을 받지 않을 특정 파일들을 지정할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-tree-shaking-example\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"sideEffects\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"./src/utils/utils.js\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>아래 예제에서, 지정되지 않은 파일은 사이트 이펙트가 없다고 가정할 것이다.\n<code class=\"tui-language-text\">package.json</code> 파일에 이 옵션을 추가하기 원하지 않는다면, <a href=\"https://github.com/webpack/webpack/issues/6065#issuecomment-351060570\">webpack 설정 파일에 <code class=\"tui-language-text\">module.rules</code> 플래그 값을 지정할 수 있다</a>.</p>\n<h2 id=\"원하는-것만-가져오기\" style=\"position:relative;\"><a href=\"#%EC%9B%90%ED%95%98%EB%8A%94-%EA%B2%83%EB%A7%8C-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"원하는 것만 가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원하는 것만 가져오기</h2>\n<p>우리는 ES6 모듈을 그대로 두려고 Babel을 설정했지만, <code class=\"tui-language-text\">utils</code> 모듈에서 필요한 함수만 가져오기 위해 <code class=\"tui-language-text\">import</code> 구문을 조금 수정하려고 한다.\n가이드 예제에서 필요로 하는 것은 <code class=\"tui-language-text\">simpleSort</code> 함수이다:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> simpleSort <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../utils/utils\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이 구문을 사용하면서 이렇게 말할 것이다.\n\"이봐, <code class=\"tui-language-text\">utils</code> 모듈에서 <code class=\"tui-language-text\">simpleSort</code>만 가져와.\"\n<code class=\"tui-language-text\">simpleSort</code> 함수만 가져오고 전역 스코프에 <code class=\"tui-language-text\">utils</code> 모듈이 없기 떄문에, <code class=\"tui-language-text\">utils.simpleSort</code>의 모든 인스턴스를 <code class=\"tui-language-text\">simpleSort</code>로 변경해야 한다:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>sortBy <span class=\"token operator\">===</span> <span class=\"token string\">\"model\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  json <span class=\"token operator\">=</span> <span class=\"token function\">simpleSort</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token string\">\"model\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>sortOrder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>sortBy <span class=\"token operator\">===</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  json <span class=\"token operator\">=</span> <span class=\"token function\">simpleSort</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>sortOrder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  json <span class=\"token operator\">=</span> <span class=\"token function\">simpleSort</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token string\">\"manufacturer\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>sortOrder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이제 트리 쉐이킹을 위한 작업을 수행했으니, 잠시 뒤로 물러서서 보자.</p>\n<p>이것은 디펜던시 트리 쉐이킹을 하기 <em>전</em> webpack 결과이다:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">                 Asset      Size  Chunks             Chunk Names\njs/vendors.16262743.js  37.1 KiB       0  [emitted]  vendors\n   js/main.797ebb8b.js  20.8 KiB       1  [emitted]  main</code></pre></div>\n<p>그리고 이것은 트리 쉐이킹을 한 <em>후</em> 결과이다:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"tui-language-text\"><code class=\"tui-language-text\">                 Asset      Size  Chunks             Chunk Names\njs/vendors.45ce9b64.js  36.9 KiB       0  [emitted]  vendors\n   js/main.559652be.js  8.46 KiB       1  [emitted]  main</code></pre></div>\n<p>두 번들 파일들을 압축했을 때, <code class=\"tui-language-text\">main</code> 번들 파일에 이점이 생겼다.\n<code class=\"tui-language-text\">utils</code> 모듈의 사용하지 않는 부분을 쉐이킹하여, 번들 파일에서 약 60%의 코드를 제거하였다.\n이렇게하면 스크립트를 다운로드하는데 드는 시간 뿐만 아니라 처리 시간도 단축되어서 좋다.</p>\n<h2 id=\"잘-되지-않을-때\" style=\"position:relative;\"><a href=\"#%EC%9E%98-%EB%90%98%EC%A7%80-%EC%95%8A%EC%9D%84-%EB%95%8C\" aria-label=\"잘 되지 않을 때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>잘 되지 않을 때</h2>\n<p>대부분의 경우, 이런 사소한 변경이 있을 때 트리 쉐이킹은 webpack 최신 버전에서 잘 동작하지만 항상 예외는 있다.\n예를 들어, <a href=\"https://lodash.com/\">Lodash</a>가 위의 가이드대로 트리 쉐이킹이 잘 동작하지 않는 이상한 경우에 해당된다.\nLodash 설계 방식 때문에, a) 오래된 표준 <a href=\"https://www.npmjs.com/package/lodash\"><code class=\"tui-language-text\">lodash</code></a> 대신 <a href=\"https://www.npmjs.com/package/lodash-es\"><code class=\"tui-language-text\">lodash-es</code></a>를 설치하고 b) 다른 디펜던시를 쉐이킹하기 위해 조금 다른 구문(\"cherry-picking\"이라고도 한다)을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"tui-language-js\"><code class=\"tui-language-js\"><span class=\"token comment\">// 설정이 잘 되어있어도 lodash 모든 것들을 가져온다.</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> sortBy <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"lodash\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// sortBy 경로에서 가져온다.</span>\n<span class=\"token keyword\">import</span> sortBy <span class=\"token keyword\">from</span> <span class=\"token string\">\"lodash-es/sortBy\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>일관되게 <code class=\"tui-language-text\">import</code> 구문을 사용하길 선호한다면, 표준 <code class=\"tui-language-text\">lodash</code> 패키지를 사용 <em>할 수 있다</em>.\n<a href=\"https://github.com/lodash/babel-plugin-lodash\">babel-plugin-lodash</a>를 설치한다.\nBabel 설정 파일에 플러그인을 추가하면,\n<code class=\"tui-language-text\">import</code> 구문을 사용하면서 사용하지 않는 모듈들을 제거할 수 있다.</p>\n<p>실행한 라이브러리가 트리 쉐이킹에 반응하지 않는다면, ES6 구문을 사용하여 메서드를 내보내는지 확인하라.\n만약 CommonJS 형식(예: <code class=\"tui-language-text\">module.exports</code>)으로 내보내고 있다면, 해당 코드는 트리 쉐이킹을 할 수 없다.\n몇몇 플러그인들은 CommonJS 모듈을 위한 트리 쉐이킹 기능을 제공한다. (예: <a href=\"https://github.com/indutny/webpack-common-shake\">webpack-common-shake</a>)\n그러나 이 플러그인들은 <a href=\"https://github.com/indutny/webpack-common-shake#limitations\">트리 쉐이킹을 할 수 없는 몇 가지 CommonJS 패턴</a>만큼이나 갈 길이 멀다.\n당신의 애플리케이션에서 사용하지 않는 디펜던시들을 확실하게 제거하기를 원한다면, 앞으로 ES6 모듈을 사용해야 할 것이다.</p>\n<h2 id=\"트리-쉐이킹을-해보자\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%AC-%EC%89%90%EC%9D%B4%ED%82%B9%EC%9D%84-%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"트리 쉐이킹을 해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트리 쉐이킹을 해보자!</h2>\n<p>트리 쉐이킹이 가능한 정도는 앱과 앱에서 사용하고 있는 디펜던시 및 설계 구조에 따라 다르다.\n시도해보라!\n모듈 번들러에 트리 쉐이킹을 위한 옵션이 설정되지 않았다는 것을 알고 있다면, 애플리케이션에 어떤 이점이 있는지 보고 해보는데 아무런 해가 없다.\n번들 파일에서 제거 가능한 사용하지 않는 어떤 코드는 가치 있는 최적화다.</p>\n<p>트리 쉐이킹으로부터 많은 이익을 얻거나 그렇지 않을 수도 있다.\n그러나 프로덕션 빌드에서 트리 쉐이킹의 이점을 위해 빌드 시스템을 구성하고 애플리케이션에서 필요로 하는 것만 선택적으로 가져오는 것으로써, 당신의 애플리케이션을 가능한 한 가볍게 유지시켜줄 것이다.\n트리 쉐이킹은 성능과 확장, 사용자들에게 좋다.</p>\n<p><em>이 아티클을 개선하는데 좋은 피드백을 준 Kristofer Baxter, Jason Miller, <a href=\"https://developers.google.com/web/resources/contributors/addyosmani\">Addy Osmani</a>, <a href=\"https://developers.google.com/web/resources/contributors/jeffposnick\">Jeff Posnick</a>, Sam Saccone 그리고 <a href=\"https://developers.google.com/web/resources/contributors/philipwalton\">Philip Walton</a>에게 감사하다.</em></p>","frontmatter":{"id":"ko_20180716","title":"트리 쉐이킹으로 자바스크립트 페이로드 줄이기","description":"오늘날 웹 애플리케이션들은 굉장히 크고, 대부분 자바스크립트로 만들어진 것이다. 2018년 중순, HTTP Archive가 보여준 모바일 장치에서 자바스크립트의 평균 전송 크기는 약 350 KB 이다.","date":"2018.07.16","author":"류선임","tags":["babel","bundler","devtool","es6","etc"],"thumbnail":"https://camo.githubusercontent.com/44be352b56985ed00e812e59f80cd8d38dd7d98c/68747470733a2f2f646576656c6f706572732e676f6f676c652e636f6d2f7765622f66756e64616d656e74616c732f706572666f726d616e63652f6f7074696d697a696e672d6a6176617363726970742f747265652d7368616b696e672f696d616765732f6669677572652d322d31782e706e67"}},"allProductsJson":{"edges":[{"node":{"id":"tui-chart","packageName":null,"name":"Chart","type":"application","description":"The Chart makes your data pop, and it is easy to use. It provides you with multiple charts like Bar, Column, Line, and more.","detailDesc":"Chart makes your data pop. Its numerous charts like Line, Bar, Pie, and more are easy to use, and you can export your data to excel or even as images.","link":"","logo":null}},{"node":{"id":"tui-editor","packageName":"@toast-ui/editor","name":"Editor","type":"application","description":"The Editor allows you to edit your Markdown documents using text or WYSIWYG and comes with Syntax Highlighting, Scroll-Sync, Live Preview, and Chart features.","detailDesc":"Editor allows you to interact with their Markdown documents through both text and WYSIWYG. With Syntax Highlighting, Scroll-Sync, Live Preview, Charts, and much more diverse features and UI, it takes your word processing to the next level.","link":"https://nhn.github.io/tui.editor/latest","logo":null}},{"node":{"id":"tui-grid","packageName":null,"name":"Grid","type":"application","description":"The Grid is a powerful library with features like data editing, filtering, sorting, and more, and can be used to customize the editor or the renderer to your desired format.","detailDesc":"Grid is a powerful grid library with data editing, filtering, sorting, pagination features, and more. Furthermore, you can customize the editor and the renderer to your desired format and visualize your data however you like.","link":"https://nhn.github.io/tui.grid/latest/","logo":null}},{"node":{"id":"tui-calendar","packageName":null,"name":"Calendar","type":"application","description":"The Calendar supports monthly, weekly, daily views and more, and you can create or edit your schedule with a simple dragging motion.","detailDesc":"Calendar provides monthly, weekly, multi-weekly, daily views, and more, as well as a basic pop-up UI you can use to add/edit/delete your schedules. You can manage your schedule simply by dragging the schedules around. Managing your calendar has never been easier.","link":"","logo":null}},{"node":{"id":"tui-image-editor","packageName":null,"name":"Image-editor","type":"application","description":"With the UI that is the perfect combination of simple and beautiful, the Image Editor is a Full-Featured one that is perfect for everyday use.","detailDesc":"With the UI that is the perfect combination of simple and beautiful, Image Editor is a Full-Featured image editor that provides you with editing, drawing, and typing capabilities as well as a collection of great image filters that you can apply all at once.","link":"https://nhn.github.io/tui.image-editor/latest/","logo":null}},{"node":{"id":"tui-app-loader","packageName":null,"name":"App Loader","type":"component","description":"AppLoader is a library that you can use to load or install a certain app on the mobile device.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-auto-complete","packageName":null,"name":"Auto Complete","type":"component","description":"AutoComplete component can suggest and even fill in the rest of the word and sentences given the inputted text.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-color-picker","packageName":null,"name":"Color Picker","type":"component","description":"ColorPicker is a simple and efficient color picker, true to its name.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-context-menu","packageName":null,"name":"Context Menu","type":"component","description":"ContextMenu displays the menu items that you can access via the right click.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-date-picker","packageName":null,"name":"Date Picker","type":"component","description":"DatePicker allows you to pick a date using a pop-up calendar.\n\n","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-pagination","packageName":null,"name":"Pagination","type":"component","description":"Pagination component can show you the current page within a multi-page document and also provides links for included pages.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-rolling","packageName":null,"name":"Rolling","type":"component","description":"Rolling is a slider component that lets you view multiple contents in a selected area.","detailDesc":"","link":"","logo":null}},{"node":{"id":"select-box","packageName":"@toast-ui/select-box","name":"Select Box","type":"component","description":"SelectBox is a dropdown list component that you can use to select multiple menus easily.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-time-picker","packageName":null,"name":"Time Picker","type":"component","description":"TimePicker component allows you to use the SelectBox or the SpinBox to select the time.","detailDesc":"","link":"","logo":null}},{"node":{"id":"tui-tree","packageName":null,"name":"Tree","type":"component","description":"Tree component displays the data structure of the hierarchy and allows you to view and edit the node names.","detailDesc":"","link":"","logo":null}},{"node":{"id":"@toast-ui/doc","packageName":null,"name":"TOAST UI Doc","type":"tool","description":"Documentation generator that creates the example page and the API document by parsing the JSDoc comments.","detailDesc":"","link":"https://github.com/nhn/toast-ui.doc","logo":null}},{"node":{"id":"tui-eslint-config","packageName":null,"name":"ESLint Config","type":"tool","description":"ESLint configuration used with TOAST UI products to help find and fix problems in JavaScript code.","detailDesc":"","link":"https://github.com/nhn/tui.eslint.config","logo":null}},{"node":{"id":"tui-release-notes","packageName":null,"name":"Release Note","type":"tool","description":"Github release note generator to automatically summarize and classify the updates based on the commit logs.","detailDesc":"","link":"https://github.com/nhn/toast-ui.release-notes","logo":null}},{"node":{"id":"toast","packageName":null,"name":"TOAST Cloud","type":"references","description":"references is TOAST Cloud","detailDesc":"","link":"https://www.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-nhntoast.png"}},{"node":{"id":"toastfile","packageName":null,"name":"TOAST File","type":"references","description":"references is TOAST File","detailDesc":"","link":"https://file.toast.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastfile.png"}},{"node":{"id":"dooray","packageName":null,"name":"Dooray","type":"references","description":"references is Dooray","detailDesc":"","link":"https://dooray.com/home","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-toastdooray.png"}},{"node":{"id":"ncp","packageName":null,"name":"NCP","type":"references","description":"references is NCP","detailDesc":"","link":"https://www.e-ncp.com/","logo":"https://uicdn.toast.com/toastui/img/toast-ui-bi-ncp.png"}}]}},"pageContext":{"id":"ko_20180716","lang":"ko"}},"staticQueryHashes":["2997033868","414700122","542722004"]}