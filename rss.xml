<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Weekly Pick RSS Feed]]></title><description><![CDATA[The TOAST UI Is Free Open-source JavaScript UI Libraries Maintained By NHN.]]></description><link>http://github.com/dylang/node-rss</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 07 Dec 2020 02:18:19 GMT</lastBuildDate><item><title><![CDATA[리액트 useEffect 개발자가 알아야 할 네가지 팁]]></title><description><![CDATA[리액트 훅의 useEffect를 사용할 때 꼭 알아야 할 네 가지를 공유하려고 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200916</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200916</guid><pubDate>Wed, 16 Sep 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[Gatsby가 Next.js와 1:1 대결에서 이겼다.]]></title><description><![CDATA[Gatsby와 Next.js로 똑같은 앱을 만들었을 때 더 나은 성능을 가진 Gatsby를 발견했다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200908</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200908</guid><pubDate>Tue, 08 Sep 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Monthly 2020년 8월호]]></title><description><![CDATA[정말 길고 긴 장마가 끝이 났습니다. 올해 장마 기간은 관측 이래 최장기였다고 하는데요. 다들 큰 피해가 없으셨길 TOAST UI 팀 모두가 바라고 있습니다. 장마가 끝나고 날씨가 상당히 더워졌지만, 코로나 19는 더욱 기승을 부리고 있습니다. 날이 더워지고 마스크를 쓰는 기간이 길어짐에 따라 많이 지치고 힘들지만, 주변 친구들과 가족들을 위해 조금만 더 노력해서 조심했으면 좋겠습니다.💪 건강 유의하시고 이번 달에도 즐겁고 행복한 코딩 하세요!]]></description><link>https://ui.toast.com/weekly-pick/ko_monthly_202008</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_monthly_202008</guid><pubDate>Fri, 28 Aug 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[Rust로 SPA(Single Page Applications)만들기]]></title><description><![CDATA[WebAssembly(wasm)을 사용하면 자바스크립트 외의 언어로 작성된 코드를 브라우저에서 실행할 수 있다. 대부분의 주요 브라우저에서 wasm을 지원하고 전 세계적으로 90% 이상의 사용자가 wasm을 동작시키는 브라우저를 사용한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200818</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200818</guid><pubDate>Tue, 18 Aug 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[Vue 3로 마이그레이션하기 위해 준비해야 할 것]]></title><description><![CDATA[필자는 이 글에서 Vue 3 베타 버전을 사용한 경험, 특히 Vue 3로 마이그레이션할 때 주의해야 할 점을 얘기하고자 한다. 만약 이미 Vue 2로 개발된 앱을 Vue 3로 업그레이드할 예정이라면 이 글이 유용할 것이다. 아래의 목록은 성공적으로 Vue 3로 옮기는 데 많은 도움을 줄 것이며, Vue 2와는 달리 Vue 3에서는 문제를 일으키는 케이스를 피하는 데 도움을 줄 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200804</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200804</guid><pubDate>Tue, 04 Aug 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Monthly 2020년 7월호]]></title><description><![CDATA[2020년이 시작된 지 벌써 반년이 지났습니다. 그동안 TOAST UI는 열심히 달려왔고 남은 시간도 열심히 달릴 예정입니다. 😎 여러분도 더운 여름 쉬엄쉬엄 컨디션 관리하시면서, TOAST UI와 함께 즐거운 코딩 하세요~!🏊‍♀]]></description><link>https://ui.toast.com/weekly-pick/ko_monthly_202007</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_monthly_202007</guid><pubDate>Fri, 31 Jul 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[devicePixelContentBox를 사용하여 완벽하게 픽셀(pixel-perfect) 렌더링하기]]></title><description><![CDATA[픽셀은 웹에서 의외로 복잡한 주제이다. 이제 ResizeObserverEntry에 있는 새로운 devicePixelContentBox 속성을 통해 그 정보를 알 수 있으며, <canvas>를 사용하여 픽셀 단위까지 완벽한 렌더링을 할 수 있게 되었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200728</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200728</guid><pubDate>Tue, 28 Jul 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[유용한 테스트 케이스를 위한 개발자의 자세]]></title><description><![CDATA[각종 커뮤니티에 주기적으로 등장하는 "private 메서드를 테스트하려면 어떻게 하나요?" 혹은 "private 메서드를 테스트해야 하나요?" 와 같은 질문을 보면서 언젠가는 관련해서 정리해봐야겠다고 생각했었는데 꽤 시간이 흘러 이 내용으로 글을 써본다. 주제 자체는 간단한 편이지만 사람마다 생각이 다른 것 같다. 특히 해외 개발자들의 의견이 분분한 것 같다. 사실 이 문제는 효과적인 테스트 케이스(이하 TC)란 무엇인가란 질문과 비슷하다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200708</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200708</guid><pubDate>Wed, 08 Jul 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[A Programmer's Attitude Towards Effective Test Cases]]></title><description><![CDATA[It is always a crowd's favorite to ask questions like "how should one test private methods?" and "Should one test private methods?" on different communities, and I have long thought to organize my thoughts and to write a summary for such questions.]]></description><link>https://ui.toast.com/weekly-pick/en_20200708</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20200708</guid><pubDate>Wed, 08 Jul 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[Puppeteer로 E2E 테스트하기 팁 - Puppeteer와 함께 속도 높이기!]]></title><description><![CDATA[자바스크립트 세계에서 E2E 테스트는 신나는 한 때를 보내고 있다. 지난 몇 년 동안, 자바스크립트 커뮤니티에서 cypress와 Puppeteer와 같은 도구들이 쏟아져나왔고 빠르게 채택되어 왔다. 오늘은 Puppeteer에 관해서 이야기할 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200630</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200630</guid><pubDate>Tue, 30 Jun 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Monthly 2020년 6월호]]></title><description><![CDATA[여느 해보다 빨리 한여름 무더위🔥🔥🔥가 찾아온 6월입니다. 끝날듯 끝나지 않는 코로나와 장기전에 돌입하였지만, 이번달에도 TOAST UI는 멈추지 않고 릴리즈를 위해 열심히 달렸습니다. 🏃‍♂ 건강 유념하시면서 TOAST UI와 함께 즐거운 코딩하세요! (즐코하!🙋‍♂🙋‍♀)]]></description><link>https://ui.toast.com/weekly-pick/ko_monthly_202006</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_monthly_202006</guid><pubDate>Fri, 26 Jun 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[리액트 앱에서의 중앙 집중식 API 에러 핸들링]]></title><description><![CDATA[이 글에서는 사용 중인 상태 관리 라이브러리(Redux, Apollo, etc..)에 상관없이 API 오류를 중앙 집중식이며, 쉽게 확장 가능한 방식으로 한번에 처리하는 방법을 제시한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200623</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200623</guid><pubDate>Tue, 23 Jun 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[Recoil - 또 다른 React 상태 관리 라이브러리?]]></title><description><![CDATA[많은 React 상태 관리 라이브러리들이 있고, 가끔 새로운 라이브러리가 등장한다. 그러나 페이스북에서 직접 상태 관리 솔루션을 소개하는 것은 흔하지 않다. 이 라이브러리가 어떤 장점이 있고 새로운 점이 있는지, 그리고 앞으로 시간을 투자할 가치가 있는지 알아보자.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200616</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200616</guid><pubDate>Tue, 16 Jun 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[크로미움 84의 웹 애니메이션 API 개선 사항]]></title><description><![CDATA[프라미스로 애니메이션을 조작할 수있고, 교체가능한 애니메이션으로 성능이 개선되었으며, 합성 모드를 사용하여 부드러운 애니메이션을 제공한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200602</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200602</guid><pubDate>Tue, 02 Jun 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Monthly 2020년 5월호]]></title><description><![CDATA[코로나 때문에 미처 봄을 즐기지 못했는데, 벌써 여름이 바로 앞에 다가왔습니다. 생활 속 거리 두기로 전환되었지만, 아직 코로나가 끝나지 않은 만큼 조심하고 안전하게 지내시길 바랍니다. 🙌🙌 이번 달에도 TOAST UI와 함께 즐겁고 행복한 코딩 하세요! 🧑🏻‍💻]]></description><link>https://ui.toast.com/weekly-pick/ko_monthly_202005</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_monthly_202005</guid><pubDate>Fri, 29 May 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[라이트하우스 6.0에서 바뀐 성능 지표변화]]></title><description><![CDATA[웹 기술이 발전하고 변화하면서 웹 페이지에서 중요하게 여기는 기준들 또한 필연적으로 변하게 된다. 성능을 측정하는 기준, 즉 성능 지표는 웹 페이지의 성능을 합리적으로 나타낼 수 있어야 한다. 라이트하우스는 그동안 다양한 지표들을 개발하고 가이드를 제시해왔다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200528</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200528</guid><pubDate>Thu, 28 May 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[WebAssembly에서 메모리 최대 4GB 까지 사용하기]]></title><description><![CDATA[Chrome과 Emscripten의 노력 덕분에, 이제 웹 어셈블리 애플리케이션에서 4GB의 메모리를 사용할 수 있게 되었다. 이전에는 2GB까지만 사용 가능했다. 메모리 사용량에 제한이 있다는 사실이 이상하게 다가오겠지만, 대부분 512MB 또는 1GB의 메모리를 사용하는 작업이 필요하지 않았다. 하지만 이번에 2GB 제한에서 4GB로 늘어나면서 브라우저와 툴 체인에 조금 특별한 일이 일어났다. 어떤 일이었는지 설명해 보겠다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200522</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200522</guid><pubDate>Fri, 22 May 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[정적인 미래 (A Static Future)]]></title><description><![CDATA[정적(Static) 사이트가 부활하여 엄청난 인기를 누리고 있는 요즘, 나는 개츠비(Gatsby)와 같은 도구로 할 수 있는 일에 대해 많은 오해가 있다는 것을 알게 되었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200508</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200508</guid><pubDate>Fri, 08 May 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[노드와 Gatsby.js에서 크롬으로 자식 프로세스를 디버깅하는 방법]]></title><description><![CDATA[이 글에서는 Gatsby.js에서 사용하는 jest-worker 패키지를 수정하고 크롬 개발자 도구를 사용해 사용 가능한 자식 프로세스(child process)를 디버깅하는 방법을 소개할 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200429</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200429</guid><pubDate>Wed, 29 Apr 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Monthly 2020년 4월호]]></title><description><![CDATA[벌써 벚꽃이 지고 날이 따뜻해지고 있습니다. 길고 길었던 코로나 19가 조금씩 진정되고 있지만, 아직 방심할 단계가 아니라고 합니다. 지금까지 잘 해왔듯이 마스크 없이 여행하는 순간을 상상하며 조금만 더 노력하고 힘냈으면 좋겠습니다.💪💪 그럼, 이번 달 TOAST UI에 어떤 변화가 있었는지 함께 살펴볼까요?🧑‍💻]]></description><link>https://ui.toast.com/weekly-pick/ko_monthly_202004</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_monthly_202004</guid><pubDate>Wed, 29 Apr 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[performance.measureMemory()로 웹 페이지 전체 메모리 사용량 모니터링하기]]></title><description><![CDATA[브라우저는 웹 페이지의 메모리를 자동으로 관리한다. 웹 페이지가 객체(object)를 만들 때마다, 브라우저는 객체를 저장하기 위해 "내부적으로" 메모리 청크(chunk)를 할당한다. 메모리는 한정된 자원이기 때문에, 브라우저는 가비지 컬랙션으로 더는 객체가 필요하지 않은 시점을 감지하고 메모리 청크를 해제한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200423</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200423</guid><pubDate>Thu, 23 Apr 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[ECMAScript 2020의 새로운 점]]></title><description><![CDATA[ECMAScript 2020의 새로운 기능이 확정되었다. 필자는 2016, 2017, 2018, 2019년과 마찬가지로 올해 새롭게 추가된 기능을 예제와 함께 살펴보려고 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200409</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200409</guid><pubDate>Thu, 09 Apr 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[타입스크립트 - 제네릭을 사용하여 타입을 추출하기]]></title><description><![CDATA[타입스크립트에서 제네릭을 사용하여 타입을 추출하는 방법을 예시를 통해 알아본다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200402</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200402</guid><pubDate>Thu, 02 Apr 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[The Need for a New Markdown Parser and Why]]></title><description><![CDATA[If you were to ask any developer which document format is the most preferred right now, the answer would unequivocally be Markdown. Currently, Markdown is being used with GitHub, GitLab, Bitbucket, and more as a default document format for most of the services including issue tracking. Furthermore, it is also integrated with almost all text editors like IntelliJ, VSCode, Vim, and Emacs, and plugins can be used to utilize syntax highlighting and preview features.]]></description><link>https://ui.toast.com/weekly-pick/en_20200402</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20200402</guid><pubDate>Thu, 02 Apr 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Monthly 2020년 3월호]]></title><description><![CDATA[모두 집에서 안전하게 코딩하고 계시나요? 코로나 19가 장기화되면서 우리나라뿐만 아니라 전 세계적으로 여러 가지 문제들이 발생하고 있습니다. 늘 그랬듯이 함께 힘을 모아서 어려운 상황을 빠르게 극복해서 일상으로 빠르게 돌아오기를 기원하겠습니다. 이번 달 TOAST UI Monthly는 새로운 버전의 Editor를 소개해드리는 것으로 시작하려고 합니다. 그럼 함께 살펴볼까요?👇👇]]></description><link>https://ui.toast.com/weekly-pick/ko_monthly_202003</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_monthly_202003</guid><pubDate>Fri, 27 Mar 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[새로운 마크다운 파서가 필요한 이유]]></title><description><![CDATA[최근 개발자들이 가장 선호하는 문서 형식을 하나 꼽으라면 단연 마크다운일 것이다. 마크다운은 깃허브(GitHub), 깃랩(GitLab), Bitbucket등 업무나 이슈 관리를 지원하는 대부분의 서비스에서 기본 문서 형식으로 사용되고 있다. 또한 IntelliJ, VSCode, Vim, Emacs등 거의 모든 텍스트 편집 도구에서도 플러그인을 통해 마크다운 문서의 구문 강조나 미리보기 기능을 사용할 수 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200320</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200320</guid><pubDate>Fri, 20 Mar 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Editor 2.0 출시]]></title><description><![CDATA[TOAST UI Editor는 문서 편집을 위한 자바스크립트 라이브러리로, 마크다운(Markdown)과 위지윅(WYSIWYG) 2가지 모드의 에디터를 제공하여 사용자가 편의에 따라 자유롭게 에디터를 선택할 수 있도록 도와줍니다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200318</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200318</guid><pubDate>Wed, 18 Mar 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Editor 2.0 Released!]]></title><description><![CDATA[TOAST UI Editor is a document editing library built using JavaScript, and it offers two different modes of editors, Markdown and "What You See is What You Get" (WYSIWYG), for users to choose freely which mode is the more suitable option for different users.]]></description><link>https://ui.toast.com/weekly-pick/en_20200318</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20200318</guid><pubDate>Wed, 18 Mar 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[은닉을 향한 자바스크립트의 여정]]></title><description><![CDATA[ECMAScript 클래스 필드(class field) 명세중에 `Private field` 즉 `Private Property` (이하 Private 속성) 가 있다. 클래스 필드 스펙은 Stage 3(Candidate)까지 올랐으니 아마 곧 Stage 4(Finished)를 거쳐 표준 스펙이 될 것이다. 사실 초기에 명세 문서를 봤을 때는 "드디어 private이 생기는건가?"하는 기대감과 "문법이 좀 별론데"라는 실망감이 있었을 뿐 뭔가 현실감은 없었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200312</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200312</guid><pubDate>Thu, 12 Mar 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[V8 엔진(자바스크립트, NodeJS, Deno, WebAssembly) 내부의 메모리 관리 시각화하기]]></title><description><![CDATA[이번 장에서는 NodeJS, Deno와 Electron과 같은 런타임 및 Chrome, Chromium, Brave, Opera, Microsoft Edge와 같은 웹 브라우저에서 사용되는 ECMAScript와 WebAssembly를 위한 V8 엔진의 메모리 관리 방법에 대해 살펴볼 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200228</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200228</guid><pubDate>Fri, 28 Feb 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Monthly 2020년 2월호]]></title><description><![CDATA[잠잠해지는 줄 알았던 코로나 19가 다시 전국적으로 대유행을 하고 있습니다😢. 얼른 사태가 진정되길 바라며 모두 건강하게 코딩하시길 TOAST UI가 기원하겠습니다.🙏 그럼 이제 이번 달에 TOAST UI에 어떤 업데이트가 있었는지 살펴볼까요?]]></description><link>https://ui.toast.com/weekly-pick/ko_monthly_202002</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_monthly_202002</guid><pubDate>Fri, 28 Feb 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트는 무엇으로 구성되어 있을까?]]></title><description><![CDATA[처음 몇 년 동안 자바스크립트를 사용하면서, 나는 사기꾼처럼 느껴졌었다. 프레임워크를 이용해 웹사이트를 만들 수 있었지만, 뭔가 빠진 느낌이었다. 기초에 대한 확실한 이해가 없었기 때문에 자바스크립트 구직 면접을 두려워했었다.몇 년 동안, 나에게 자신감을 주는 자바스크립트의 멘탈 모델을 만들었다. 여기, **매우 압축된** 버전의 멘탈 모델을 공유하려고 한다. 단어를 하나 제시하고, 각 주제에 맞게 몇 문장을 설명하는 방식으로 구성했다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200219</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200219</guid><pubDate>Wed, 19 Feb 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[리액트 어플리케이션 구조 - 아토믹 디자인]]></title><description><![CDATA[필자는 처음 프로그래밍을 시작했을 때, 디자인 패턴, 파일구조와 같은 추상적인 프로그래밍의 개념과 중요성을 전혀 몰랐다. 하지만 호텔 관련 어플리케이션을 만들면서 그 중요성에 대해 알게 되었다. 어플리케이션의 주요 기능은 호텔 고객의 영수증 인쇄를 도와주는 것이었다. 1년 후, 호텔 경영진은 어플리케이션에 몇 가지 새로운 기능 구현을 요청했다. 불행히도, 기존 어플리케이션의 구조가 너무 형편없었기 때문에 어플리케이션 전체를 다시 작성해야 했다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200213</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200213</guid><pubDate>Thu, 13 Feb 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Monthly 2020년 1월호]]></title><description><![CDATA[해피뉴이어!🙌 새해 복 많이 받으세요! 올해부터 매달 TOAST UI Monthly를 배포합니다. 한 달간 있었던 TOAST UI 업데이트와 FE개발랩의 활동을 한 눈에 확인할 수 있습니다. 궁금한 점이나 요청하고 싶은 기능이 있나요? 주저하지 말고 알려주세요. 문은 항상 열려있습니다! 그럼 시작해볼까요~?]]></description><link>https://ui.toast.com/weekly-pick/ko_monthly_202001</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_monthly_202001</guid><pubDate>Fri, 31 Jan 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[통계로 살펴보는 2019 TOAST UI]]></title><description><![CDATA[2020년 새해가 밝았다. 올 한 해를 계획하기에 앞서, 작년 한 해를 되돌아보는 시간을 가지려고 한다. TOAST UI는 GA(Google Analytics)와 여러 통계 자료를 통해 사용자가 어떤 제품을 많이 사용하는지, 어떤 경로를 통해 브랜드 사이트로 접속하는지 등을 관심 있게 지켜보고 있다. 다양한 통계 수치를 살펴보면서 2019년에 TOAST UI가 얼마나 큰 활약을 했는지 확인해보자.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200129</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200129</guid><pubDate>Wed, 29 Jan 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[코드 스플리팅을 통해 사이트의 효율성을 높이는 방법]]></title><description><![CDATA[코드 스플리팅은 코드를 다양한 청크(chunk)로 나눌 수 있으며 필요에 따라 로드할 수 있다. 페이지 렌더링에 필요한 초기 응답 크기를 줄이는데 도움이 된다. 글에서는 Vue 프로젝트에서 적절한 예시를 통해 코드 스플리팅을 알아본다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200128</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200128</guid><pubDate>Tue, 28 Jan 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[라이트하우스의 진화: CI, 새로운 성능 지표 등]]></title><description><![CDATA[라이트하우스 버전 6에서는 새로운 지표인 Largest Contentful Paint (LCP)와 Total Blocking Time (TBT)가 First CPU Idle (FCI) and First Meaningful Paint (FMP)를 대체하고 있다. 5가지 지표의 각 가중치는 로드와 상호작용 측정의 다른 위상을 더 균형있게 맞추기 위해 조정될 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200116</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200116</guid><pubDate>Thu, 16 Jan 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[코드리뷰로 시작하는 건강한 개발 문화]]></title><description><![CDATA[2019년 11월에 개최한 회사 컨퍼런스 NHN FORWARD에서 프런트엔드에 대한 고민이나 궁금증을 해결할 수 있는 프런트엔드 상담소 를 운영했었다. 다양한 고민이 있었지만, 연차나 직책별로 궁금증과 고민거리들이 비슷하다는 것을 알 수 있었다. 명확하게 묘수를 알려줄 수 있는 트러블 슈팅부터 프런트 엔드 개발자가 가야할 방향까지 다양한 고민이 있었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200110</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200110</guid><pubDate>Fri, 10 Jan 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트 데코레이터 이해하기]]></title><description><![CDATA[얼마 전 상태 관리를 위해 MobX를 사용하여 React 앱을 개발했다. 때론 흥미롭기도 하고 가끔은 혼란스럽기도 했지만, 바로 글을 쓰고 싶을 만큼 즐거운 경험이었다. MobX 개발에서 가장 흥미로웠던 점은 클래스의 속성을 작성하기 위해 데코레이터를 사용했다는 것이다. 실제로 사용해보지 못했을때는 깨닫지 못했지만, MobX개발에서 몇 번 작성해본 후에는 데코레이터가 엄청난 잠재력을 가진 기능이라고 생각하게 되었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20200102</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20200102</guid><pubDate>Thu, 02 Jan 2020 00:00:00 GMT</pubDate></item><item><title><![CDATA[모던 자바스크립트로 테트리스 만들기]]></title><description><![CDATA[오늘은 고전 게임인 테트리스로 게임 개발 여행을 해보려고 한다. 그래픽, 게임 루프 및 충돌 감지 등을 다루고, 마지막에는 점수와 난이도가 완벽하게 작동하는 게임을 갖게 될 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20191216</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20191216</guid><pubDate>Mon, 16 Dec 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[개발(Development) 모드는 어떻게 작동할까?]]></title><description><![CDATA[자바스크립트 코드 베이스가 다소 복잡하더라도, 배포(production) 모드와 개발(development) 모드의 코드를 다르게 번들링하고 실행할 수 있다. 배포 모드와 개발 모드의 코드를 다르게 번들링하고 실행시키는 것은 매우 강력한 기능이다. React의 개발 모드는 버그로 이어질만한 많은 부분을 미리 경고해주는 검증 코드가 포함되어 있다. 하지만, 이런 코드는 번들 크기를 증가시키고 앱 속도를 느리게 할 수 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20191212</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20191212</guid><pubDate>Thu, 12 Dec 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[반응형 시스템 개선하기(feat. TOAST UI Grid)]]></title><description><![CDATA[TOAST UI Grid는 자체적인 반응형 시스템을 구축하여 데이터의 상태 관리를 하고 있다. 데이터가 변경되면 반응형 시스템이 변경을 감지하고 있는 다른 데이터 속성들도 자동으로 갱신해주기 때문에 데이터의 변경 관리를 편리하게 할 수 있었고, 간결하면서도 선언적인 코드를 사용할 수 있어 불필요한 코드도 줄일 수 있었다. 하지만 대용량 데이터를 반응형 데이터로 변경할 때 치명적인 성능 문제가 있었고, 그리드의 초기 렌더링 속도 저하를 유발했다]]></description><link>https://ui.toast.com/weekly-pick/ko_20191204</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20191204</guid><pubDate>Wed, 04 Dec 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[당신의 자바스크립트 API 문서는 안녕하신가요?]]></title><description><![CDATA[이 글을 읽고 있을 개발자라면 적어도 한 번쯤 API 문서를 작성해 본 경험이 있으리라 생각한다. "오전까지 100개 함수에 대한 API 문서를 만들어주세요."라는 업무가 주어졌다고 가정해보자. 이때 어떤 그림이 그려지는가?]]></description><link>https://ui.toast.com/weekly-pick/ko_20191028</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20191028</guid><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Doc: A Tool That Will AWESOMEIFY Your JavaScript API Documentation]]></title><description><![CDATA[If you are reading this, it may be safe to assume that you are a developer who has had an experience with writing an API documentation. Let's assume that someone told you to write API documentation for hundred functions. What kind of image comes to your mind?]]></description><link>https://ui.toast.com/weekly-pick/en_20191028</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20191028</guid><pubDate>Mon, 28 Oct 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[TDZ을 모른 채 자바스크립트 변수를 사용하지 말라]]></title><description><![CDATA[간단한 질문을 하나 하겠다. 아래 코드 스니펫에서 에러가 발생할까? 첫 번째 코드는 인스턴스를 생성한 다음 클래스를 선언한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20191014</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20191014</guid><pubDate>Mon, 14 Oct 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[바닐라 자바스크립트로 PWA 구축하기]]></title><description><![CDATA[점진적 웹 앱(PWA)은 네이티브 앱과 같은 경험을 제공하기 위한 모던 웹 기술을 사용한 웹 애플리케이션이다. 이 앱들은 특정 요구 사항을 충족한다. 서버에 배포되고, URL을 통해서 접근 가능하고, 검색 엔진으로 색인된다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20191007</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20191007</guid><pubDate>Mon, 07 Oct 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[처음 만나는 Svelte]]></title><description><![CDATA[몇 달 전, Svelte 3가 릴리즈되었다. Svelte를 사용해 몇 가지를 시험해 봤고, 튜토리얼을 참고해 몇 가지 작은 앱들을 제작했다. 솔직히 말하면, Svelte를 사용하는것이 React 보다 훨씬 빠르고 쉽게 느껴졌다. 나는 처음 React에서 받았던 놀라움을 Svelte에게서 똑같이 느꼈다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20191002</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20191002</guid><pubDate>Wed, 02 Oct 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[타입스크립트 3.6이 나왔다!]]></title><description><![CDATA[타입스크립트 3.6이 배포되었다. 유용하게 사용할 수 있는 타입스크립트 3.6의 기능을 소개한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190909</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190909</guid><pubDate>Mon, 09 Sep 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[트리 쉐이킹 되는 UI 라이브러리 만들기 ㄱ부터 ㅎ까지]]></title><description><![CDATA[필자는 TOAST UI의 라이브러리 중 하나를 개발하고 있고 그동안 쌓은 경험과 노하우를 대방출하고자 한다. 이 글은 UI 라이브러리를 만드는데, 라이브러리의 목표와 기능, 사용한 기술 스택 그리고 웹팩 설정까지 바로 적용할 수 있는 실용적인 내용으로 구성하였다. UI 라이브러리를 만드는 방법과 노하우 A to Z를 알고 싶다면 노트북을 준비하고 차근차근 따라해보자.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190829</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190829</guid><pubDate>Thu, 29 Aug 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[Building a UI Library Capable of Tree Shaking: From A to Z]]></title><description><![CDATA[The main purpose of this article is to introduce the readers to pragmatic information like how UI libraries are built, what the purpose and the features of the library are, and what kind of technology stack and webpack configurations were used.]]></description><link>https://ui.toast.com/weekly-pick/en_20190829</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20190829</guid><pubDate>Thu, 29 Aug 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[async/await로 자바스크립트에서 여러 Functions를 제대로 체이닝 해보기]]></title><description><![CDATA[필자는 electrade를 빌드하고 운영하면서 친구들이 진행하는 프로젝트를 도와준 적이 있다. 최근에는, Craiglist 스타일의 익명 이메일 전송 기능을 서버리스(serverless) Google Firebase Functions로 개발하고 싶어졌다. '.then()' 콜백을 이용해서 비동기 처리를 쉽게 설계할 수 있겠다는 생각이 들었지만, 'async/await'을 이용해서 더 가독성 있고 깔끔한 코드를 짜기로 결심했다. Functions의 다중 체이닝을 다루는 여러 아티클을 읽어보았지만, 대부분은 MSDN에서 그대로 퍼온 미완성의 예제코드여서 도움이 되지 않았다. 그런 예제 중에서는 'async/await'으로 디버그 하기 힘든 함정들이 있었는데, 필자는 거의 모든 함정들에 빠져본 것 같다. 그래서 지금부터는 완성된 코드를 사용해서 필자가 배운 것을 설명하려고 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190826</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190826</guid><pubDate>Mon, 26 Aug 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[Node.js로 ECMAScript 모듈을 사용하는 방법]]></title><description><![CDATA[Kevin Dangoor가 CommonJS 프로젝트를 시작한 후 2009년부터 어떻게 하면 자바스크립트가 웹 브라우저에서 실행되는 것 뿐만 아니라, 범위가 확대되어 백엔드 영역을 포함한 애플리케이션 개발에도 적합한지에 대해 토론이 시작되었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190805</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190805</guid><pubDate>Mon, 05 Aug 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[React.memo() 현명하게 사용하기]]></title><description><![CDATA[유저들은 반응이 빠른 UI를 선호한다. 100ms 미만의 UI 응답 지연은 유저들이 즉시 느낄 수 있고, 100ms에서 300ms가 지연되면 이미 유저들은 상당한 지연으로 느낀다. UI 성능을 증가시키기 위해, React는 고차 컴퍼넌트(Higher Order Component, HOC) `React.memo()`를 제공한다. 렌더링 결과를 메모이징(Memoizing)함으로써, 불필요한 리렌더링을 건너뛴다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190731</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190731</guid><pubDate>Wed, 31 Jul 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[리액트 렌더러를 최적화하는 간단한 트릭]]></title><description><![CDATA[React.memo, PureComponent 또는 shouldComponentUpdate 를 사용하지 않고 최적화하는 방법. 필자는 리액트의 리렌더링과 관련된 주제로 블로그 글을 준비하다가 당신이 감사할만한 이 작은 보석같은 리액트 지식을 발견했다. 이 글을 읽고 난 후, Brooks Lybrand는 이 트릭을 적용하였고 아래와 같은 결과를 얻었다. 흥미롭지 않은가? 그럼 인위적으로 작성한 간단한 예제를 보고 실제 앱에서 어떻게 적용할 수 있을지 이야기 해보자.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190725</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190725</guid><pubDate>Thu, 25 Jul 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[CSS 그리드로 콘퍼런스 일정 만들기]]></title><description><![CDATA[콘퍼런스 일정표의 UI를 구현하기 위해 CSS 그리드를 사용하였다. 일정표에 각각의 세션을 표현하려면 유연한 레이아웃이 필요했다. 이 프로젝트에서 핵심 요구사항은 가로, 세로로 이루어진 2차원 평면에 다른 크기이거나 서로 다른 배치를 가지는 복잡한 자식 요소를 완벽하게 표현하는 것이다. 개념 증명(PoC-Proof of Concept) 과정에서 코드를 읽기 쉽고 재미있게 작업할 수 있는 몇 가지 기술을 발견했다. 결과로 나온 예제에는 CSS 그리드 기능의 흥미로운 사용법이 포함되어 있으며, 예제를 작성하면서 평소에 잘 알지 못했던 그리드 세부사항에 대해 알게 되었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190703</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190703</guid><pubDate>Wed, 03 Jul 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[Expo Web(React Native for web) 튜토리얼]]></title><description><![CDATA[최근 React Native는 React Native for web을 발표하면서 또 하나의 플랫폼을 추가했다. Expo도 이에 발 맞추어 6월이 릴리즈된 SDK 33버전에서 Expo Web 베타 버전을 지원하기 시작했다. Expo Web은 모바일 웹을 구현할 수 있도록 해주고 PWA를 지원한다. React Native와 Expo가 제공하는 컴포넌트로 네이티브 앱을 개발할 수 있지만 웹에서도 같은 컴포넌트로 돌아갈 수 있게 만든 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190624</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190624</guid><pubDate>Mon, 24 Jun 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[더 가볍고 강력해진 TOAST UI Grid v4.0을 만나보세요!]]></title><description><![CDATA[TOAST UI Grid는 여러분의 데이터를 효과적으로 표현하고, 편리한 사용성을 제공하기 위해 많은 노력을 해왔습니다. TOAST UI Grid 4.0은 더 빠르고, 가벼우면서 사용하기 편리한 제품을 제공하는 것을 목표로 올해 초부터 시작되었습니다. 의존성 제거, 가상 DOM을 통한 성능 향상, API 개선을 목표로 대대적인 작업을 진행하였고, 마침내 더 강력하고 가벼워진 TOAST UI Grid 4.0을 선보이게 되었습니다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190620</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190620</guid><pubDate>Thu, 20 Jun 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[TOAST UI Grid 4.0 is Finally Here!]]></title><description><![CDATA[Since the beginning, our main goal was to facilitate efficient data representation and convenient functionalities for you, our users. From the beginning of the year, we have been working hard to provide you with a faster and leaner product filled with convenient features. We have eliminated the unnecessary dependencies; enhanced the performance through the virtual DOM; and undertaken a massive task of improving the overall API.  Finally, we are proud to present to you the more powerful and lighter TOAST UI Grid 4.0!]]></description><link>https://ui.toast.com/weekly-pick/en_20190620</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20190620</guid><pubDate>Thu, 20 Jun 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[Web Share API 사용하기]]></title><description><![CDATA[간단한 공유 버튼 예제로 Web Share API의 사용법과 네이티브 공유 기능의 장점을 설명한다. API를 지원하지 않는 브라우저에서는 폴백 매커니즘으로 컨텐츠 공유를 지원하는 방법도 소개한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190618</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190618</guid><pubDate>Tue, 18 Jun 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[Building a 0.7KB Reactivity System Similar to Vue]]></title><description><![CDATA[Currently, the TOAST UI Grid team is working diligently for the major update that is the release of the version 4. The purpose of this update is to rewrite all of the previous code base written with Backbone and jQuery from scratch. The team is expecting to decrease unnecessary dependency, making the new Grid to be leaner and faster than before.]]></description><link>https://ui.toast.com/weekly-pick/en_20190610</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20190610</guid><pubDate>Mon, 10 Jun 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹팩으로 Vue.JS 번들 크기를 줄이는 방법]]></title><description><![CDATA[필자는 Stanley Black & Decker의 Industry 4.0 팀에서 일하고 있다. 최근 우리 팀은 세계적인 Stanley의 제조 공장을 위해 앱 스토어와 같은 것을 만들었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190603</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190603</guid><pubDate>Mon, 03 Jun 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[0.7KB로 Vue와 같은 반응형 시스템 만들기]]></title><description><![CDATA[TOAST UI Grid는 현재 새로운 메이저 업데이트인 버전 4를 릴리스하기 위해 열심히 준비중이다. 버전 4는 Backbone과 jQuery를 사용해서 작성했던 기존의 코드를 모두 버리고 처음부터 새로 작성하는 대대적인 개편 작업이다. 이번 업데이트를 통해 불필요한 의존성을 줄이면서, 훨씬 더 가볍고 빠른 그리드가 되기를 기대하고 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190531</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190531</guid><pubDate>Fri, 31 May 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[크롬 네이티브 레이지 로딩]]></title><description><![CDATA[좋은 기회로 2019년 구글I/O에 참석했다. 웹 기술 세션 중에는 크게 눈에 띄는 세션은 없었지만, 일부 세션에서 소개된 웹과 관련 기술 몇 가지는 흥미로웠다. Native Lazy Loading, Portals, Duplex, Rich Results 정도가 나의 관심을 끌었다. 그중 키노트에서 시작해 몇 개의 세션에서 두루두루 언급한 네이티브 레이지 로딩이 제일 기대됐다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190522</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190522</guid><pubDate>Wed, 22 May 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[Lodash의 대체재로서의 순수 자바스크립트 함수]]></title><description><![CDATA[이 포스트는 가장 널리 사용되고있는 라이브러리인 Lodash / Underscore.js 의 유틸리티 함수들을 순수 자바스크립트를 통해 어느 정도로 대체해 줄 수 있는지 이해를 돕기 위해 정리된 내용이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190515</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190515</guid><pubDate>Wed, 15 May 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트에서 `globalThis`의 소름끼치는 폴리필]]></title><description><![CDATA[globalThis 제안은 모든 자바스크립트 환경에서 전역 this에 접근할 수 있는 메커니즘을 도입한다. globalThis의 폴리필은 매우 간단할 것 같지만, 정확하게 만들기는 매우 어렵다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190503</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190503</guid><pubDate>Fri, 03 May 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[앱 테마 구현 - Vue.js와 스타일드 컴포넌트로 실시간 테마 구현하기]]></title><description><![CDATA[Vue.js 프로젝트를 진행하면서 구현하기 조금 까다로웠던 기능이 있다. 완벽한 Vue 문서(Docs)만으로 바로 답을 찾을 수 없었던 부분이 있었는데, 고객 요구 사항으로 사용자 프로필에 대한 테마를 직접 선택할 수 있도록 하는 기능이었다. 개발 초기에는 요구 사항이 그리 복잡하지 않았다. 몇 가지 색상을 제공하고 사용자가 선택한 색상이 현재 페이지에 잘 반영되기만 하면 되므로 따로 사용자 프로필 테마 색상을 따로 저장할 필요가 없었다. 팀에서는 이 기능의 이름을 "라이브 테마(Live Theming)"라고 지었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190430</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190430</guid><pubDate>Tue, 30 Apr 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[What I Learned from Migrating from AngularJS to Vue]]></title><description><![CDATA[Therefore, instead of discussing why we picked Vue, I would like to share what I learned from migrating from one framework to another. While AngularJS still has high retention rate, I assume that there are more groups in a similar predicament as we were. Although some of the content may be obvious, I hope that this article can be of help to others when migrating between frameworks.]]></description><link>https://ui.toast.com/weekly-pick/en_20190420</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20190420</guid><pubDate>Sat, 20 Apr 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[AngularJS에서 Vue로 전환하면서 배운 것]]></title><description><![CDATA[왜 Vue를 선택했냐는 끝나지 않을 이야기는 접어 두고, 어쨌든 프레임워크를 전환하면서 배운 것을 이 글에서 공유하고자 한다. AngularJS가 여전히 높은 점유율을 가지고 있으므로 우리와 같은 고민을 하는 회사와 개발자가 많을 것이라고 짐작한다. 이 글에서 다룰 내용은 뻔할 수도 있지만 프레임워크를 전환할 때 꼭 챙기기를 권장한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190419</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190419</guid><pubDate>Fri, 19 Apr 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[Pragmatic Front-End Testing Strategies (3)]]></title><description><![CDATA[React applications that use Redux often consist of action creators, reducers, container components, and the presentational components. Also, if the project calls for additional functionalities like local storage or network IO, middleware codes to implement said items are included as well.]]></description><link>https://ui.toast.com/weekly-pick/en_20190419</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20190419</guid><pubDate>Fri, 19 Apr 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[You don't know JS module]]></title><description><![CDATA[자바스크립트 개발을 하다 보면 다양한 모듈 정의 방법을 마주치게 된다. ES 모듈, CommonJS 모듈, AMD 모듈 등 자바스크립트에는 다양한 모듈 시스템이 공존하는데, 각 모듈은 모두 다른 방식으로 모듈을 정의하며 객체를 내보내고 가져오도록 설계되어있다. 그러나 React, Vue 등의 프레임워크로 애플리케이션을 개발해 본 독자라면, 모듈을 가져올 때 이러한 다양한 모듈 포멧을 신경쓰면서 사용해 본 기억이 없을 것이다. 그동안 번들러를 사용해서 ES6 환경으로 개발을 할 때 CommonJS 모듈을 ES6의 'import' 문법으로 가져오더라도 에러가 발생하지 않는 게 의심스럽지는 않았는가? ES 모듈의 'import ~ from ~;' 문법을 통해서 가져와도 잘 동작하니까 "그냥" 사용하지는 않았는가? 이제 슬슬 마음속에 "번들러나 타입스크립트 컴파일러 안에서 도대체 무슨 일이 일어나고 있는 걸까?"라는 질문이 떠오르길 바란다. 그렇다면 이 글을 통해 ES 모듈에만 있는 방법인 default import(이하 기본값 가져오기)를 이용해서 다른 방식의 모듈을 가져와 사용할 수 있는 이유, 그리고 번들러와 트랜스파일러 그리고 타입스크립트는 어떤 방법으로 서로 다른 모듈끼리 가져오기를 지원하는지 알아보도록 하자.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190418</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190418</guid><pubDate>Thu, 18 Apr 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[Pragmatic Front-End Testing Strategies (2)]]></title><description><![CDATA[In the first part of this series I discussed the importance of test automation and testing strategies, and why it is difficult to automate visual component testing. While it is not impossible to automate the visual quality assurance process, with the tools that are available to us today, the effort-to-return ratio is not particularly recommendable. Since this series deals with “pragmatic” testing strategies,]]></description><link>https://ui.toast.com/weekly-pick/en_20190412</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20190412</guid><pubDate>Fri, 12 Apr 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[Pragmatic Front-End Testing Strategies (1)]]></title><description><![CDATA[It is the height of JavaScript. For the past couple of years, JavaScript has maintained its championship title as the most popular programming language, and is still rapidly developing. As someone who began on a path of a front-end developer more than a decade ago, in a lawless wasteland without the simplest concept of the Web Standard, I can’t help but feel humbled by JavaScript’s achievements. Observing the stunning evolution of web development, from having development environments that do not deserve their names to being inundated with cornucopia of resources, tis truly the golden age.]]></description><link>https://ui.toast.com/weekly-pick/en_20190405</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20190405</guid><pubDate>Fri, 05 Apr 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[V8 엔진 7.4 버전 출시]]></title><description><![CDATA[우리는 릴리스 절차에 따라 6주마다 V8 엔진에 대한 새 브랜치를 만든다. 각 버전은 크롬 베타 버전의 마일스톤이 만들어지기 직전에 V8 엔진의 깃헙 마스터 브랜치에서 만들어진다. 우리는 오늘 새 브랜치인 V8 엔진 7.4 버전을 발표하게 되어 기쁘다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190401</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190401</guid><pubDate>Mon, 01 Apr 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[타입스크립트에서 Vue 컴포넌트를 개발하는 방법]]></title><description><![CDATA[내가 처음 SPA 프로젝트를 진행했던 때는 2012년이다. 그때 제일 핫했던 백본(Backbone)을 기반으로 구축한 꽤 큰 규모의 프로젝트였다. 그때는 지금처럼 프론트엔드 개발환경이 좋지 않았고 SPA라는 개념 자체가 겨우 슬슬 알려지기 시작한 시기였다. MVC에서 벗어나질 못한 프레임웍들이 주를 이루었던 프론트엔드 진영이었다. 앵귤러JS(AngularJS)가 MVC가 맞느니 아니니 박터지는 가운데 리액트(React)라는 아종이 등장했다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190327</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190327</guid><pubDate>Wed, 27 Mar 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[ES2019의 새로운 기능(What's New in JavaScript for 2019)]]></title><description><![CDATA[지난 몇 년 동안 자바스크립트는 새로운 언어로 꾸준하게 진화해왔다. 다음 버전의 자바스크립트 기능에 대해 궁금했다면 이 글이 도움이 될 것이다. 먼저, 최신 기능에 관해 얘기하기 전에 아이디어가 자바스크립트의 일부가 되는 방식을 이해하는 게 중요하다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190314</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190314</guid><pubDate>Thu, 14 Mar 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[Vue에서 중첩 데이터를 감시하는 법]]></title><description><![CDATA[앱은 배열이나 객체의 데이터 속성을 가질 수 있다. 그리고 당신은 데이터가 변경될 때마다 앱이 무엇가를 수행하길 원한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190307</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190307</guid><pubDate>Thu, 07 Mar 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[전문가를 위한 Expo]]></title><description><![CDATA[지난 몇 개월 동안 우리는 숙련된 전문가에게 더 나은 지원과 함께, 자부심을 가지고 높은 수준의 앱을 만들 수 있는 개발지원을 하기 위해서 Expo 플랫폼에 몇 가지 기능과 구조적인 변경 작업을 하고 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190213</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190213</guid><pubDate>Wed, 13 Feb 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[실용적인 프론트엔드 테스트 전략 (2)]]></title><description><![CDATA[테스트 자동화와 테스트 전략의 중요성, 시각적 테스트를 자동화하는 것이 어려운 이유 등을 살펴보았다. 사실 시각적 테스트를 자동화하는 것이 불가능하지는 않지만, 현재 우리가 가진 도구로는 기대하는 만큼 효용을 얻기가 어렵다. 이 글은 "실용적인" 테스트 전략을 다루고 있으므로, 한발 물러서서 다른 접근 방식을 시도해 보도록 하겠다. 즉, 결과물을 시각적으로 검증하는 행위는 자동화하지 않고 "사람의 눈"에 맡기되, 검증을 위한 준비 작업을 최대한 자동화하는 것이다. 이러한 작업을 위한 가장 효과적인 도구가 바로 스토리북이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190116</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190116</guid><pubDate>Wed, 16 Jan 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[오픈소스 프로젝트를 운영하며..]]></title><description><![CDATA[2018년은 FE개발랩에 좋은 일이 많은 한 해였다. 랩에서 내놓은 오픈소스 프로젝트들이 좋은 반응을 얻었고, 몇 가지 의미있는 성과를 얻었다. 아직 오픈소스 생태계에서 큰 역할을 하지 못하는 대한민국에서 좋은 오픈소스 프로젝트들이 많이 나왔으면 하는 바람으로 몇 년간 우리가 오픈소스를 운영하면서 얻은 나름의 결과를 글로 작성한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20190110</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20190110</guid><pubDate>Thu, 10 Jan 2019 00:00:00 GMT</pubDate></item><item><title><![CDATA[실용적인 프론트엔드 테스트 전략 (1)]]></title><description><![CDATA[바야흐로 자바스크립트의 시대이다. 최근 2~3년 동안 자바스크립트는 가장 인기있는 언어 순위 1위를 유지하고 있고, 여전히 빠른 속도로 성장하고 있다. 10여년 전, 웹 표준이라는 개념조차 없을 때부터 프론트엔드 개발을 해 오던 나 같은 개발자에게는 정말 감개무량한 시대가 아닐까 싶다. 당시에는 개발 환경이라는 단어조차 부끄러울만큼 척박한 환경이었는데, 지금 쏟아져나오는 새로운 기술과 개발 도구를 바라보고 있으면 가히 풍요의 시대라고도 할 수 있을 것 같다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20181226</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20181226</guid><pubDate>Wed, 26 Dec 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[바벨과 타입스크립트의 아름다운 결혼]]></title><description><![CDATA[babel/preset-typescript 플러그인을 만들기 위한 타입스크립트와 바벨 팀의 1년간의 공동작업 덕분에 타입스크립트가 훨씬 쉬워졌다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20181220</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20181220</guid><pubDate>Thu, 20 Dec 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[아이오닉(Ionic) + 뷰(Vue)]]></title><description><![CDATA[지난주, VueConf Toronto에서 아이오닉 프레임워크(Ionic Framework)용 뷰(Vue) 지원에 대해 첫 공식 시사회를 열었다. 아이오닉의 개발자 Josh Tomas (@jthoms1)는 @ionic/vue 첫 알파 릴리즈에 대한 통찰과 개발자들한테 뷰 + 아이오닉 프레임워크가 안성맞춤인 이유를 공유했다. 그러나 이러한 본론으로 들어가기에 전에 아이오닉 프페임워크와 뷰의 역사를 먼저 이해하는 것이 중요하다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20181206</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20181206</guid><pubDate>Thu, 06 Dec 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Big-O 말고, Bug-O 노테이션]]></title><description><![CDATA[성능이 매우 중요한 코드를 작성할 때는 알고리즘 복잡도를 생각하는 것이 좋다. 알고리즘 복잡도는 대개 Big-O 노테이션으로 표현된다. Big-O는 데이터가 많아질수록 코드가 얼마나 느려지는가의 척도가 된다. 예를 들어, 정렬 알고리즘의 복잡도가 O(n<sup>2</sup>)이라고 할 때, 50배 많은 개수의 아이템을 정렬하면 대략 50<sup>2</sup> 즉, 2,500배 느려지게 된다. Big-O는 정확한 수치를 나타내지 않는 대신, 알고리즘의 규모를 이해하는 데 도움을 준다. 아래처럼 Big-O 표현을 보면 얼마나 복잡한 알고리즘인지 알 수 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180918</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180918</guid><pubDate>Tue, 18 Sep 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[이벤트 리스너 캐시를 이용한 React 성능 향상]]></title><description><![CDATA[자바스크립트의 객체와 함수가 참조형이라는 개념은 React의 성능에 직접적인 영향을 끼침에도 불구하고 많이 다뤄지지 않고 있다. 예를들어, 내용이 완전히 같은 함수를 두 개 만들더라도 두 함수는 절대 같지 않다. 다음과 같이 작성해보자. 다른 언어들을 사용해본 경험이 있다면 포인터라는 개념이 친숙할 것이다. 객체를 만들거나 기기의 메모리에 무언가를 할당할 때 마다 어떤 일이 일어나는 것일까?]]></description><link>https://ui.toast.com/weekly-pick/ko_20180911</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180911</guid><pubDate>Tue, 11 Sep 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[바벨 7 출시]]></title><description><![CDATA[2년에 가까운 시간 동안 4k의 커밋, 50회 이상의 프리 릴리즈, 그리고 많은 도움에 힘입어 바벨 7 정식 출시를 발표하게 되어 흥분된다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180910</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180910</guid><pubDate>Mon, 10 Sep 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[뷰 컴포넌트 테스트를 위한 치트시트]]></title><description><![CDATA[프론트엔드에 대한 단위 테스트를 작성하도록 요청받았을 당시에만 해도 나는 Vue 애플리케이션을 테스트하는 것에 대해 전혀 몰랐다. 그래서 vuejs 테스트에 대해 알아보고 배운 것을 공유하고 싶다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180822</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180822</guid><pubDate>Wed, 22 Aug 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Vue.js에서의 다이나믹 컴포넌트 템플릿]]></title><description><![CDATA[컴포넌트들이 항상 같은 구조로 되어 있진 않다. 그리고 때론 관리해야할 상태들이 많을때도 있다. 이런 문제는 비동기적인 방법으로 해결할 수도 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180814</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180814</guid><pubDate>Tue, 14 Aug 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[트리 쉐이킹으로 자바스크립트 페이로드 줄이기]]></title><description><![CDATA[오늘날 웹 애플리케이션들은 굉장히 크고, 대부분 자바스크립트로 만들어진 것이다. 2018년 중순, HTTP Archive가 보여준 모바일 장치에서 자바스크립트의 평균 전송 크기는 약 350 KB 이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180716</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180716</guid><pubDate>Mon, 16 Jul 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[요즘 잘나가는 프론트엔드 개발환경 만들기(2018) - ES6]]></title><description><![CDATA[본 시리즈의 이전 아티클에서는 웹팩4에 대해 다루면서 바로 쓸 수 있는 환경을 만들어봤다. 이번편에는 그 환경 그대로 이용해 ES6 개발 환경을 추가한다. ES6는 이제 충분히 써도 될만한 시기라고 생각한다. "나는 프런트 개발자가 아니기도 하고 브라우저가 모두 지원하지도 않기에 ES6는 아직 못쓴다" 라고 생각하고 있다면 이 글을 통해 생각을 바꿀 수 있길 바란다. 어차피 쓰는 거 ES6뿐 아니라 ES8까지 사용하는 것을 권장한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180620</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180620</guid><pubDate>Wed, 20 Jun 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Using Proxy and Virtual DOM to Build Your Own Framework]]></title><description><![CDATA[Proxy is a feature newly introduced in ES2015. Although IE11 does not support Proxy, other modern browser are compatible with it. While Proxy cannot be transpiled using Babel, Google offers a polyfill so that it can be compatible with IE11.]]></description><link>https://ui.toast.com/weekly-pick/en_20180611</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20180611</guid><pubDate>Mon, 11 Jun 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Proxy와 가상 돔을 사용하여 나만의 프레임워크 만들기]]></title><description><![CDATA[Proxy는 ES2015에 소개된 기능이다. IE11을 제외하고는 모던 브라우저에서 지원하고 있어서 사용할 수 있다. babel 트랜스파일로도 지원되고 있지 않지만, 구글에서 폴리필을 만들어 공개하고 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180608</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180608</guid><pubDate>Fri, 08 Jun 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[러스트(그리고 모든 언어)에서 웹 어셈블리를 더 좋게 만들기]]></title><description><![CDATA[러스트(Rust) 커뮤니티의 2018년 최대 목표는 웹 언어가 되는 것이다. 웹 어셈블리(WebAssembly)를 타깃으로 러스트는 자바스크립트처럼 웹에서 실행될 수 있다. 그런데 이것이 무엇을 뜻하는 걸까? 러스트가 자바스크립트를 대체하려는 걸까?]]></description><link>https://ui.toast.com/weekly-pick/ko_20180604</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180604</guid><pubDate>Mon, 04 Jun 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[서서히 죽어가는 Internet Explorer와 점진적 향상의 미래]]></title><description><![CDATA[필자는 풀타임 개발자의 업무를 작은 회사에서 처음 맡았다. 우리는 BrowserStack을 가지고 있지 않았기 때문에 임시 변통 장치 실험실을 함께 만들었다. 부서진 1세대 iPad와 오래된 버전의 Safari로 그 웹사이트를 봤을때, 필자는 왜곡과 부서진 잔해들이 보였다. 필자는 한때 웹을 "상상할 수있는 가장 적대적인 소프트웨어 엔지니어링 환경"이라고 생각했던 Douglas Crockford의 말을 떠올렸다. 올해 초 Verge 의 광범위하게 공유 된 기사는 웹에서 볼 수있는 "Chrome에서 가장 잘 작동합니다."메시지에 대해 경고했다. 이 문제의 예가 더 있다. 널리 사용되는 메시징 앱 슬랙(Slack)은 Chrome에서만 음성 통화가 작동한다. 도움 요청에 대한 응답으로 Slack은 다음과 같이 설명했다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180531</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180531</guid><pubDate>Thu, 31 May 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[redux-saga-test-plan - 간편한 Redux Saga 테스트 - Jeremy Fairbank 인터뷰]]></title><description><![CDATA[Redux Saga는 테스트가 쉽기로 유명하다. 하지만, 더 간단해질 수 있다면 어떨까? Jeremy Fairbank는 더 간단한 테스트를 위해 redux-saga-test-plan을 디자인했다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180514</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180514</guid><pubDate>Mon, 14 May 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[AngularJS의 @ < & = 바인딩 해부하기]]></title><description><![CDATA[AngularJS의 디렉티브/컴포넌트에서 @ < & = 가 실제로 어떻게 동작하는 지 알아보고, < 기호가 어떻게 나머지 기호들을 대체할 수 있는 지 알아보자.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180510</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180510</guid><pubDate>Thu, 10 May 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[요즘 잘나가는 프론트엔드 개발 환경 만들기(2018) - Webpack 4]]></title><description><![CDATA[최근에 새로운 프로젝트를 진행하게 되면서 기존에 간만 살짝 보고 있던 뷰(Vue, 이하 뷰)를 본격적으로 도입하게 되었다. 사실 팀에서는 리액트를 선호하고 있었으나 회사 내부에서 뷰의 사용이 빠른 속도로 증가하고 있었고 그에 따라 팀내에서도 뷰에 대한 전문성이 필요하게 되었다. 뷰와 리액트는 서로 영향을 주고받고 발전해나가는 도구들이라 비슷한 부분이 많아 큰 어려움 없이 적응할 수 있었다. 새로운 프로젝트에서는 뷰를 사용하는것 뿐 아니라 다른 개발 환경도 요즘 것들로 업그레이드 해봤다. 웹팩 4 사용하고 테스트 러너도 기존에 팀 내에서 표준처럼 사용하던 카르마(Karma)에서 요즘(이미) 잘나가는 제스트(Jest)로 새롭게 시도해봤다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180420</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180420</guid><pubDate>Fri, 20 Apr 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[JavaScript에서 Rust, 그리고 Rust에서 JavaScript - wasm-bindgen 이야기]]></title><description><![CDATA[우리는 최근 WebAssembly 컴파일이 얼마나 빠른지, 얼마나 빠른 JS 라이브러리를 만들 수 있는지, 거기에 얼마나 더 작은 바이너리를 만들어 주는지 확인했다. 더욱이 우리는 Rust와 JavaScript 커뮤니티의 더 나은 협업을 위한 계획을 세웠고, 이것에는 다른 웹 프로그래밍 언어들을 위한 것도 포함되어있다. 이전 글에서도 슬쩍 말했지만, 나는 wasm-bidgen에 대해서 좀 더 자세하게 알아보려 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180411</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180411</guid><pubDate>Wed, 11 Apr 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[ES modules - 만화로 보는 심층 탐구]]></title><description><![CDATA[ES 모듈은 자바스크립트의 공식적이며 표준화된 모둘 시스템이 되었다. 표준이 된 지는 얼마 지나지 않았지만 거의 10년간의 표준화 작업을 거쳤다. 이제 기다림은 거의 끝나간다. 5월에 Firefox 60(현재는 베타버전)이 출시되면 모든 브라우저가 ES 모듈을 지원할 것이다. 그리고 Node 모듈 작업 그룹은 현재 ES 모듈 지원을 추가하려고 노력하고 있고, WebAssembly를 위한 ES 모듈 지원 또한 진행중이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180402</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180402</guid><pubDate>Mon, 02 Apr 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Redux-Saga - Channel]]></title><description><![CDATA[이번 글에서는 Redux-Saga의 Channel(이하 채널)에 대해 정리해보고자 한다. 채널은 Redux-Saga의 초기 버전에서부터 고려했던 API는 아니다. 그런데 Stackoverflow에서 외부 이벤트를 Saga와 어떻게 연결하냐는 질문에서 채널의 필요성이 표면적으로 나타나기 시작했다. 핵심은 Push 기반과 Pull 기반 동작이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180316</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180316</guid><pubDate>Fri, 16 Mar 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[리액트 HOC 집중 탐구 (2)]]></title><description><![CDATA[1부에서는 HOF(Higher Order Function)의 개념부터 시작해서 HOC(Higher Order Component)의 개념이 무엇인가와 어떤 상황에 이용될 수 있는지에 대해 알아보았다. 하지만 1부의 내용만 읽어서는 HOC를 실제 프로젝트에 어떻게 활용할 수 있는지에 대한 감이 잘 잡히지 않았을 것이다. 2부에서는 실제로 간단한 HOC를 만들어보고, 그 과정에서 발생할 수 있는 문제들과 이를 어떤 식으로 해결하는지, 그리고 지켜야할 컨벤션에 어떤 것들이 있는지에 대해 살펴보도록 하겠다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180302</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180302</guid><pubDate>Fri, 02 Mar 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[ECMAScript 스펙 톺아보기 - Primitive]]></title><description><![CDATA[현재 팀 내부에서는 시니어들이 팀 인력 채용 프로세스를 개선하고 있다. 프로세스 중에서도 현재는 필기시험 문제를 재출제하는 중인데 이게 생각보다 쉽지 않아 매일 매일 서로 의견이 분분하다. 그러던 어느 날 프리미티브에 대한 의견을 나누던 중 자바스크립트의 프리미티브를 객체 같이 사용된다고 설명해도 되느냐 안되느냐의 문제를 놓고 토론을 하게 되었는데 내 의견은 표면적으로 객체처럼 사용할 수 있기에 객체 같이 취급된다고 표현해도 된다는 의견이었고 다른 한 멤버는 중간에 프리미티브 래퍼가 관여하는 내용이기 때문에 그렇게 설명하면 안 된다는 것이었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180223</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180223</guid><pubDate>Fri, 23 Feb 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[The Old GitHub Project Won 3,000 Stars A Week]]></title><description><![CDATA[The TOAST UI Editor is one of the TOAST UI Components we're working on. It has been around for three years, with its first commit in March 2015. I went to work on December 30, 2017, to release version 1.0 and publish it to npm. At that time the repository was as quiet as the air of the office at the end of the year. An issue posted once in several months, It seemed to try to say "This project is open source.".]]></description><link>https://ui.toast.com/weekly-pick/en_20180219</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20180219</guid><pubDate>Mon, 19 Feb 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Basics of Web Word Processor (2)]]></title><description><![CDATA[Web Word Processor (“Web Word”) is attractive software that allows users to edit documents anywhere as long as they have access to a browser. It does not support all the features of the native Word processor]]></description><link>https://ui.toast.com/weekly-pick/en_20180219</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20180219</guid><pubDate>Mon, 19 Feb 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹 워드프로세서 기초 만들어 보기(2)]]></title><description><![CDATA[웹 워드프로세서(이하 웹 워드)는 브라우저만 있으면 어디서나 문서 편집을 할 수 있다는 장점이 있어 매력적인 소프트웨어이다. 아직 네이티브 워드프로세서로 할 수 있는 모든 기능을 다 지원하는 것은 아니지만 가까운 미래에는 가능하리라고 믿는다. 2년 동안 웹 워드를 만드는 동안 가능성을 믿고 험난한 과정을 헤쳐 나갔고, 기능을 구현해 나갈 때마다 느꼈던 흥분과 희열은 아직도 강하게 남아있다. 이 글을 읽는 여러분 또한 그런 느낌을 받게 되기를 소망한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180216</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180216</guid><pubDate>Fri, 16 Feb 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[3년 된 오픈소스가 1주일 만에 3,000 GitHub 스타를 받다]]></title><description><![CDATA[TOAST UI Editor는 2015년 3월에 첫 커밋이 이루어진, 대략 3년이 된 프로젝트이다. 2017년 12월 30일 이 프로젝트의 버전을 1.0으로 올리고 npm에 배포하기 위해 연말에 출근을 했었고, 당시 이 프로젝트의 저장소는 연말 사무실의 풍경만큼이나 한산했다. 3년간 정확히 160개의 github 스타를 받았었으며, PR은 기대하기 힘들었다. 이슈는 몇 달에 한 번씩 나타나 "이 프로젝트는 오픈소스야"라는 정체를 희미하게 알리는 정도의 역할을 하였다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180209</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180209</guid><pubDate>Fri, 09 Feb 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Redux-Saga - 제너레이터와 이펙트]]></title><description><![CDATA[지난 글에서 Redux-Saga와 사이드 이펙트를 가지고 공부 겸 정리 겸 글을 작성했다. 이번 글에선 Redux-Saga에서 사용하는 제너레이터함수, 이펙트에 대해 정리해보려 한다. 제너레이터함수는 협력적이고,run-to-completion이 아니며, 그렇다고 비동기도 아닌 그런 함수다. 그리고 이펙트는 Redux-Saga의 가장 중심이 되는 특징이다. 마치 Redux의 Action처럼 단순한, 일반적인 객체인데 개발자에겐 어마어마한 마법을 보여준다. 그리고 대부분의 서비스 로직을 이 이펙트로 작성한다. 이 두 가지를 이해한다면 이제 Redux-Saga는 뭔지 모르겠는데 엄청 대단해 보이는 것에서 엄청 대단한 건데 난 이해함ㅋ이 될거라 생각한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20180119</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20180119</guid><pubDate>Fri, 19 Jan 2018 00:00:00 GMT</pubDate></item><item><title><![CDATA[Basics of Web Word Processor (1)]]></title><description><![CDATA[The history of Web Word Processor (or, web word) began earlier than expected. It was known widely to the public in 2006 as Google Docs was introduced, so the software is more than a decade long. ThinkFree aimed for a web word running on a web browser under Java Applet.]]></description><link>https://ui.toast.com/weekly-pick/en_20171226</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20171226</guid><pubDate>Tue, 26 Dec 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹 워드프로세서 기초 만들어 보기(1)]]></title><description><![CDATA[웹 워드프로세서(이하 웹 워드)분야는 생각보다 오래된 역사를 가지고 있다. 구글 독스가 2006년에 소개되면서 많이 알려졌으니 벌써 십여 년의 역사가 있는 소프트웨어 분야이다. 씽크프리는 자바 애플릿 기반으로 브라우저에서 구동되는 웹 워드를 표방했지만, 자바스크립트와 같은 웹 언어로 작성되지 않았기 때문에 웹 워드라고 보기는 어렵다. 네이티브 워드프로세서는 각 OS를 기반으로 독자적인 그래픽 툴킷과 C++이나 자바와 같은 프로그래밍 언어로 구현되어 있다. 반면에 웹 워드는 브라우저에서 구동되기 때문에 지원되는 브라우저만 있으면 어느 컴퓨터에서나 문서 편집을 할 수 있는 장점이 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20171222</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20171222</guid><pubDate>Fri, 22 Dec 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹 컴포넌트(5) - lit-html로 React 처럼 코딩하기]]></title><description><![CDATA[이번 글은 웹 컴포넌트 소개 연재 5번째로 웹 컴포넌트를 react처럼 코딩하기를 해보겠다. 사용하는 예제 전체 코드는 Todo Web Components에서 참조할 수 있다. 이 예제를 통해 지난 연재에서 알아보았던 커스텀 엘리먼트, 쉐도우 돔 그리고 lit-HTML]을 사용하여 웹 컴포넌트 애플리케이션을 어떻게 만들 수 있는지 확인해보자.]]></description><link>https://ui.toast.com/weekly-pick/ko_20171215</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20171215</guid><pubDate>Fri, 15 Dec 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹이 나아갈 길을 Sonarwhal로 검사하자]]></title><description><![CDATA[몇 해 전, 필자가 대학 졸업반일 때 웹 개발 과정은 두 가지의 기술에 초점을 두었다. 한가지는 기본적인 것들 즉, HTML과 CSS, 그리고 다른 한 가지는 Adobe Flash였다. 필자는 포트폴리오에 추가하기 위해 Action Script3.0로 사용자와 상호작용하는 웹사이트를 작성하는데 많은 시간을 들였다. 대학을 졸업한 뒤 몇 개월이 지나, 필자는 Flash로 고객의 웹사이트를 만들어 주었고 그것이 처음이자 마지막이었다. Flash는 죽어가고 있었다. 그리고 필자의 이력서나 포트폴리오에서도 사용하지 않게 되었다. 그것은 바뀌는 기술의 변화 속도에 대한 첫 번째 교훈이었고, 졸업 후 이제 막 실무로 뛰어드는 사람에게는 매우 두려운 깨달음이었다. 그 후 7년 후인 지금, 필자는 Microsoft Edge팀에서 디자인을 돕고, 필자가 느꼈던 불안감을 줄여줄 도구(Sonarwhal)를 개발한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20171212</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20171212</guid><pubDate>Tue, 12 Dec 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Redux-Saga - 사이드 이펙트 관리]]></title><description><![CDATA[지난 1년 6개월 동안 리액트, 리덕스를 공부하고 활용해 웹 애플리케이션을 개발했다. 지금도 개발하고 있고, 여전히 비동기 처리와 같은 사이드 이펙트(Side effects)를 고민하고 있다. 리액트, 리덕스는 함수의 응용, 순수 함수, 불변성 등 함수형 프로그래밍을 지향한다. 그리고 사이드 이펙트를 원하지 않는다. 하지만 세상일은 뜻대로 되지 않는다는 말을 증명하듯 서비스는 사이드 이펙트 없이 개발할 수 없었다. 사실 처음에는 사이드 이펙트라는 개념도 몰랐다. 그냥 무언가 개발에 어려운 점이 있는데, 그 무언가가 무엇인지 표현도 못 했다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20171124</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20171124</guid><pubDate>Fri, 24 Nov 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[리액트 HOC 집중 탐구 (1)]]></title><description><![CDATA[리액트가 정식으로 릴리즈된 지도 벌써 4년이 훌쩍 지났다. 얼마전 나온 16.0 버전에 이르기까지 내부적으로도 많은 발전이 있었고, 수 많은 리액트 관련 라이브러리들이 나오는 등 외부적으로도 많은 발전이 있었다. 지금은 거의 대세가 되어 버린 리액트이기에 장점을 나열하자면 지루한 내용이 되겠지만, 꼭 짚고 넘어가고 싶은 장점은 4년이 넘게 지나도록 핵심 개념이나 중요 API가 거의 그대로 유지되고 있다는 것이다. 나는 이것이 리액트가 처음부터 추구했던 가치가 시간이 지나도 퇴색되지 않을만큼 의미있다는 것을 입증하고 있다고 생각한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20171117</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20171117</guid><pubDate>Fri, 17 Nov 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[이맥스와 함께하는 개발환경]]></title><description><![CDATA[에디터, IDE뿐 아니라 업무에 관련된 새로운 도구가 나오면 꼭 써봐야 직성이 풀리는 성격이었지만 언젠가부터 그놈이 그놈이고 저놈이 그놈이고 새로운 기능이 있어도 개발을 할 때 사용하는 기능들은 매우 한정적이라는 사실을 깨닫게 되었다. 인텔리제이도 일년 이상은 사용해봤지만 프론트 엔드를 주로 개발하기에 딱히 IDE가 필요하지 않았고 수많은 기능들을 거의 사용하지 않다 보니 필요 이상의 도구를 사용하는 느낌이었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20171110</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20171110</guid><pubDate>Fri, 10 Nov 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Front-End 테스트 환경 2) 멀티 브라우저 테스트 환경 구축하기]]></title><description><![CDATA[로컬 PC 내에서 브라우저 자동화 테스트를 수행하는 테스트의 경우 `karma-chrome-launcher`가 현재 karma 실행 환경에 설치된 Chrome 브라우저를 실행한다. 로컬 PC 내에서 다른 브라우저들을 동시에 테스트하려면 Firefox, OSX인 경우 Safari, Windows의 경우 Internet Explorer 나 Edge의 karma launcher를 추가로 등록하여 테스트를 수행할 수 있다. 하지만 이런 경우 OSX에서 Internet Explorer 테스트, Windows에서 Safari 테스트는 수행할 수 없다는 한계가 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20171020</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20171020</guid><pubDate>Fri, 20 Oct 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹에서 최대 FPS - WebRender가 끊김(jank)을 없애는 방법]]></title><description><![CDATA[Firefox Quantum 릴리즈가 가까워지고 있다. 이번 릴리즈에서는 Servo에서 가져온 초고속 CSS 엔진을 포함하여 많은 성능 개선이 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20171016</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20171016</guid><pubDate>Mon, 16 Oct 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트 함수 (3) - Lexical Environment]]></title><description><![CDATA[지난 글을 통해 함수의 생성과 함수의 호출 과정에 대해 간략히 알아보았다. 앞선 글(함수의 호출)에서 간단히 설명한 Execution Context에는 LexicalEnvironment와 VariableEnvironment라는 컴포넌트가 있다. 기본적으로 두 컴포넌트는 Lexical Environment에 대한 참조이며 처음에는 같은 Lexical Environment를 참조한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20171006</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20171006</guid><pubDate>Fri, 06 Oct 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트에서 타임존 다루기 (2)]]></title><description><![CDATA[이 글은 2부로 구성된 '자바스크립트에서 타임존 다루기'의 두 번째 글이다. 1부에서는 타임존과 오프셋에 대한 개념과 IANA timezone Database 등에 대해 자세히 설명하고 있다. 이 글은 1부에서 다룬  내용을 바탕으로 자바스크립트에서의 타임존에 대해 설명하고 있으므로, 1부를 읽지 않은 분들은 꼭 먼저 읽어보길 권한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170922</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170922</guid><pubDate>Fri, 22 Sep 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹 기술로 구현하는 Adaptive HTTP Streaming]]></title><description><![CDATA[한국은 물론 세계적으로 엄청난 양의 동영상 콘텐츠가 소비되고 있다. 플래시가 대세였던 웹 동영상 기술이 점차 표준 기술인 HTML5 비디오로 전환되었고 요즘은 대부분의 동영상 서비스는 HTML5를 기반으로 서비스되고 있다. 동영상 기술은 점차 고도화되어 네트워크 환경에 따른 최적의 동영상 품질을 스트리밍해 버퍼링없는 서비스를 제공하기 위해 여러 방법들이 모색되었고 그중 하나가 새로 프로토콜을 만드는 대신 기존의 HTTP를 이용해 구현하는 Adaptive HTTP Streaming이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170915</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170915</guid><pubDate>Fri, 15 Sep 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트 Binary AST에 대한 소개]]></title><description><![CDATA[Binary AST는 자바스크립트를 더욱 빠르게 파싱하기 위한 표준이며 최근에 ECMA TC-39에 채택되었다. 텍스트 형태의 자바스크립트를 바이너리 형태로 변환하여 전송 속도를 높이고 자바스크립트 파싱 자체를 빠르게 하는 것이 목표이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170911</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170911</guid><pubDate>Mon, 11 Sep 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹 컴포넌트(4) - Template Element & HTML Imports]]></title><description><![CDATA[이번 글은 웹 컴포넌트 소개 연재 4번째로 Template Element과 HTML Imports에 대한 글이다. 서두에 밝히자면, 이 두 표준의 흐름은 웹 컴포넌트 개발에서 제외될 것으로 보인다. 따라서 두 표준을 자세히 알아보기보다는 이것들이 웹 컴포넌트로써 사용되게 된 배경과 한계점, 그리고 Polymer Summit 2017에서 나온 현재의 동향을 이야기로 풀어보았다. 직접 실습할 내용도 없으니 가볍게 이야기 읽듯 따라가 보자.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170901</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170901</guid><pubDate>Fri, 01 Sep 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Front-End 테스트 환경 1) 간단하게 테스트 환경 구축하기]]></title><description><![CDATA[이 글에서는 간단하게 Front-End 테스트 환경을 구축하는 방법에 대해 공유하고자 한다. 참고) 본 글은 Karma 설정과 Jasmine의 API에 대해서는 깊게 다루지 않는다. 우선 Front-End 테스트를 실행할 수 있는 환경을 빠르게 구축함을 목적으로 작성되었다. 자세한 API와 설정에 대해서는 글 최하단의 참조의 각 Github Page에서 확인할 수 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170825</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170825</guid><pubDate>Fri, 25 Aug 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[npm에 모듈을 등록하면서 일어날 수 있는 일들]]></title><description><![CDATA[프론트엔드 개발에서 필요한 자바스크립트 프레임워크 및 라이브러리는 패키지 매니저를 통해 설치하고 사용할 수 있다. 패키지 매니저의 종류로는 bower, npm, yarn 등이 있고, nodejs로 개발하는 환경에서 모듈을 사용하기 위해서는 사용하고자 하는 모듈이 npm에 등록되어 있어야 한다. 더 자세히 말하면 내가 만든 모듈을 다른 모듈에서 사용할 수 있도록 npm 중앙 저장소에 배포(publish)하는 작업에 해당된다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170818</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170818</guid><pubDate>Fri, 18 Aug 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트의 함수 (2) - 함수 호출]]></title><description><![CDATA[저번 글을 통해 함수가 어떻게 생성되는지 대략적으로 살펴보았다. 함수는 일반 객체의 확장이다.함수 생성 시점에 그 함수의 역할이 어느정도 결정될 수 있다.(callable과 constructor) 함수 생성 시점에 저장하는 데이터들을 통해 스코프나 this 참조 방식을 결정한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170811</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170811</guid><pubDate>Fri, 11 Aug 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트에서 타임존 다루기]]></title><description><![CDATA[최근 나는 팀에서 관리하는 자바스크립트 캘린더 라이브러리에 타임존 기능을 추가하는 작업을 한 적이 있다. 자바스크립트의 타임존 지원이 다른 언어에 비해 부실하다는 얘기는 이미 들어 알고 있었지만, 기존 Date 객체를 잘 추상화하면 어렵지 않게 구현할 수 있을거라 생각했다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170804</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170804</guid><pubDate>Fri, 04 Aug 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹 어셈블리를 보다 쉽게 웹 어플리케이션에 적용하는 방법]]></title><description><![CDATA[자바스크립트 세계에서는  JIT(Just-In-Time) 컴파일러가 등장하면서 성능의 비약적인 발전을 이루었고 웹 어플리케이션의 규모가 점점 더 커질 수 있는 초석이 되었다. 그럼에도 불구하고 여전히 성능에 대한 목마름은 해소가 되지 않았고 WebAssembly라는 것이 등장하였다. WebAssembly는 Weekly Pick에서도 여러 번 다루어 왔던 주제이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170728</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170728</guid><pubDate>Fri, 28 Jul 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Applying Web Assembly to Web Applications Made Easy]]></title><description><![CDATA[In the world of JavaScript, the emergence of Just-in-Time (JIT) Compiler instigated a rapid development, and has become a foundation upon which programmers used to build larger and larger web applications. However, while everyone was still unsatisfied with the performance of JavaScript, came the WebAssembly.]]></description><link>https://ui.toast.com/weekly-pick/en_20170728</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/en_20170728</guid><pubDate>Fri, 28 Jul 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹 컴포넌트(3) - 쉐도우 돔(#Shadow DOM)]]></title><description><![CDATA[이 글은 웹 컴포넌트 소개 연재로 그중 세 번째인 쉐도우 돔에 대한 글이다. 아마도 이전 글의 커스텀 엘리먼트 글을 읽고 온 분은 여러 스펙, API, 기억해 두어야 할 것들로 질렸을지도 모르겠다.(두 번으로 잘라서 글을 썼으면 좋았을 것 같다.) 그러나 이번 시간 쉐도우 돔을 사용하는데 배워야 하는 API는 element.attachShadow()함수 하나뿐이니 가벼운 마음으로 시작해도 된다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170721</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170721</guid><pubDate>Fri, 21 Jul 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트 함수 (1) - 함수 객체, 함수 객체 생성]]></title><description><![CDATA[자바스크립트로 유명한 개발자 Douglas Crockford의 말을 빌리면, 자바스크립트는 지구에서 가장 오해하고 있는 프로그래밍 언어다. 물론 지금 글을 작성하는 2017년에는 그 오해가 많이 풀리긴 했지만, 여전히 자바스크립트는 계속 진화하고 있고, 그 변화를 자세히 알고 있는 사람은 드물다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170630</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170630</guid><pubDate>Fri, 30 Jun 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹 컴포넌트(2) - 커스텀 엘리먼트]]></title><description><![CDATA[오늘은 이전에 썼던 글 WebComponents- Keep calm and UseThePlatform)에 이어지는 것으로, Web Components의 주요 표준 중 하나인 Custom Elements에 대한 글이다. 사용법은 아래의 코드를 보는 것이 빠르겠다. 아래의 코드를 크롬이나 사파리에 올려보자. 이외의 브라우저에서는 아래의 브라우저 지원과 Polyfill 섹션을 참조하자.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170609</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170609</guid><pubDate>Fri, 09 Jun 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Redux Saga - WebSocket(socket.io) 이벤트 처리]]></title><description><![CDATA[React(이하 리액트), Redux(이하 리덕스) 생태계에서 소켓과 같은 외부 이벤트 처리는 개발에 많은 고민을 안겨준다. 똑같은 외부 이벤트가 발생하더라도 앱의 상태에 따라 다르게 처리하고 싶을 수도 있고, 무시하고 싶을 수도 있으며, 앱의 상태와 관계없이 항상 처리하고 싶을 수도 있다. 특히 외부 이벤트가 리덕스의 액션과 연결되는 경우 리덕스의 미들웨어를 통해 액션이 Dispatch 됐다는 것을 알아야 한다. 때문에 단순한 리덕스 스토어의 API만으로는 모든 서비스 로직을 처리하기가 상당히 까다롭다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170519</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170519</guid><pubDate>Fri, 19 May 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Web Components - Keep calm and UseThePlatform]]></title><description><![CDATA[이 포스터(Keep Calm and Carry On)은 영국 정부가 제2차 세계 대전이 발발하기 전 대규모 공중 폭격이 예고된 가운데 영국 시민들에게 “평상심을 유지하고 하던 일을 계속해라”라는 뜻으로 배포했다. 그런데 현재 webcomponents.org는 무슨 이유인지 상단에 전쟁 시 사용되었던 포스터의 패러디로 “Keep calm and UseThePlatform”이라는 모토를 달아놓았다. 구글은 지금 자바스크립트 세상을 전쟁 상황이라고 표현하는 것일까.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170428</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170428</guid><pubDate>Fri, 28 Apr 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹어셈블리 바로 사용해 보기]]></title><description><![CDATA[웹어셈블리는 미래에 매우 유용하게 사용될 새롭고도 새로운 표준이다. 이 기술은 W3C 커뮤니티 그룹에서 애플, 구글 , 마이크로소프트 그리고 모질라와 함께 개발되고 있다. 이 프로젝트의 초기 시점인 지금은 고 수준의 언어가 아닌 C/C++로 초점이 맞춰져 있고 웹어셈블리의 약어는 wasm 이며 자바스크립트와 브라우저의 개선 사항 중 하나이다. 웹어셈블리는 자바스크립트를 대체하려는 목적이 아니며 사실 보완하려고 나왔다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170410</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170410</guid><pubDate>Mon, 10 Apr 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Redux 분석하기]]></title><description><![CDATA[Redux는 Event Sourcing패턴과 Functional programming을 결합하여 라이브러리 형태로 구현한 컨테이너다. 이 컨테이너는 애플리케이션의 상태를 저장하고, 쉽게 예측할 수 있도록 하여 일관된 구현을 유지할 수 있도록 하고, 테스트, 유지보수, 디버깅 등을 손쉽게 처리할 수 있도록 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170331</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170331</guid><pubDate>Fri, 31 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[React 렌더링과 성능 알아보기]]></title><description><![CDATA[React는 간단하면서도 충분히 빠르다. 하지만 착각하지 말자. 대충 만들어도 빠르다는 것은 아니다. React 애플리케이션은 잘 만들어야 빠르다. React의 동작 원리를 이해하고 애플리케이션이 느려질 수 있는 상황들을 찾아 해결하는 것이 중요하다. 다행히 React는 간단하고 이해하기 쉬운 라이브러리다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170324</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170324</guid><pubDate>Fri, 24 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[AOP(Aspect Oriented Programming)가 뭔데?]]></title><description><![CDATA[자바스크립트 개발 이야기에서 AOP는 생소한 주제이다. 보통 AOP 개념을 설명할 때 대표적으로 Cross-cutting Concern 이라는 말을 한다. 직역하자면 횡단 관심사 라고할 수 있겠으나, 조금 더 쉽게 얘기하자면 "로그를 남겨야 할 곳은 여기, 저기, 그리고 또 저기가 되겠군", "사용자 입력을 받는 이~러한 부분들에서는 유효성을 검증해야 해" 라고 표현할 수 있는 공통된 관심사 정도로 표현할 수 있겠다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170317</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170317</guid><pubDate>Fri, 17 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[ES6 기능 - 프락시 사용 사례 10가지]]></title><description><![CDATA[오늘 우리는 ES6의 기능 중 하나 인 Proxy의 사용 사례를 살펴볼 예정이다. 여러분은 지금까지 ES6 Proxy에 대해 들어 봤거나 사용해 보았을 것이다. Proxy가 무엇인지, 어떻게 사용하는지에 대한 많은 정보가 있지만, 필자가 실제(와 같은) 사용 사례를 찾으려고 노력했고, Proxy가 어떤 곳에 쓰이는지 작은 정보를 가지고 왔다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170313</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170313</guid><pubDate>Mon, 13 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트 에러와 스택 트레이스 심화]]></title><description><![CDATA[이번 시간에는 에러와 스택 트레이스를 조작하는 방법에 대해 이야기하려 한다. 때때로 사람들은 이런 세부 사항에 대해 신경쓰지 않지만, 테스트나 에러와 관련된 어떤 라이브러리를 작성하려고 할 때 이 지식들은 굉장히 유용할 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170306</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170306</guid><pubDate>Mon, 06 Mar 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[쉽게 이해하는 자바스크립트 프로토타입 체인]]></title><description><![CDATA[자바스크립트는 객체 지향 언어이자 함수를 1급 객체로 취급하기 때문에 함수형 프로그래밍도 가능한 멀티 패러다임 언어이다. 자바스크립트를 조금이라도 다뤄봤던 사람이라면 익히 알고 있겠지만 자바스크립트에는 클래스란 개념이 없어 객체 생성이나 상속이 다른 언어와 다르고 특히 OOP는 주로 프로토타입이란 메커니즘을 통해 이루어진다. 검색을 조금만 해보면 프로토타입을 다룬 아티클들은 많이 찾아볼 수 있다. 하지만 여기서는 프로토타입에서도 상속을 구현하는 핵심 메커니즘인 포로토타입 체인에 대해 집중적으로 다룬다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20170217</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170217</guid><pubDate>Fri, 17 Feb 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[2017년에 배울 새로운 CSS기능 3가지]]></title><description><![CDATA[새해가 되면서 새로 배워야 할 것들이 많이 늘었다. 올해 CSS에 채택된 새로운 기능들이 많지만, 필자는 다음 3가지 기능이 가장 흥미롭다. 1. 기능질의 얼마 전, 필자는 실제로 필자가 원했던 CSS 기능 중 하나인 기능 질의에 대해 썼다. 하지만 지금은 기본적으로 지원된다!]]></description><link>https://ui.toast.com/weekly-pick/ko_20170123</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20170123</guid><pubDate>Mon, 23 Jan 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[async 함수 - 친근한 프로미스 만들기]]></title><description><![CDATA[async 함수는 크롬55 버전부터 사용할 수 있다. 이 함수는 프로미스 기반의 코드들을 메인 스레드의 블로킹 없이 동기화 형식으로 사용할 수 있게 한다. 비동기 코드를 "덜 영리하게"하고 읽기 쉽게 만들어준다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20161226</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20161226</guid><pubDate>Mon, 26 Dec 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹 페이지에서 컨텐츠를 빠르게 보여주기 위한 트릭]]></title><description><![CDATA[몇 주 전에 나는 일 때문에 공항을 이용했는데 여기서 GitHub의 성능에 이상한 점을 발견했다. 링크를 클릭하는 것 보다 새 창으로 접속하는 것이 더 빨랐던 것이다. 아래는 영상으로 그 현상을 캡쳐한 것이다. 영상에서 나는 링크를 클릭하고 바로 주소를 새 탭에 붙여넣었다. 링크를 더 일찍 클릭했지만 새 탭으로 연 페이지의 내용이 더 빨리 보였다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20161212</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20161212</guid><pubDate>Mon, 12 Dec 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[JavaScript 개발자 - 당신의 언어를 조심하세요!]]></title><description><![CDATA[2021년 8월 21일 오전 9시 18분. 당신은 막 아침을 먹었다. 당신은 Omni Consumer Products의 웹 유지 보수를 담당하고 있다. 한 시간 뒤 당신의 마지막 변경이 적합성 테스트에서 부적합 판정을 받았음을 발견했고, 이 문제는 "RedactSelect"의 버그로 발견되었다. 이는 당신이 사용하는 오픈소스 "multiselect" 웹 컴포넌트다. 이 컴포넌트는 업데이트 된 지 1년은 넘은 것 처럼 보이고, 성숙하고 안정적이라 생각되었다. 당신은 속으로 '문제없어, fork 해서 고쳐야겠군.'이라고 생각하고 고치기 시작했다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20161205</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20161205</guid><pubDate>Mon, 05 Dec 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[크롬 개발자 도구를 이용한 프론트엔드 성능 측정]]></title><description><![CDATA[타임라인은 웹페이지를 로드할때나 혹은 유저 인터렉션 등으로 인해 브라우저에서 발생하는 동작들을 레코딩하고 타임라인 형태로 시각화해주는 도구다. 시간의 흐름에 따라 브라우저의 이벤트(여기서의 이벤트는 DOM상의 이벤트가 아닌 브라우저 내부의 동작, 물론 DOM이벤트를 발생시키는 이벤트도 있다)뿐 아니라 CPU, 메모리, 네트워크 사용량과 FPS까지 확인 가능하다. 이벤트에 스택 트레이스 형태로 자바스크립트의 함수 콜 스택도 확인이 가능해 어떤 자바스크립트 코드가 성능에 영향을 주고 있는지도 쉽게 확인할 수 있다. 두가지의 성능 측정 예를 통해 타임라인의 기능을 살펴본다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20161111</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20161111</guid><pubDate>Fri, 11 Nov 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트로 컴파일러 만들기]]></title><description><![CDATA[어느 멋진 일요일 Bushwick, Brooklyn의 한 책방에서 John Maeda가 쓴 "Design by Numbers"라는 책을 보았다. 이 책은 DBN 프로그래밍 언어(90년대 말 MIT 미디어 연구소에서 시각적인 방법으로 프로그래밍 개념을 소개하도록 고안된 언어)를 차근 차근 설명했다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20161107</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20161107</guid><pubDate>Mon, 07 Nov 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트 프레임워크 소개 4 - React]]></title><description><![CDATA[React는 Facebook에서 개발해 Facebook과 Instagram, Airbnb 등에서 사용하고 있는 오픈소스 UI 프레임웍이다. 사용자 액션에 따라 DOM을 일일이 다루었던 과거 개발 방식(jQuery와 같은 라이브러리만을 사용하는)과는 달리 개발자가 DOM을 직접 다루지 않고 React가 데이터 상태에 따라 자동으로 UI를 관리하기 때문에, 개발자는 단순히 특정 상태에 대한 뷰의 변화만 구현하면 된다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20161021</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20161021</guid><pubDate>Fri, 21 Oct 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트 프레임워크 소개 3 - VueJs]]></title><description><![CDATA[Vue.js는 Evan You가 만들었으며, 2014년 릴리즈를 시작으로 꾸준히 발전하고 있는 자바스크립트 프레임워크이다. 앞서 소개된 Angular나 React보다 덜 알려져 있으나, 최근 Vue.js 포럼에 한국어 카테고리가 추가될 정도로 인지도에 상승 곡선을 그리는 추세이다. Vue.js를 접하는 사람들의 반응은 두 가지이다. 낯설거나 혹은 친절하거나. 전자는 (현재 이 글을 읽고 있는 당신을 포함하여) Vue.js를 처음 접하는 사람일 것이고, 후자는 단 한 번이라도 Vue.js의 가이드를 읽어보거나 사용해보고 싶다는 생각을 한 사람일 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20161014</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20161014</guid><pubDate>Fri, 14 Oct 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트 프레임워크 소개 2 - Angular 2]]></title><description><![CDATA[Angular는 확장된 HTML 문법을 기반으로 하는 웹 애플리케이션 프레임워크로 개발되었다. 데이터 바인딩, 템플릿 문법 등과 같은 편리한 기능을 제공하여 웹 애플리케이션의 유지 보수, 개발 속도를 크게 향상했으며, 수많은 개발자에게 큰 인기를 얻고 있다. 또 그들의 커뮤니티 또한 많이 발달해 있어, 발전이 기대되는 프레임워크(혹은 플랫폼)로 손꼽힌다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20161007</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20161007</guid><pubDate>Fri, 07 Oct 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트 프레임워크 소개 1 - Cycle.js]]></title><description><![CDATA[Cycle.js는 함수형, 반응형이라는 두 가지 프로그래밍 방식을 강조한다. 함수형 프로그래밍은 이제 자바스크립트에서 익숙한 개념이 되었지만, 반응형 프로그래밍이라는 용어는 생소한 분들도 있을텐데, 그런 분들은 이 글을 읽어보시기 바란다. 사실 반응형 프로그래밍의 정의는 경우에 따라 조금씩 다른데, 저자가 말하는 반응형 프로그래밍이란 결국 비동기 데이터 스트림을 이용해 프로그래밍하는 것을 말하며, 이를 위해 RxJS와 같은 이벤트 스트림 라이브러리를 적극 활용한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160923</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160923</guid><pubDate>Fri, 23 Sep 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트의 화살표 함수 도입]]></title><description><![CDATA[ES6는 화살표 함수를 도입했다. 화살표 함수는 3가지 장점이 있는데 첫째로, 간결한 문법을 가졌다. 둘째, 명시적인 반환을 하며 한 줄로 멋지게 작성할 수 있게 해준다. 셋째, 다른 함수 내부에서 화살표 함수를 사용할 때 this를 재차 바인드 하지 않는다. 세 번째 장점은 클릭 핸들러와 비슷한 여러 가지의 구현을 정말 편리하게 해준다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160912</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160912</guid><pubDate>Mon, 12 Sep 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트에서 팩토리 함수란 무엇인가?]]></title><description><![CDATA[함수와 객체를 배우지 않고서는 자바스크립트 프로그래머로서 더 나아갈 수 없을 것이며, 이 두 가지가 함께 사용되는 경우 조합이라 불리는 강력한 객체 패러다임을 시작하는데 필요로 하는 빌딩 블록이 된다. 오늘 우리는 함수, 객체와 프라미스들을 조합하기 위해 사용되는 팩토리 함수의 몇 가지 관용적 패턴들을 살펴볼 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160905</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160905</guid><pubDate>Mon, 05 Sep 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[왜 이벤트 위임(delegation)을 해야 하는가?]]></title><description><![CDATA[과거 웹오피스의 워드를 개발했던 때에, 각주 기능을 개발했던 적이 있다. 문서의 특정 부분에 커서를 두고 "각주"를 추가하면 해당 부분에 대한 코멘트를 문서의 우측 영역에 작성할 수 있는 기능이었다. 며칠 만에 기능을 완성하고 개별적으로 성능을 측정했다. 각주의 수를 늘려가면서 추가 삭제를 반복하는 일이었다. (IE6가 지원 대상이었고 마땅한 성능 측정 도구가 없어 CPU, 메모리 증가 여부와 사용감 정도로 체크했었다.)]]></description><link>https://ui.toast.com/weekly-pick/ko_20160826</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160826</guid><pubDate>Fri, 26 Aug 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[도커로 노드 앱을 구축하며 배운것들]]></title><description><![CDATA[도커를 이용해 노드제이에스 어플리케이션을 개발 하고 배포 하면서 어렵게 배운 팁과 트릭을 공유하고자 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160823</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160823</guid><pubDate>Tue, 23 Aug 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[WebRTC - 실시간 PC 화면 가져오기]]></title><description><![CDATA[WebRTC는 웹을 통해 유저 간의 실시간 통신을 가능케 하는 기술이다. 물론 WebRTC 기술을 사용하지 않고도 이미 많은 서비스가 실시간 통신을 지원하고 있다. 하지만 비싼 영상/음성 기술을 사용해야 하고, 사용자는 네이티브 앱이나 플러그인을 설치해야 하는 등의 장벽이 존재한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160812</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160812</guid><pubDate>Fri, 12 Aug 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Generator in Practice - [2부] 실무 예제]]></title><description><![CDATA[토스트 드라이브 프로젝트에서 실제 구현해야 했던 명세 중 Generator 적용 효율이 제일 높았던 명세를 조금 수정했다. 파일 또는 폴더를 선택한 후 다른 폴더로 이동할 때의 명세다. 다음은 웹 기반 파일 시스템 구현 프로젝트의 일부 기능이다. 파일 목록에서 선택한 다수의 파일 및 폴더를 다른 폴더로 이동할 수 있다. 이때, 이동 대상 폴더에 이름이 같은 파일 및 폴더가 이미 존재할 경우 모든 건에 대해서 사용자에게 확인한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160805</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160805</guid><pubDate>Fri, 05 Aug 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Generator in Practice - [1부] 기본 속성과 Runner]]></title><description><![CDATA[근래에 자바스크립트 프로그래밍의 패러다임에 큰 변화를 준 명세는 바로 Generator 명세다. 올해 2월 미국 샌프란시스코에서 열렸던 FORWARDJS4 콘퍼런스에서 유명 패널들이 무대에서 ES6와 ES7에 대한 이야기를 주고받는 시간이 있었다. (https://javascriptair.com/episodes/2016-02-10/) 이야기 중간에 패널들이 자신이 가장 좋아하는 명세가 무엇인지 이야기 했는데 이때 자바스크립트 강사로 유명한 Kyle Simpson은 Generator를 가장 좋아하는 명세로 선택했다. 비동기 프로그래밍의 패러다임을 바꾸었다는 이유였다. 다른 패널에 비해 강한 확신과 함께 길게 설명했는데 그때는 그저 ‘그 정도인가?’ 하고 말았다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160729</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160729</guid><pubDate>Fri, 29 Jul 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[JavaScript의 객체 리터럴은 멋지다]]></title><description><![CDATA[자바스크립트는 프로토타입 기반의 언어이며, 모든 것이 다 객체이다. 이런 언어에서는 객체 생성, 프로토타입 접근, 프로토타입 설정을 편하게 할 수 있다. 객체를 정의하는 것과 프로토타입을 설정 하는 일은 똑같은 작업이다. 그래서 프로토타입도 한 문장의 객체 리터럴 안에서 설정할 수 있어야 한다고 생각한다. 공교롭게도 객체 리터럴은 그런 면에서 간단하고 깔끔한 해결책이 될 수 없다. 그래서 'Object.create()'와 리터럴을 조합하여 프로토타입을 설정할 수 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160725</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160725</guid><pubDate>Mon, 25 Jul 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[당신의 첫 웹어셈블리 컴포넌트를 만들어보자]]></title><description><![CDATA[처음으로 웹어셈블리 (WebAssembly)에 대해 들었을 때 그것은 확실히 멋져 보였고 시도해 본다는 것에 매우 흥분했다. 그래서 곧바로 시작했지만 수많은 좌절을 겪게 되었다. 이 글의 목표는 당신에게 내가 겪었던 좌절의 일부만이라도 겪지 않게 하는 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160711</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160711</guid><pubDate>Mon, 11 Jul 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[클로저와 객체]]></title><description><![CDATA[클로저를 처음 접했을때 전혀 이해가 되지 않았던 기억이 난다. 클로저를 제대로 이해하려면 자바스크립트 코어에대한 지식이 적지 않게 필요하기 때문이다. 개인적으로는 자신이 사라지기전까지 스코프의 종결을 미루기에, 바꿔 말하면 자신의 사라지면 자신의 스코프도 종결해 버리기에 Closure(종결) 라고 한때 간단하게 정리 했었다.(뭐 틀린말은 아니다) 클로저에 관한 설명은 여기 링크에서 자세하게 알아 볼 수 있다. 참으로 훌륭한 글이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160701</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160701</guid><pubDate>Fri, 01 Jul 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[React 리팩토링 - HOC - Higher Order Components]]></title><description><![CDATA[어떤 프로그램을 만들든지, 중복 코드는 자주 나타난다. React 또한 마찬가지로 각 React 컴포넌트에서 중복되는 로직과 라이프사이클을 만날 수 있다. 보통 JS에서 클래스 간 중복 로직은 mixin을 통해 해결하는 경우가 많은데, ES6 class문법에서 React는 mixin API를 지원하지 않는다. (물론 직접 class의 prototype을 수정하는 mixin을 구현하거나, React.createClass의 mixin을 이용할 수는 있다.) 그래서 이런 중복 코드를 다른 방식으로 풀어내고 해결하는 방법을 우선 먼저 찾아봐야 하는데, 그 전에 일단 왜, 도대체 왜 mixin을 지원하지 않는지부터 알아보자.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160624</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160624</guid><pubDate>Fri, 24 Jun 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트와 이벤트 루프]]></title><description><![CDATA[자바스크립트는 큰 특징 중 하나는 '단일 스레드' 기반의 언어라는 점이다. 스레드가 하나라는 말은 곧, 동시에 하나의 작업만을 처리할 수 있다라는 말이다. 하지만 실제로 자바스크립트가 사용되는 환경을 생각해 보면 많은 작업이 동시에 처리되고 있는 걸 볼 수 있다. 예를 들면, 웹브라우저는 애니메이션 효과를 보여주면서 마우스 입력을 받아서 처리하고, Node.js기반의 웹서버에서는 동시에 여러개의 HTTP 요청을 처리하기도 한다. 어떻게 스레드가 하나인데 이런 일이 가능할까? 질문을 바꿔보면 '자바스크립트는 어떻게 동시성(Concurrency)을 지원하는 걸까'?]]></description><link>https://ui.toast.com/weekly-pick/ko_20160617</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160617</guid><pubDate>Fri, 17 Jun 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[순수 함수로 만드세요!]]></title><description><![CDATA[웹사이트나 애플리케이션의 코드 줄 수가 증가하면 필연적으로 버그가 생긴다. 자바스크립트 뿐만 아니라 모든 언어가 버그 없이 무언가를 만드는것은 매우 어렵고, 불가능하다. 하지만 그것이 버그를 생기지 않도록 주의조차 할 수 없는 것을 의미하는 것은 아니다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160613</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160613</guid><pubDate>Mon, 13 Jun 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[프로토타입 기반 언어, 자바스크립트]]></title><description><![CDATA[자바스크립트는 원형 객체로 새로운 객체를 생성하는 프로토타입(원형) 기반 언어다. 프로토타입 기반 언어란 무엇일까? 자바스크립트로 프로토타입 언어의 특징을 어떻게 구현할까? 이전에 접했던 자바스크립트에서의 프로토타입에 대한 글이 어려웠다면, 이 글을 통해서 조금이나마 쉽게 이해할 수 있기를 기대한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160603</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160603</guid><pubDate>Fri, 03 Jun 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹 개발자를 위한 크롬 개발자 도구]]></title><description><![CDATA[꼭 프론트엔드 개발자가 아니더라도 웹 개발을 하다 보면 한 번쯤은 크롬 개발자 도구를 사용해 봤을 거라 생각한다. 크롬이 버전업할수록 크롬 개발자 도구 역시 나날이 발전해 왔고 현존하는 도구 중에는 최고의 웹 개발자 도구라고 말할 수 있다. 예전 IE6에서 alert과 status로 디버깅을 했던 시절을 생각하면 정말 좋은 세상에 살고 있다는 생각이 든다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160527</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160527</guid><pubDate>Fri, 27 May 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[리액트 렌더링 최적화]]></title><description><![CDATA[리액트의 성능 향상을 위한 가이드. 보통의 웹 어플리케이션에서는 한 페이지에 다수의 엘리먼트들을 렌더링한다. 이번 포스트에서 다수 엘리먼트들을 렌더링할 때 어떤 방식으로 성능 향상을 하는지 보여주고자 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160523</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160523</guid><pubDate>Mon, 23 May 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[지금 바로 시작하는 ES6]]></title><description><![CDATA[매일 쏟아져 나오는 ES6에 대한 글을 보면 그저 한낱 먼 미래의 이야기라는 생각이 든다. 서비스를 ES6 로 개발하기에 버전 별 브라우저 사용률이 발목을 잡고 있기 때문이다. b2c는 그나마 좀 낫다. b2b는 여러 제약 때문에 windows xp를 사용하는 고객도 있고 (우리의 xp는 IE8 까지만 사용 가능하다) 심지어 최신 브라우저를 쓰면서도 '호환성 보기 모드' (IE8 시뮬레이션 모드)를 설정해놓고 사용하는 경우도 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160506</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160506</guid><pubDate>Fri, 06 May 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[ES6 Symbols - Drumroll Please!]]></title><description><![CDATA[심볼(Symbols)은 ES6에서 소개된 새롭고 유일한 원시(primitive) 타입이다. 이들은 자바스크립트 이전 버전에서 작성된 코드와 역방향 호환성을 유지하면서, 객체의 기능을 확장하는 문제를 해결하기 위해 언어에 추가됐다. 그들은 부가적으로 개발자들이 새롭고 흥미로운 방법으로 언어 동작에 영향을 미칠 수 있는 기능을 제공한다. 이 아티클에서는 심볼의 개념 소개와 목적에 대한 설명, 그리고 현재 심볼을 사용할 수 있는 가장 일반적인 방법을 연결 지어 보여주겠다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160502</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160502</guid><pubDate>Mon, 02 May 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[ES6의 제너레이터를 사용한 비동기 프로그래밍]]></title><description><![CDATA[자바스크립트가 다른 언어들과 구분되는 큰 특징 중의 하나는 바로 싱글스레드를 기반으로 하는 비동기 방식의 언어라는 점이다. 이런 특징에 힘입어 Non-blocking IO을 사용하는 Node.js의 언어로 사용되면서 최근에는 서버사이드에서도 큰 인기를 얻고 있다. 하지만 이런 구조적 특징에서 오는 단점도 적지 않은데, 대표적인 것이 바로 연속적 전달 방식(CPS)으로 인한 콜백 지옥이다 (굳이 설명 안 해도 알 거라 믿는다. 밑에서 지옥을 한번 소환할 예정이니 혹시 몰라도 일단 넘어가자).]]></description><link>https://ui.toast.com/weekly-pick/ko_20160408</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160408</guid><pubDate>Fri, 08 Apr 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[CodeSnippet과 함께하는 JavaScript 프로그래밍]]></title><description><![CDATA[웹 서비스에서 자바스크립트의 의존도는 계속 증가하는 추세다. github에 등록된 프로젝트들(2015년도 조사 자료)만 봐도 자바스크립트의 비중이 가장 높고, 실제로 여러분의 프로젝트들도 대부분이 그럴 것이다. 여러분은 혹시 다음의 경우를 겪지 않았는가?]]></description><link>https://ui.toast.com/weekly-pick/ko_20160404</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160404</guid><pubDate>Mon, 04 Apr 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스트립트의 Math 객체(Object)]]></title><description><![CDATA[자바스크립트로 개발을 해본 개발자라면, Math.abs를 이용하여 절대값을 구하거나 Math.round를 이용하여 반올림을 하는 등의 경험은 대부분 있을 것이다. 이와 같이 자바스크립트에서는 수식을 처리하기 위해 Math객체를 사용한다. 이번 글에서는 Math객체의 특징과 주의해야할 부분, 그리고 활용 방법에 대해 이야기 하겠다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160325</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160325</guid><pubDate>Fri, 25 Mar 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Web Audio API]]></title><description><![CDATA[웹오디오 API는 웹에서 오디오를 다루기위한 강력하고 다양한 시스템을 제공한다. 개발자들이 오디오 소스들을 선택할 수 있게 하고, 오디오에 이펙트를 적용 할수 있으며 오디오 시각화와 공간적인 이펙트(패닝같은)를 적용할 수 있고 이외에도 더 많은 작업을 할 수 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160321</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160321</guid><pubDate>Mon, 21 Mar 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트의 스코프와 클로저]]></title><description><![CDATA[기본적으로 자바스크립트는 ECMAScript 언어 명세를 따르고있다. 이 명세 **8장의 실행코드와 실행컨텍스트부분에서 스코프에 관한 동작 방식을 확인할 수 있으며, 또 중요한 개념인 1급 객체로서의 함수는 그 특징을 명세의 전반적인 부분에서 나타내고 있다. 그리고, 클로저(Closure)에 대한 정의는 없다. 클로저는 자바스크립트가 채용하고 있는 기술적 기반 혹은 컨셉으로, 자바스크립트는 클로저를 이용하여 스코프적 특징과 일급 객체로서의 함수에 대한 명세를 구현한 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160311</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160311</guid><pubDate>Fri, 11 Mar 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[2016년은 웹 스트림(web stream)의 해다.]]></title><description><![CDATA[그렇다. 신년 초부터 한해의 일에 대해 이야기한다는 것은 가벼운 일은 아니다. 그러나 웹 스트림 API의 잠재력은 나를 매우 흥분 시켰기에 그런 일을 가능하게 했다. 요약하면, 스트림은 "cloud"라는 단어를 "butt"로 변경하거나 MPEG를 GIF로 변환하는 작업과 같이 익숙한 일들을 할 수 있다. 그러나 가장 중요한 것은 제공 내용을 가장 빠르게 서비스 워커로 결합시킬 수 있다는 것이다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160222</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160222</guid><pubDate>Mon, 22 Feb 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Webpack으로 자바스크립트 모듈관리 하기]]></title><description><![CDATA[기존의 프론트엔드 자바스크립트는 특별히 모듈화나 디펜던시관리에 대한 방법이 없어 필요한 자바스크립트 파일을 정해진 순서에 맞게 직접 스크립트 태그로 로드하고 각각 약속된 네임스페이스에 담아 공유했었다. 이런 방식은 프로젝트가 커질수록 그리고 참여 개발자가 많을수록 문제를 일으켰다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20160212</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160212</guid><pubDate>Fri, 12 Feb 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[웹에서 플래시 없이 클립보드 사용하기]]></title><description><![CDATA[웹 플랫폼을 키우고 접근 가능한 새 도구로 만들기 위한 노력의 한 부분으로, 우리는 플래시(Flash)에 대한 웹의 의존성을 줄이는 노력을 하고 있다. 그 노력의 일환으로, 우리는 웹 플랫폼 전체를 위해 현재는 플래시로만 이용할 수 있는 유용한 기능들을 표준화하여 공개하고 있다]]></description><link>https://ui.toast.com/weekly-pick/ko_20160111</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20160111</guid><pubDate>Mon, 11 Jan 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[Github의 Atom에디터 '마커'기능 성능 향상 사례]]></title><description><![CDATA[지난 몇 달 동안 에디터의 성능 최적화 작업을 진행했다. 진행 도중 '마커' 기능 개선하는 약간은 어려운 이슈를 해결하는 작업이 계획되었다. '마커'는 논리적 영역을 지정하여 수정과 상관 없이 계속 추적하는 기능이다. 예를 들어 아래 gif 에서 녹색 영역이 '마커' 인데 텍스트가 변경되어도 계속 녹색으로 지정되어 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20151214</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20151214</guid><pubDate>Mon, 14 Dec 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트의 함수형 프로그래밍 컨셉]]></title><description><![CDATA[대부분의 함수형 프로그래밍은 보통 함수들을 조립하고, 데이터들을 예측하기 쉽게 다루는 그런 것들을 의미한다. 간단한 함수들이 깔끔하게 합쳐지면서 복잡도는 증가할지라도, 신뢰할 수 있는 함수를 만들어낸다. 이 글은 함수형 프로그래밍 컨셉에 대한 여러 파트 중의 첫 번째 파트로, 람다(Ramda)라이브러리, composition, pointfree style 그리고 functor의 컨셉을 소개하려 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20151117</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20151117</guid><pubDate>Tue, 17 Nov 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[jQuery의 적절성 - 또 다른 시작]]></title><description><![CDATA[개인적으로 jQuery가 필요 없다는 글에 완전히 공감할 순 없다. 다만 개인적으로는 jQuery를 사용하는 것이 어떤 의미가 있는지 잊고 있었다는 생각이 들었다. 그래서 이 글을 통해 생각해보는 시간을 갖고자 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20151109</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20151109</guid><pubDate>Mon, 09 Nov 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[Flux 카툰가이드]]></title><description><![CDATA[첫번째로 플럭스가 해결하는 기초적인 문제부터 설명하려고 한다. 플럭스는 어플리케이션에서 데이터를 다루는 패턴으로 리액트와 함께 페이스북에서 성장해왔다. 각각 독립적으로 사용이 가능하지만 많은 사람들이 둘을 함께 사용한다. 플럭스와 리액트는 페이스북에서 보여졌던 몇가지 문제점들을 해결하기위해 개발되었다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20151027</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20151027</guid><pubDate>Tue, 27 Oct 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[Javascript의 Iterator와 Generator]]></title><description><![CDATA[ECMAScript 2015(a.k.a. ES6)에서 새롭고 많은 기능들이 추가되었다. 대부분은 이해하기 쉽지만, Iterator와 Generator를 이해하기 위해선 조금 더 노력이 필요하다. 이 글은 여러분이 Iterator와 Generator를 활용할 수 있도록 가이드(base line)를 제공한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20151021</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20151021</guid><pubDate>Wed, 21 Oct 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[Javascript Promise Basic]]></title><description><![CDATA[Prmoise/A+ 사양에 기반을 둔 ECMAScript6 비동기 프로그래밍을 위한 또 다른 패턴 - Promise 전통적인 콜백 패턴이 가진 단점을 일부 보완하며 비동기 처리 시점을 명확하게 표현하도록 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20150904</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20150904</guid><pubDate>Fri, 04 Sep 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[Map / Reduce에서부터 자바스크립트 함수형 개발까지]]></title><description><![CDATA[ECMASript 5.1버전 이후로 Array.prototype.map과 Array.prototype.reduce는 주요 브라우저에서 도입하게 되었다. 이 두 함수는 개발자가 계산을 더 명확하게 설명하게 하는 것 뿐만 아니라 배열 탐색을 위한 반복문 작성을 단순화 시키는 역할을 한다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20150817</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20150817</guid><pubDate>Mon, 17 Aug 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[ECMAScript 2015 정식 발표]]></title><description><![CDATA[ECMA 국제 표준 기구는 ECMA 262 6th 에디션의 승인을 발표했다. ECMA 262 6th 에디션은 ECMAScript 6의 언어 스펙 명세이자, ECMAScript 2015로 알려져 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20150630</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20150630</guid><pubDate>Tue, 30 Jun 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[Javascript의 커플링 측정]]></title><description><![CDATA[이 글은 커플링을 Javascript기반 예제를 통해 설명한다. 먼저 커플링이란 서로 다른 객체 또는 모듈간의 관계를 뜻한다. 그리고 그 관계의 방법은 조금씩은 다르지만 거의 유사한 패턴이므로 측정도 가능하다. Norman Fenton과 Shari Lawrence Pfleeger가 1996년도에 저술한 "A Rigorous & Practical Approach, 2nd Edition" 에 따르면 커플링은 6단계가 있고 각 단계에 점수를 매기는 것으로 측정할 수 있다.]]></description><link>https://ui.toast.com/weekly-pick/ko_20150522</link><guid isPermaLink="true">https://ui.toast.com/weekly-pick/ko_20150522</guid><pubDate>Fri, 22 May 2015 00:00:00 GMT</pubDate></item></channel></rss>