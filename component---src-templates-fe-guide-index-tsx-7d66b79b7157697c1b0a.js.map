{"version":3,"sources":["webpack:///./src/components/guide/GuideListItem.tsx","webpack:///./src/components/guide/GuideList.tsx","webpack:///./src/templates/FeGuideIndex.tsx"],"names":["GuideItem","styled","ListItem","ItemContent","div","Title","span","Description","p","GuideListItem","id","title","description","url","feGuideUrl","PREFIX","ga","createGA","data-testid","type","Container","List","CommonList","GuideList","posts","edges","map","node","frontmatter","key","Contents","Header","h2","Slogan","pageQuery","FeGuideIndex","location","data","allEnGuides","allGuides","allProductsJson","pathname","indexOf","EN","sitemapData","createProductSectionData","SEO","SitemapSection","items"],"mappings":"6RAcMA,EAAYC,YAAOC,KAAV,wCAAGD,CAAH,0JAaTE,EAAcF,IAAOG,IAAV,wCAAGH,CAAH,gDAQXI,EAAQJ,IAAOK,KAAV,wCAAGL,CAAH,4FAULM,EAAcN,IAAOO,EAAV,wCAAGP,CAAH,gSAoCFQ,EAhBqC,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC1DC,EAASC,IAAWC,OAAjB,IAA2BL,EAC9BM,EAAKC,YAAS,oBAAqB,QAASN,GAElD,OACE,kBAACX,EAAD,CAAWkB,cAAY,cACrB,kBAACf,EAAD,KACE,kBAAC,IAAD,CAAWgB,KAAK,WAAWN,IAAKA,EAAKG,GAAIA,GACvC,kBAACX,EAAD,CAAOa,cAAY,SAASP,GAC5B,kBAACJ,EAAD,CAAaW,cAAY,eAAeN,OCtD5CQ,EAAYnB,IAAOG,IAAV,wCAAGH,CAAH,oHAaToB,EAAOpB,YAAOqB,KAAV,wCAAGrB,CAAH,mGAwBKsB,EAZ6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC1C,kBAACJ,EAAD,KACE,kBAAC,EAAD,KACGI,EAAMC,MAAMC,KAAI,YAAc,QAAXC,KACsBC,YAAhClB,EADqB,EACrBA,GAAIC,EADiB,EACjBA,MAAOC,EADU,EACVA,YAEnB,OAAO,kBAAC,EAAD,CAAeiB,IAAKnB,EAAIA,GAAIA,EAAIC,MAAOA,EAAOC,YAAaA,U,YChBpEkB,G,UAAW7B,IAAOG,IAAV,uCAAGH,CAAH,gHAUR8B,EAAS9B,IAAOG,IAAV,uCAAGH,CAAH,wNAgBNmB,EAAYnB,IAAOG,IAAV,uCAAGH,CAAH,qCAKTI,EAAQJ,IAAO+B,GAAV,uCAAG/B,CAAH,sGAWLgC,EAAShC,IAAOO,EAAV,uCAAGP,CAAH,uIAyCCiC,EAAY,aAUVC,UAtC4B,SAAC,GAGtC,IAFJC,EAEI,EAFJA,SAEI,IADJC,KAAQC,EACJ,EADIA,YAAaC,EACjB,EADiBA,UAAWC,EAC5B,EAD4BA,gBAE1BhB,EAAQY,EAASK,SAASC,QAAQ5B,IAAW6B,KAAO,EAAIL,EAAcC,EAEtE3B,EACJ,6FACIgC,EAAcC,YAAyBL,GACvCxB,EAAKC,YAAS,qBAAsB,QAAS,WAEnD,OACE,oCACE,kBAACa,EAAD,KACE,kBAACgB,EAAA,EAAD,CAAKnC,MATG,WASWC,YAAaA,IAChC,kBAACmB,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAZI,YAaJ,kBAACE,EAAD,KAASrB,KAGb,kBAAC,EAAD,CAAWY,MAAOA,KAEpB,kBAACuB,EAAA,EAAD,CAAgBC,MAAOJ,EAAa5B,GAAIA","file":"component---src-templates-fe-guide-index-tsx-7d66b79b7157697c1b0a.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { feGuideUrl } from '@/constant';\nimport { ListItem } from '@/components/common/List';\nimport { BlockLink } from '@/components/common/Link';\nimport createGA from '@/components/common/createGA';\n\ninterface GuideListItemProps {\n  id: string;\n  title: string;\n  description: string;\n}\n\nconst GuideItem = styled(ListItem)`\n  position: relative;\n  line-height: 1.5;\n  padding: 30px 0;\n  color: #222;\n  font-size: 16px;\n  border-bottom: 1px solid #e5e5e5;\n\n  @media (max-width: 720px) {\n    padding: 20px 0;\n  }\n`;\n\nconst ItemContent = styled.div`\n  margin-left: 0;\n\n  &:hover span {\n    color: #515ce6;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 26px;\n  font-weight: bold;\n  color: #222;\n\n  @media (max-width: 720px) {\n    font-size: 1.2rem;\n  }\n`;\n\nconst Description = styled.p`\n  margin-top: 15px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-break: break-word;\n  color: #333;\n  max-height: none;\n\n  @media (max-width: 720px) {\n    text-align: left;\n    display: -webkit-inline-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    font-size: 1rem;\n    line-height: 1.7rem;\n    color: #777;\n    margin-top: 7px;\n  }\n`;\n\nconst GuideListItem: React.FC<GuideListItemProps> = ({ id, title, description }) => {\n  const url = `${feGuideUrl.PREFIX}/${id}`;\n  const ga = createGA('FE Guide - detail', 'click', title);\n\n  return (\n    <GuideItem data-testid=\"guide-list\">\n      <ItemContent>\n        <BlockLink type=\"internal\" url={url} ga={ga}>\n          <Title data-testid=\"title\">{title}</Title>\n          <Description data-testid=\"description\">{description}</Description>\n        </BlockLink>\n      </ItemContent>\n    </GuideItem>\n  );\n};\n\nexport default GuideListItem;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport GuideListItem from '@/components/guide/GuideListItem';\nimport { List as CommonList } from '@/components/common/List';\n\ninterface GuideListProps {\n  posts: { edges: EdgeNode[] };\n}\n\ninterface EdgeNode {\n  node: {\n    frontmatter: {\n      id: string;\n      title: string;\n      description: string;\n    };\n  };\n}\n\nconst Container = styled.div`\n  max-width: 1060px;\n  margin: 0 auto;\n\n  @media (max-width: 1200px) {\n    padding: 0 12.5%;\n  }\n\n  @media (max-width: 720px) {\n    padding: 0;\n  }\n`;\n\nconst List = styled(CommonList)`\n  padding: 30px 0 100px;\n\n  & li:last-child {\n    border-bottom: none;\n  }\n\n  @media (max-width: 720px) {\n    padding: 0;\n  }\n`;\n\nconst GuideList: React.FC<GuideListProps> = ({ posts }) => (\n  <Container>\n    <List>\n      {posts.edges.map(({ node }) => {\n        const { id, title, description } = node.frontmatter;\n\n        return <GuideListItem key={id} id={id} title={title} description={description} />;\n      })}\n    </List>\n  </Container>\n);\n\nexport default GuideList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\n\nimport { GuideLink, ProductInfo } from '@t/components';\nimport { createProductSectionData } from '@/util';\nimport { feGuideUrl } from '@/constant';\nimport SEO from '@/components/SEO';\nimport GuideList from '@/components/guide/GuideList';\nimport SitemapSection from '@/components/main/sitemap/SitemapSection';\nimport createGA from '@/components/common/createGA';\n\nimport '@/query/feGuideQueryFragment';\n\ninterface IndexProps {\n  location: {\n    pathname: GuideLink;\n  };\n  data: {\n    allEnGuides: { edges: EdgeNode[] };\n    allGuides: { edges: EdgeNode[] };\n    allProductsJson: { edges: { node: ProductInfo }[] };\n  };\n}\n\ninterface EdgeNode {\n  node: {\n    frontmatter: {\n      id: string;\n      title: string;\n      description: string;\n    };\n  };\n}\n\nconst Contents = styled.div`\n  margin-top: 69px;\n  border-bottom: 1px solid #e5e5e5;\n\n  @media (max-width: 720px) {\n    padding: 0 20px;\n    margin-top: 56px;\n  }\n`;\n\nconst Header = styled.div`\n  padding: 60px 0;\n  background-color: #fafafa;\n  border-bottom: 1px solid #e4e6e9;\n\n  @media (max-width: 1200px) {\n    padding: 60px 12.5%;\n  }\n\n  @media (max-width: 720px) {\n    background-color: #fff;\n    padding: 25px 0;\n    border-bottom: 1px solid #ddd;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 1060px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h2`\n  font-size: 38px;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: #222;\n\n  @media (max-width: 720px) {\n    font-size: 2rem;\n  }\n`;\n\nconst Slogan = styled.p`\n  font-size: 16px;\n  margin: 15px 0 0;\n  color: #333;\n\n  @media (max-width: 720px) {\n    color: #222;\n    margin-top: 15px;\n    font-size: 1rem;\n    line-height: 1.6rem;\n  }\n`;\n\nconst FeGuideIndex: React.FC<IndexProps> = ({\n  location,\n  data: { allEnGuides, allGuides, allProductsJson },\n}) => {\n  const posts = location.pathname.indexOf(feGuideUrl.EN) > -1 ? allEnGuides : allGuides;\n  const title = 'FE Guide';\n  const description =\n    'Get packed with compass and map for Front-End Javascript development voyage with FE Guide.';\n  const sitemapData = createProductSectionData(allProductsJson);\n  const ga = createGA('FE Guide - sitemap', 'click', 'sitemap');\n\n  return (\n    <>\n      <Contents>\n        <SEO title={title} description={description} />\n        <Header>\n          <Container>\n            <Title>{title}</Title>\n            <Slogan>{description}</Slogan>\n          </Container>\n        </Header>\n        <GuideList posts={posts} />\n      </Contents>\n      <SitemapSection items={sitemapData} ga={ga} />\n    </>\n  );\n};\n\nexport const pageQuery = graphql`\n  query FeGuideIndex {\n    ...allGuides\n    ...allEnGuides\n\n    # query for each section\n    ...allProductsJson\n  }\n`;\n\nexport default FeGuideIndex;\n"],"sourceRoot":""}